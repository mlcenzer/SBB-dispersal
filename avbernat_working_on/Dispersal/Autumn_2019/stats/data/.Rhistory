cex=1.2, font=2, pos=pos, col=rand_colors[row])
midpoint <- as.duration(start_time + end_time ) / 2
file <- sprintf("[%s]", filename)
text(midpoint, channel_num + 0.2*direction, labels=file, cex=0.9, font=2, pos=pos, col=rand_colors[row])
#0.09* direction if don't squish
}
title(main=list(paste("Channel Letter", channel_letter), cex=2.2))
}
dev.off()
}
rm(list=ls())
setwd("/Users/anastasiabernat/Desktop/git_repositories/SBB-dispersal/avbernat_working_on/Dispersal/Winter_2020/stats")
library(lme4)
library(dplyr)
library(ggplotify)
library(gridExtra)
library(ggformula)
library(tidyselect)
library(zoo)
library(knitr)
library(kableExtra)
knitr::opts_chunk$set(echo = TRUE)
output_col = FALSE # Recommend changing this to TRUE if working in Base R or RStudio, and FALSE if generating an html
source("src/clean_flight_data.R") # Script that loads and cleans up the data
source("src/regression_output.R") # A script that cleans up regression outputs and prints in color or black and white
source("src/center_flight_data.R")
#source("get_warnings.R")
data <- read_flight_data("data/all_flight_data-Winter2020.csv")
data_all <- data[[1]]
data_tested <- data[[2]]
data_all <- data_all %>%
filter(trial_type != "T2")
data_all <- center_data(data_all)
data_tested <- data_all[data_all$tested == "yes",]
data_tested <- center_data(data_tested)
num_fem <- nrow(data_all[data_all$sex == "F",])
num_male <- nrow(data_all[data_all$sex == "M",])
num_tested_fem <- nrow(data_tested[data_tested$sex == "F",]) # not a unique value
num_tested_male <- nrow(data_tested[data_tested$sex == "M",]) # not a unique value
table0 <- data.frame("All" = c(num_fem, num_male),
"Tested" = c(num_tested_fem, num_tested_male))
rownames(table0) <- c("F", "M")
kable(table0) %>%
kable_styling(bootstrap_options = "striped", "hover", full_width = F)
all_data <- data[[1]]
unique_num_eggs <- nrow(unique(select(all_data[all_data$sex == "F" & all_data$eggs_b == 1,], ID, eggs_b)))
did_not_lay <- num_tested_fem - unique_num_eggs
table00 <- data.frame(did_not_lay, unique_num_eggs, num_tested_fem, round(unique_num_eggs/num_tested_fem,3))
rownames(table00) <- "Unique Values"
colnames(table00) <- c("Females That Didn't Lay Eggs", "Females That Laid Eggs", "Total Females", "Sample Prop")
kable(table00) %>%
kable_styling(bootstrap_options = "striped", "hover", full_width = F)
d <- data[[1]][data[[1]]$tested == "yes",]
trial2_sizes <-c()
trial1_sizes <- c()
female_sizes <- c()
male_sizes <- c()
pops <- unique(data_tested$population)
for (pop in pops) {
nF <- nrow(data_tested[data_tested$population == pop & data_tested$sex == "F",])
nM <- nrow(data_tested[data_tested$population == pop & data_tested$sex == "M",])
nT1 <- nrow(data_tested[data_tested$population == pop & data_tested$trial_type == "T1",])
nT2 <- nrow(data_tested[d$population == pop & d$trial_type == "T2",])
female_sizes <- c(female_sizes, nF)
male_sizes <- c(male_sizes, nM)
trial2_sizes <- c(trial2_sizes, nT2)
trial1_sizes <- c(trial1_sizes, nT1)
}
table1 <- data.frame(pops, female_sizes, male_sizes, trial1_sizes, trial2_sizes )
colnames(table1) <- c("Population", "Females", "Males", "Trial 1", "Trial 2")
kable(table1) %>%
kable_styling(bootstrap_options = "striped", "hover", full_width = F)  %>%
add_header_above(c(" ", "Sex Sample Sizes" = 2, "Trial Sample Sizes" =2)) %>%
add_header_above(c("Tested Bugs By Pop, Sex, and Trial Type (Unique)" = 5 ))
ndied <- sum(trial1_sizes ) - sum(trial2_sizes )
ndied <- data.frame(ndied)
colnames(ndied) <- "Number of bugs that died between T1 and T2"
kable(ndied) %>%
kable_styling(bootstrap_options = "striped", "hover", full_width = F)
pop_sample_sizes <- c()
for (pop in pops) {
n <- nrow(data_tested[data_tested$population == pop,])
pop_sample_sizes <- c(pop_sample_sizes, n)
}
pop_df <- data.frame(pops, pop_sample_sizes)
colnames(pop_df) <- c("population", "n_pop")
site_sample_sizes <- c()
sites <- unique(data_tested$site)
for (site in sites) {
n <- nrow(data_tested[data_tested$site == site,])
site_sample_sizes <- c(site_sample_sizes, n)
}
site_df <- data.frame(sites, site_sample_sizes)
colnames(site_df) <- c("site", "n_site")
coor_df <- unique(select(data_tested, population, site, latitude, longitude)) %>%
arrange(desc(latitude), population)
main <- merge(coor_df , site_df,by=c("site"))
table2 <- merge(main , pop_df,by=c("population"))
kable(table2) %>%
kable_styling(bootstrap_options = "striped", "hover", full_width = F)  %>%
add_header_above(c(" ", " ", "Coordinates" = 2, "Sample Sizes" = 2 )) %>%
add_header_above(c("Tested Bugs By Population and Site" = 6 ))
# adding host plant
host_plants = c("K. elegans", "K. elegans", "C. corindum", "C. corindum",
"K. elegans", "K. elegans", "K. elegans", "C. corindum",
"C. corindum", "C. corindum", "C. corindum", "C. corindum",
"C. corindum", "C. corindum","C. corindum","C. corindum")
table2b = cbind(host_plants, table2)
colnames(table2b)[1] <- c("host plant")
table2b <- table2b[order(-table2b$latitude),]
write.table(table2b, "tables/table1.csv", sep=",", row.names=FALSE)
rownames(table2b) <- NULL
kable(table2b) %>%
kable_styling(bootstrap_options = "striped", "hover", full_width = F)  %>%
add_header_above(c(" ", " ", " ", "Coordinates" = 2, "Sample Sizes" = 2 )) %>%
add_header_above(c("Tested Bugs By Host Plant, Population, and Site" = 7 ))
rownames(table2b) <- NULL
kable(table2b) %>%
kable_styling(bootstrap_options = "striped", "hover", full_width = F)  %>%
add_header_above(c(" ", " ", " ", "Coordinates" = 2, "Sample Sizes" = 2 )) %>%
add_header_above(c("Tested Bugs By Host Plant, Population, and Site" = 7 )) %>%
save_kable("test.pdf")
kable(table2b) %>%
kable_styling(bootstrap_options = "striped", "hover", full_width = F)  %>%
add_header_above(c(" ", " ", " ", "Coordinates" = 2, "Sample Sizes" = 2 )) %>%
add_header_above(c("Tested Bugs By Host Plant, Population, and Site" = 7 )) %>%
save_kable("test.pdf")
kable(table2b) %>%
kable_styling(bootstrap_options = "striped", "hover", full_width = F)  %>%
add_header_above(c(" ", " ", " ", "Coordinates" = 2, "Sample Sizes" = 2 )) %>%
add_header_above(c("Tested Bugs By Host Plant, Population, and Site" = 7 ))
kable(table2b) %>%
kable_styling(bootstrap_options = "striped", "hover", full_width = F)  %>%
add_header_above(c(" ", " ", " ", "Coordinates" = 2, "Sample Sizes" = 2 )) %>%
add_header_above(c("Tested Bugs By Host Plant, Population, and Site" = 7 )) %>%
save_kable("test.pdf")
??save_kable
kable(table2b) %>%
kable_styling(bootstrap_options = "striped", "hover", full_width = F)  %>%
add_header_above(c(" ", " ", " ", "Coordinates" = 2, "Sample Sizes" = 2 )) %>%
add_header_above(c("Tested Bugs By Host Plant, Population, and Site" = 7 )) %>%
save_kable("test.pdf")
install.packages("phantomjs")
install.packages("webshot")
install.packages("webshot")
library(webshot)
kable(table2b) %>%
kable_styling(bootstrap_options = "striped", "hover", full_width = F)  %>%
add_header_above(c(" ", " ", " ", "Coordinates" = 2, "Sample Sizes" = 2 )) %>%
add_header_above(c("Tested Bugs By Host Plant, Population, and Site" = 7 )) %>%
save_kable("test.pdf")
webshot::install_phantomjs()
rownames(table2b) <- NULL
kable(table2b) %>%
kable_styling(bootstrap_options = "striped", "hover", full_width = F)  %>%
add_header_above(c(" ", " ", " ", "Coordinates" = 2, "Sample Sizes" = 2 )) %>%
add_header_above(c("Tested Bugs By Host Plant, Population, and Site" = 7 )) %>%
save_kable("test.pdf")
paper_table = kable(table2b) %>%
kable_styling(bootstrap_options = "striped", "hover", full_width = F)  %>%
add_header_above(c(" ", " ", " ", "Coordinates" = 2, "Sample Sizes" = 2 )) %>%
add_header_above(c("Tested Bugs By Host Plant, Population, and Site" = 7 ))
paper_table
save_kable(paper_table,"test.pdf")
pwd()
getwd()
dir = "/Users/anastasiabernat/Desktop/git_repositories/SBB-dispersal/avbernat_working_on/Dispersal/Autumn_2019/stats/data"
setwd(dir)
read.csv("full_data3.csv")
data = read.csv("full_data3.csv")
unique(data$ID)
length(unique(data$ID))
900/60
3600/60
5400/60
rm(list=ls())
setwd("/Users/anastasiabernat/Desktop/git_repositories/SBB-dispersal/avbernat_working_on/Dispersal/Winter_2020/stats")
library(lme4)
library(dplyr)
library(ggplotify)
library(gridExtra)
library(ggformula)
library(tidyselect)
library(zoo)
library(knitr)
library(kableExtra)
library(webshot)
knitr::opts_chunk$set(echo = TRUE)
output_col = FALSE # Recommend changing this to TRUE if working in Base R or RStudio, and FALSE if generating an html
source("src/clean_flight_data.R") # Script that loads and cleans up the data
source("src/regression_output.R") # A script that cleans up regression outputs and prints in color or black and white
source("src/center_flight_data.R")
#source("get_warnings.R")
data <- read_flight_data("data/all_flight_data-Winter2020.csv")
data_all <- data[[1]]
data_tested <- data[[2]]
data_all <- data_all %>%
filter(trial_type != "T2")
data_all <- center_data(data_all)
data_tested <- data_all[data_all$tested == "yes",]
data_tested <- center_data(data_tested)
Fall = read.csv("/Users/anastasiabernat/Desktop/git_repositories/SBB-dispersal/avbernat_working_on/Dispersal/Autumn_2019/stats/data/full_data3.csv")
Fall
year = c("2019","2019","2019","2019","2020","2020")
dates = c("October 15 to October 23", "October 23 to October 29", "October 30 to November 4", "November 5 to November 8", "February 17 to February 28", "March 3 to March 10")
cbind(year,dates)
date = c("October 15 to October 23", "October 23 to October 29", "October 30 to November 4", "November 5 to November 8", "February 17 to February 28", "March 3 to March 10")
cbind(year,date)
year = c("2019","2019","2019","2019","2020","2020")
dates = c("October 15 to October 23", "October 23 to October 29", "October 30 to November 4", "November 5 to November 8", "February 17 to February 28", "March 3 to March 10")
cbind(year,dates)
exp_setup = c("30 min", "60 min", "90 min", "unlimited", "unlimited", "unlimited")
cbind(year,dates, exp_setup)
Fall
Fall$set == c(1,30)
Fall[Fall$set == c(1,30).]
Fall[Fall$set == c(1,30),]
Fall[Fall$set == c(1:30),]
Fall
Fall[Fall$set_number == c(1:30),]
Fall
Fall$set_number
class(Fall$set_number)
Fall %>%
filter(set_number = c(1:30))
Fall %>%
filter(set_number == c(1:30))
Fall
Fall %>%
filter(set_number == c(1,30))
c(1:30)
Fall %>%
filter(set_number == c(1:30))
Fall[Fall$set_number == c(1:30)]
Fall[Fall$set_number == c(1:30),]
Fall %>%
filter(set_number <= 30)
Fall %>%
filter(set_number == c(1:30))
Fall %>%
filter(set_number <= 30)
min30 = Fall %>%
filter(set_number <= 30)
nrow(min30)
min60 = Fall %>%
filter(set_number > 30 & set_number <= 52)
nrow(min60)
nrow(min30)
nrow(min60)
min60 = Fall %>%
filter(set_number > 52 & set_number <= 71)
min30 = Fall %>%
filter(set_number <= 30)
min60 = Fall %>%
filter(set_number > 30 & set_number <= 52)
min99 = Fall %>%
filter(set_number > 52 & set_number <= 71)
min90 = Fall %>%
filter(set_number > 52 & set_number <= 71)
nrow(min90)
unlimited = Fall %>%
filter(set_number <= 72)
nrow(unlimited)
unlimited = Fall %>%
filter(set_number >= 72)
nrow(unlimited)
nrow(min30)
nrow(min60)
nrow(min90)
nrow(unlimited)
min30 = Fall %>% filter(set_number <= 30)
unlimited = Fall %>% filter(set_number >= 72)
nrow(min30)
nrow(min60)
nrow(min90)
nrow(unlimited)
data_tested
data_tested$trial_type
data_tested %>% filter(trial_type =="T1")
T1 = data_tested %>% filter(trial_type =="T1")
T2 = data_tested %>% filter(trial_type =="T2")
n_tested = c(nrow(min30), nrow(min60), nrow(min90), nrow(unlimited), nrow(T1), nrow(T2))
cbind(year,dates, exp_setup, n_tested)
T2 = data_tested %>% filter(trial_type =="T2")
T2
data_tested$trial_type
data_tested
Fall = read.csv("/Users/anastasiabernat/Desktop/git_repositories/SBB-dispersal/avbernat_working_on/Dispersal/Autumn_2019/stats/data/full_data3.csv")
min30 = Fall %>% filter(set_number <= 30)
min60 = Fall %>% filter(set_number > 30 & set_number <= 52)
min90 = Fall %>% filter(set_number > 52 & set_number <= 71)
unlimited = Fall %>% filter(set_number >= 72)
T1 = data_tested %>% filter(trial_type =="T1")
#T2 = data_tested %>% filter(trial_type =="T2")
year = c("2019","2019","2019","2019","2020","2020")
dates = c("October 15 to October 23", "October 23 to October 29", "October 30 to November 4", "November 5 to November 8", "February 17 to February 28", "March 3 to March 10")
exp_setup = c("30 min", "60 min", "90 min", "unlimited", "unlimited", "unlimited")
n_tested = c(nrow(min30), nrow(min60), nrow(min90), nrow(unlimited), nrow(T1), "280")
cbind(year,dates, exp_setup, n_tested)
nrow(data_tested) - nrow(T1)
nrow(data_tested) - nrow(T1)
nrow(data_all) - nrow(T1)
View(data_all)
output_col = FALSE # Recommend changing this to TRUE if working in Base R or RStudio, and FALSE if generating an html
source("src/clean_flight_data.R") # Script that loads and cleans up the data
source("src/regression_output.R") # A script that cleans up regression outputs and prints in color or black and white
source("src/center_flight_data.R")
#source("get_warnings.R")
data <- read_flight_data("data/all_flight_data-Winter2020.csv")
data_all <- data[[1]]
data_tested <- data[[2]]
all_data <- data_all %>%
filter(trial_type != "T2")
all_data <- center_data(all_data)
data_tested <- all_data[all_data$tested == "yes",]
data_tested <- center_data(data_tested)
nrow(data_all) - nrow(T1)
T1 = all_data %>% filter(trial_type =="T1")
T1
T2 = all_data %>% filter(trial_type =="T2")
T2
T1 = data_all %>% filter(trial_type =="T1")
T2 = data_all %>% filter(trial_type =="T2")
T2
T1
n_tested = c(nrow(min30), nrow(min60), nrow(min90), nrow(unlimited), nrow(T1), nrow(T2))
cbind(year,dates, exp_setup, n_tested)
wing_morph = c("short and long", "short and long","short and long","long","long","long")
cbind(year,dates, exp_setup, n_tested, wing_morph)
table_season = cbind(year,dates, exp_setup, n_tested, wing_morph)
table_season = cbind(year,dates, exp_setup, n_tested, wing_morph)
rownames(table_season) <- c("Year", "Dates", "Experimental Setup", "N Tested", "Wing Morph")
table_season = cbind(year,dates, exp_setup, n_tested, wing_morph)
rownames(table_season) <- c("Year", "Dates", "Experimental Setup", "N Tested", "Wing Morph")
table_season
rownames(table_season)
table_season
table_season <- data.frame("Year" = year,
"Dates" = dates,
"Experimental Setup" = exp_setup,
"N Tested" = n_tested,
"Wing Morph" = wing_morph)
table_season
rownames(table_season) <- c("Year", "Dates", "Experimental Setup", "N Tested", "Wing Morph")
table_season = cbind(year,dates, exp_setup, n_tested, wing_morph)
colnames(table_season) <- c("Year", "Dates", "Experimental Setup", "N Tested", "Wing Morph")
table_season
kable(table_season) %>%
kable_styling(bootstrap_options = "striped", "hover", full_width = F)
paper_table = kable(table_season) %>%
kable_styling(bootstrap_options = "striped", "hover", full_width = F)
save_kable(paper_table, "test2.pdf")
rm(list=ls())
setwd("/Users/anastasiabernat/Desktop/git_repositories/SBB-dispersal/avbernat_working_on/Dispersal/Winter_2020/stats")
library(lme4)
library(dplyr)
library(ggplotify)
library(gridExtra)
library(ggformula)
library(tidyselect)
library(zoo)
library(knitr)
library(kableExtra)
library(webshot)
knitr::opts_chunk$set(echo = TRUE)
output_col = FALSE # Recommend changing this to TRUE if working in Base R or RStudio, and FALSE if generating an html
source("src/clean_flight_data.R") # Script that loads and cleans up the data
source("src/regression_output.R") # A script that cleans up regression outputs and prints in color or black and white
source("src/center_flight_data.R")
#source("get_warnings.R")
data <- read_flight_data("data/all_flight_data-Winter2020.csv")
data_all <- data[[1]]
data_tested <- data[[2]]
all_data <- data_all %>%
filter(trial_type != "T2")
all_data <- center_data(all_data)
data_tested <- all_data[all_data$tested == "yes",]
data_tested <- center_data(data_tested)
Fall = read.csv("/Users/anastasiabernat/Desktop/git_repositories/SBB-dispersal/avbernat_working_on/Dispersal/Autumn_2019/stats/data/full_data3.csv")
min30 = Fall %>% filter(set_number <= 30)
min60 = Fall %>% filter(set_number > 30 & set_number <= 52)
min90 = Fall %>% filter(set_number > 52 & set_number <= 71)
unlimited = Fall %>% filter(set_number >= 72)
T1 = data_all %>% filter(trial_type =="T1")
T2 = data_all %>% filter(trial_type =="T2")
year = c("2019","2019","2019","2019","2020","2020")
dates = c("October 15 to October 23", "October 23 to October 29", "October 30 to November 4", "November 5 to November 8", "February 17 to February 28", "March 3 to March 10")
exp_setup = c("30 min", "60 min", "90 min", "unlimited", "unlimited", "unlimited")
n_tested = c(nrow(min30), nrow(min60), nrow(min90), nrow(unlimited), nrow(T1), nrow(T2))
wing_morph = c("short and long", "short and long","short and long","long","long","long")
table_season = cbind(year,dates, exp_setup, n_tested, wing_morph)
colnames(table_season) <- c("Year", "Dates", "Experimental Setup", "N Tested", "Wing Morph")
paper_table = kable(table_season) %>%
kable_styling(bootstrap_options = "striped", "hover", full_width = F)
paper_table
#save_kable(paper_table, "table2.pdf")
num_fem <- nrow(data_all[data_all$sex == "F",])
num_male <- nrow(data_all[data_all$sex == "M",])
num_tested_fem <- nrow(data_tested[data_tested$sex == "F",]) # not a unique value
num_tested_male <- nrow(data_tested[data_tested$sex == "M",]) # not a unique value
table0 <- data.frame("All" = c(num_fem, num_male),
"Tested" = c(num_tested_fem, num_tested_male))
rownames(table0) <- c("F", "M")
kable(table0) %>%
kable_styling(bootstrap_options = "striped", "hover", full_width = F)
all_data <- data[[1]]
unique_num_eggs <- nrow(unique(select(all_data[all_data$sex == "F" & all_data$eggs_b == 1,], ID, eggs_b)))
did_not_lay <- num_tested_fem - unique_num_eggs
table00 <- data.frame(did_not_lay, unique_num_eggs, num_tested_fem, round(unique_num_eggs/num_tested_fem,3))
rownames(table00) <- "Unique Values"
colnames(table00) <- c("Females That Didn't Lay Eggs", "Females That Laid Eggs", "Total Females", "Sample Prop")
kable(table00) %>%
kable_styling(bootstrap_options = "striped", "hover", full_width = F)
d <- data[[1]][data[[1]]$tested == "yes",]
trial2_sizes <-c()
trial1_sizes <- c()
female_sizes <- c()
male_sizes <- c()
pops <- unique(data_tested$population)
for (pop in pops) {
nF <- nrow(data_tested[data_tested$population == pop & data_tested$sex == "F",])
nM <- nrow(data_tested[data_tested$population == pop & data_tested$sex == "M",])
nT1 <- nrow(data_tested[data_tested$population == pop & data_tested$trial_type == "T1",])
nT2 <- nrow(data_tested[d$population == pop & d$trial_type == "T2",])
female_sizes <- c(female_sizes, nF)
male_sizes <- c(male_sizes, nM)
trial2_sizes <- c(trial2_sizes, nT2)
trial1_sizes <- c(trial1_sizes, nT1)
}
table1 <- data.frame(pops, female_sizes, male_sizes, trial1_sizes, trial2_sizes )
colnames(table1) <- c("Population", "Females", "Males", "Trial 1", "Trial 2")
kable(table1) %>%
kable_styling(bootstrap_options = "striped", "hover", full_width = F)  %>%
add_header_above(c(" ", "Sex Sample Sizes" = 2, "Trial Sample Sizes" =2)) %>%
add_header_above(c("Tested Bugs By Pop, Sex, and Trial Type (Unique)" = 5 ))
ndied <- sum(trial1_sizes ) - sum(trial2_sizes )
ndied <- data.frame(ndied)
colnames(ndied) <- "Number of bugs that died between T1 and T2"
kable(ndied) %>%
kable_styling(bootstrap_options = "striped", "hover", full_width = F)
pop_sample_sizes <- c()
for (pop in pops) {
n <- nrow(data_tested[data_tested$population == pop,])
pop_sample_sizes <- c(pop_sample_sizes, n)
}
pop_df <- data.frame(pops, pop_sample_sizes)
colnames(pop_df) <- c("population", "n_pop")
site_sample_sizes <- c()
sites <- unique(data_tested$site)
for (site in sites) {
n <- nrow(data_tested[data_tested$site == site,])
site_sample_sizes <- c(site_sample_sizes, n)
}
site_df <- data.frame(sites, site_sample_sizes)
colnames(site_df) <- c("site", "n_site")
coor_df <- unique(select(data_tested, population, site, latitude, longitude)) %>%
arrange(desc(latitude), population)
main <- merge(coor_df , site_df,by=c("site"))
table2 <- merge(main , pop_df,by=c("population"))
kable(table2) %>%
kable_styling(bootstrap_options = "striped", "hover", full_width = F)  %>%
add_header_above(c(" ", " ", "Coordinates" = 2, "Sample Sizes" = 2 )) %>%
add_header_above(c("Tested Bugs By Population and Site" = 6 ))
# adding host plant
host_plants = c("K. elegans", "K. elegans", "C. corindum", "C. corindum",
"K. elegans", "K. elegans", "K. elegans", "C. corindum",
"C. corindum", "C. corindum", "C. corindum", "C. corindum",
"C. corindum", "C. corindum","C. corindum","C. corindum")
table2b = cbind(host_plants, table2)
colnames(table2b)[1] <- c("host plant")
table2b <- table2b[order(-table2b$latitude),]
write.table(table2b, "tables/table1.csv", sep=",", row.names=FALSE)
rownames(table2b) <- NULL
paper_table = kable(table2b) %>%
kable_styling(bootstrap_options = "striped", "hover", full_width = F)  %>%
add_header_above(c(" ", " ", " ", "Coordinates" = 2, "Sample Sizes" = 2 )) %>%
add_header_above(c("Tested Bugs By Host Plant, Population, and Site" = 7 ))
paper_table
#save_kable(paper_table,"test.pdf")
Fall %>% filter(mass != 0)
mass = Fall %>% filter(mass != 0)
length(unique(mass$ID))
length(unique(min30$ID))
length(unique(min60$ID))
length(unique(min90$ID))
length(unique(unlimited$ID))
Fall = read.csv("/Users/anastasiabernat/Desktop/git_repositories/SBB-dispersal/avbernat_working_on/Dispersal/Autumn_2019/stats/data/full_data3.csv")
mass = Fall %>% filter(mass != 0)
length(unique(mass$ID))
min30 = Fall %>% filter(set_number <= 30) # where is set002?
min60 = Fall %>% filter(set_number > 30 & set_number <= 52)
min90 = Fall %>% filter(set_number > 52 & set_number <= 71)
unlimited = Fall %>% filter(set_number >= 72)
T1 = data_all %>% filter(trial_type =="T1")
T2 = data_all %>% filter(trial_type =="T2")
n_30 = length(unique(min30$ID))
n_60 = length(unique(min60$ID))
n_90 = length(unique(min90$ID))
n_unlimited = length(unique(unlimited$ID))
season = c("Fall", "Fall", "Fall", "Fall", "Winter", "Winter")
year = c("2019","2019","2019","2019","2020","2020")
dates = c("October 15 to October 23", "October 23 to October 29", "October 30 to November 4", "November 5 to November 8", "February 17 to February 28", "March 3 to March 10")
exp_setup = c("30 min", "60 min", "90 min", "unlimited", "unlimited", "unlimited")
n_tested = c(n_30, n_60, n_90, n_unlimited, nrow(T1), nrow(T2))
wing_morph = c("short and long", "short and long","short and long","long","long","long")
table_season = cbind(season, year,dates, exp_setup, n_tested, wing_morph)
colnames(table_season) <- c("Season", "Year", "Dates", "Experimental Setup", "N Tested", "Wing Morph")
paper_table = kable(table_season) %>%
kable_styling(bootstrap_options = "striped", "hover", full_width = F)
paper_table
#save_kable(paper_table, "table2.pdf")
save_kable(paper_table, "table2.pdf")
