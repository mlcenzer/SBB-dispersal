points(x = 1174723.0528, y = 12810472.1565, col = 2, pch = 16, cex = 2)
plot(Keys.UTM,
axes = TRUE,
add = TRUE)
points(x = Loc[,1],
y = Loc[,2],
cex = 0.5,
col = "black",
pch = 16)
# This is not working...
##########################################
# And the rest is a matter of plotting the
# correlation values, contour of the coast and the
# sampling locations.
PlotField2(Corr,
mesh.barrier,
ContourMap = Keys.UTM,
zlim = c(0.2, 1),
Add = FALSE)
#It will find the closest point on the mesh:
points(x = 1174723.0528, y = 12810472.1565, col = 2, pch = 16, cex = 2)
plot(Keys.UTM,
axes = TRUE,
add = TRUE)
points(x = Loc[,1],
y = Loc[,2],
cex = 0.5,
col = "black",
pch = 16)
# This is not working...
##########################################
# And the rest is a matter of plotting the
# correlation values, contour of the coast and the
# sampling locations.
PlotField2(Corr,
mesh.barrier,
ContourMap = Keys.UTM,
zlim = c(0.2, 1),
Add = FALSE)
#It will find the closest point on the mesh:
points(x = 1174723.0528, y = 12810472.1565, col = 2, pch = 16, cex = 2)
plot(Keys.UTM,
axes = TRUE,
add = TRUE)
points(x = Loc[,1],
y = Loc[,2],
cex = 0.5,
col = "black",
pch = 16)
# This is not working...
##########################################
# And the rest is a matter of plotting the
# correlation values, contour of the coast and the
# sampling locations.
PlotField2(Corr,
mesh.barrier,
ContourMap = Keys.UTM,
zlim = c(0.2, 1),
Add = FALSE)
#It will find the closest point on the mesh:
points(x = 1174723.0528, y = 12810472.1565, col = 2, pch = 16, cex = 2)
plot(Keys.UTM,
axes = TRUE,
add = TRUE)
points(x = Loc[,1],
y = Loc[,2],
cex = 0.5,
col = "black",
pch = 16)
# This is not working...
##########################################
setwd("~/Desktop/git_repositories/SBB-dispersal/avbernat_working_on/Dispersal/Summer_2021/windaq_processing/data/")
masterlist<-read.csv("masterlist.csv", header=TRUE, sep=",", quote="", stringsAsFactors=FALSE)
live_data<-masterlist[masterlist$died!="Y" & masterlist$S.wing!="Y",]
rm(list=ls())
setwd("~/Desktop/git_repositories/SBB-dispersal/avbernat_working_on/Dispersal/Summer_2021/windaq_processing/data/")
masterlist<-read.csv("masterlist.csv", header=TRUE, sep=",", quote="", stringsAsFactors=FALSE)
alivedata<-masterlist[masterlist$died!="Y" & masterlist$S.wing!="Y",]
eggdata = read.csv("egg_tube_data.csv", header=TRUE, sep=",", quote="", stringsAsFactors=FALSE)
rm(list=ls())
setwd("~/Desktop/git_repositories/SBB-dispersal/avbernat_working_on/Dispersal/Summer_2021/windaq_processing/data/")
masterlist = read.csv("masterlist.csv", header=TRUE, sep=",", quote="", stringsAsFactors=FALSE)
alivedata = masterlist[masterlist$died!="Y" & masterlist$S.wing!="Y",]
motherdata = read.csv("mother_laying_bydate.csv", header=TRUE, sep=",", quote="", stringsAsFactors=FALSE)
eggdata = read.csv("egg_tube_data.csv", header=TRUE, sep=",", quote="", stringsAsFactors=FALSE)
head(alivedata)
deaddata = masterlist[masterlist$died=="Y",]
deaddata
head(deaddata)
deaddata$ID
head(motherdata)
head(eggdata)
eggdata$`dead?` = ""
deaddata$ID
head(motherdata)
head(eggdata)
for (i in 1:nrow(eggdata)) {
id = eggdata$ID[i]
print(id)
}
for (i in 1:nrow(eggdata)) {
print(i)
#id = eggdata$ID[i]
#print(id)
}
eggdata$MID[1]
for (i in 1:nrow(eggdata)) {
print(i)
mid = eggdata$MID[i]
print(mid)
}
for (i in 1:nrow(eggdata)) {
mid = eggdata$MID[i]
print(mid)
}
eggdata$MID[1]
eggdata$MID[2]
for (i in 1:nrow(eggdata)) {
mid = eggdata$MID[i]
print(mid)
}
last_input = 1492
for (i in 1:last_input) {
mid = eggdata$MID[i]
print(mid)
}
eggdata$MID[last_input]
eggdata$MID[last_input]
last_input = 1392
eggdata$MID[last_input]
nrow-492
last_input = 492
eggdata$MID[last_input]
eggdata$MID[last_input]
last_input = 491
eggdata$MID[last_input]
eggdata$MID[490]
eggdata$MID[485]
eggdata$MID[465]
eggdata$MID[445]
eggdata$MID[435]
eggdata$MID[405]
eggdata$MID[425]
eggdata$MID[423]
eggdata$MID[424]
eggdata$MID[425]
eggdata$MID[426]
eggdata$MID[427]
eggdata$MID[428]
eggdata$MID[429]
eggdata$MID[430]
eggdata$MID[431]
eggdata$MID[432]
eggdata$MID[433]
last_input = 432
for (i in 1:last_input) {
mid = eggdata$MID[i]
print(mid)
}
last_input = 432
for (i in 1:last_input) {
mid = eggdata$MID[i]
if (mid %in% deaddata$ID) {
print(mid)
}
}
last_input = 432
for (i in 1:last_input) {
mid = eggdata$MID[i]
if (mid %in% deaddata$ID) {
eggdata$`dead?` = "dead"
print(mid)
}
}
eggdata$`dead?`
rm(list=ls())
setwd("~/Desktop/git_repositories/SBB-dispersal/avbernat_working_on/Dispersal/Summer_2021/windaq_processing/data/")
masterlist = read.csv("masterlist.csv", header=TRUE, sep=",", quote="", stringsAsFactors=FALSE)
deaddata = masterlist[masterlist$died=="Y",]
motherdata = read.csv("mother_laying_bydate.csv", header=TRUE, sep=",", quote="", stringsAsFactors=FALSE)
eggdata = read.csv("egg_tube_data.csv", header=TRUE, sep=",", quote="", stringsAsFactors=FALSE)
eggdata$`dead?` = ""
last_input = 432
for (i in 1:last_input) {
mid = eggdata$MID[i]
if (mid %in% deaddata$ID) {
eggdata$`dead?`[i] = "dead"
print(mid)
}
}
eggdata$`dead?`
alive_eggs = eggdata[eggdata$`died?`=="dead",]
rm(list=ls())
setwd("~/Desktop/git_repositories/SBB-dispersal/avbernat_working_on/Dispersal/Summer_2021/windaq_processing/data/")
masterlist = read.csv("masterlist.csv", header=TRUE, sep=",", quote="", stringsAsFactors=FALSE)
deaddata = masterlist[masterlist$died=="Y",]
motherdata = read.csv("mother_laying_bydate.csv", header=TRUE, sep=",", quote="", stringsAsFactors=FALSE)
eggdata = read.csv("egg_tube_data.csv", header=TRUE, sep=",", quote="", stringsAsFactors=FALSE)
eggdata$`dead?` = ""
last_input = 432
for (i in 1:last_input) {
mid = eggdata$MID[i]
if (mid %in% deaddata$ID) {
eggdata$`dead?`[i] = "yes"
print(mid)
}
}
eggdata[eggdata$`died?`=="yes",]
alive_eggs = eggdata[eggdata$`dead?`=="yes",]
alive_eggs
alive_eggs$gen1_ID
alive_eggs$MID
alive_eggs = eggdata[eggdata$`dead?`!="yes",]
alive_eggs$MID
rm(list=ls())
rm(list=ls())
rm(list=ls())
rm(list=ls())
setwd("~/Desktop/git_repositories/SBB-dispersal/avbernat_working_on/Dispersal/Summer_2021/windaq_processing/data/")
masterlist = read.csv("masterlist.csv", header=TRUE, sep=",", quote="", stringsAsFactors=FALSE)
deaddata = masterlist[masterlist$died=="Y",]
motherdata = read.csv("mother_laying_bydate.csv", header=TRUE, sep=",", quote="", stringsAsFactors=FALSE)
eggdata = read.csv("egg_tube_data.csv", header=TRUE, sep=",", quote="", stringsAsFactors=FALSE)
eggdata$`dead?` = ""
eggdata = eggdata[eggdata$MID!="NA",]
eggdata = eggdata[eggdata$MID != NA,]
eggdata$MID
unique(eggdata$MID)
rm(list=ls())
setwd("~/Desktop/git_repositories/SBB-dispersal/avbernat_working_on/Dispersal/Summer_2021/windaq_processing/data/")
masterlist = read.csv("masterlist.csv", header=TRUE, sep=",", quote="", stringsAsFactors=FALSE)
deaddata = masterlist[masterlist$died=="Y",]
motherdata = read.csv("mother_laying_bydate.csv", header=TRUE, sep=",", quote="", stringsAsFactors=FALSE)
eggdata = read.csv("egg_tube_data.csv", header=TRUE, sep=",", quote="", stringsAsFactors=FALSE)
eggdata$`dead?` = ""
unique(eggdata$MID)
class(eggdata$MID)
eggdata$MID = as.character(eggdata$MID)
eggdata = eggdata[eggdata$MID != "NA",]
eggdata
class(eggdata$MID)
unique(eggdata$MID)
eggdata = eggdata[eggdata$MID != NA,]
unique(eggdata$MID)
eggdata = eggdata[!is.na(eggdata$MID),]
rm(list=ls())
t=ls())
t=ls())
t=ls())
t=ls())
rm(list=ls())
setwd("~/Desktop/git_repositories/SBB-dispersal/avbernat_working_on/Dispersal/Summer_2021/windaq_processing/data/")
masterlist = read.csv("masterlist.csv", header=TRUE, sep=",", quote="", stringsAsFactors=FALSE)
deaddata = masterlist[masterlist$died=="Y",]
motherdata = read.csv("mother_laying_bydate.csv", header=TRUE, sep=",", quote="", stringsAsFactors=FALSE)
eggdata = read.csv("egg_tube_data.csv", header=TRUE, sep=",", quote="", stringsAsFactors=FALSE)
eggdata$`dead?` = ""
eggdata = eggdata[!is.na(eggdata$MID),]
unique(eggdata$MID)
for (i in 1:nrow(egg_data)) {
mid = eggdata$MID[i]
if (mid %in% deaddata$ID) {
eggdata$`dead?`[i] = "yes"
print(mid)
}
}
for (i in 1:nrow(eggdata)) {
mid = eggdata$MID[i]
if (mid %in% deaddata$ID) {
eggdata$`dead?`[i] = "yes"
print(mid)
}
}
alive_eggs = eggdata[eggdata$`dead?`!="yes",]
alive_eggs$MID
unique(alive_eggs$MID)
cbind(alive_eggs$MID, alive_eggs$pop)
unique(cbind(alive_eggs$MID, alive_eggs$pop))
hist(alive_eggs$hatch_date)
# what is the date distribution?
library(lubridate)
?as.date
??as.Date
uniqe(alive_eggs$hatch_date)
unique(alive_eggs$hatch_date)
alive_eggs[alive_eggs$hatch_date !="",]
hatched_eggs = alive_eggs[alive_eggs$hatch_date !="",]
hatched = alive_eggs[alive_eggs$hatch_date !="",]
as.yearmon(hatched$hatch_date, "%m.%d.%y")
library(zoo)
as.yearmon(hatched$hatch_date, "%m.%d.%y")
ymd(hatched$hatch_date, "%m.%d.%y")
as.yearmon
as.yearmon(hatched$hatch_date, "%m.%d.%y")
as.Date(hatched$hatch_date)
as.POSIXct(hatched$hatch_date)
dny(hatched$hatch_date, "%m.%d.%y")
dmy(hatched$hatch_date, "%m.%d.%y")
dmy(hatched$hatch_date)
?dmy
as.yearmon(hatched$hatch_date, "%m.%d.%y")
as.daymon(hatched$hatch_date, "%m.%d.%y")
as.Date(hatched$hatch_date, "%m.%b.%y")
as.Date(hatched$hatch_date, "%m.%d.%y")
rm(list=ls())
setwd("~/Desktop/git_repositories/SBB-dispersal/avbernat_working_on/Dispersal/Summer_2021/windaq_processing/data/")
masterlist = read.csv("masterlist.csv", header=TRUE, sep=",", quote="", stringsAsFactors=FALSE)
deaddata = masterlist[masterlist$died=="Y",]
motherdata = read.csv("mother_laying_bydate.csv", header=TRUE, sep=",", quote="", stringsAsFactors=FALSE)
eggdata = read.csv("egg_tube_data.csv", header=TRUE, sep=",", quote="", stringsAsFactors=FALSE)
eggdata$`dead?` = ""
eggdata = eggdata[!is.na(eggdata$MID),]
last_input = 432
for (i in 1:nrow(eggdata)) {
mid = eggdata$MID[i]
if (mid %in% deaddata$ID) {
eggdata$`dead?`[i] = "yes"
print(mid)
}
}
alive_eggs = eggdata[eggdata$`dead?`!="yes",]
# who is left?
unique(cbind(alive_eggs$MID, alive_eggs$pop)) # 3 KL and 1 PK
# what is the date distribution?
#library(lubridate)
#library(zoo)
hatched = alive_eggs[alive_eggs$hatch_date !="",]
as.Date(hatched$hatch_date, "%m.%d.%y")
hatched$hatch_date = as.Date(hatched$hatch_date, "%m.%d.%y")
unique(alive_eggs$hatch_date)
hist(alive_eggs$hatch_date)
hatched$hatch_date = as.Date(hatched$hatch_date, "%m.%d.%y")
unique(alive_eggs$hatch_date)
as.Date(hatched$hatch_date, "%m.%d.%y")
class(as.Date(hatched$hatch_date, "%m.%d.%y"))
dates = as.Date(hatched$hatch_date, "%m.%d.%y")
hatched$hatch_date = dates
unique(alive_eggs$hatch_date)
hatched$date = dates
unique(alive_eggs$date)
hatched$date
rm(list=ls())
setwd("~/Desktop/git_repositories/SBB-dispersal/avbernat_working_on/Dispersal/Summer_2021/windaq_processing/data/")
masterlist = read.csv("masterlist.csv", header=TRUE, sep=",", quote="", stringsAsFactors=FALSE)
deaddata = masterlist[masterlist$died=="Y",]
motherdata = read.csv("mother_laying_bydate.csv", header=TRUE, sep=",", quote="", stringsAsFactors=FALSE)
eggdata = read.csv("egg_tube_data.csv", header=TRUE, sep=",", quote="", stringsAsFactors=FALSE)
eggdata$`dead?` = ""
eggdata = eggdata[!is.na(eggdata$MID),]
last_input = 432
for (i in 1:nrow(eggdata)) {
mid = eggdata$MID[i]
if (mid %in% deaddata$ID) {
eggdata$`dead?`[i] = "yes"
print(mid)
}
}
alive_eggs = eggdata[eggdata$`dead?`!="yes",]
# who is left?
unique(cbind(alive_eggs$MID, alive_eggs$pop)) # 3 KL and 1 PK
hatched = alive_eggs[alive_eggs$hatch_date !="",]
dates = as.Date(hatched$hatch_date, "%m.%d.%y")
hatched$date = dates
unique(alive_eggs$date)
hist(alive_eggs$hatch_date)
hist(alive_eggs$date)
unique(hatched$date)
hist(hatched$date)
hist(hatched$date, breaks=1)
hist(hatched$date, breaks=2)
hist(hatched$date, breaks=3)
hist(hatched$date, breaks=7)
hist(hatched$date, breaks=14)
?hist
hist(hatched$date, breaks=14, freq=TRUE)
library(ggplot2)
ggplot(hatched, aes(x=date, fill=pop)) +
geom_histogram()
unique(eggdata$MID)
unique(cbind(eggdata$MID, eggdata$pop)
unique(cbind(eggdata$MID, eggdata$pop))
unique(cbind(eggdata$MID, eggdata$pop))
rm(list=ls())
setwd("~/Desktop/git_repositories/SBB-dispersal/avbernat_working_on/Dispersal/Summer_2021/windaq_processing/data/")
masterlist = read.csv("masterlist.csv", header=TRUE, sep=",", quote="", stringsAsFactors=FALSE)
deaddata = masterlist[masterlist$died=="Y",]
motherdata = read.csv("mother_laying_bydate.csv", header=TRUE, sep=",", quote="", stringsAsFactors=FALSE)
eggdata = read.csv("egg_tube_data.csv", header=TRUE, sep=",", quote="", stringsAsFactors=FALSE)
eggdata$`dead?` = ""
unique(cbind(eggdata$MID, eggdata$pop))
eggdata = eggdata[!is.na(eggdata$MID),]
last_input = 432
for (i in 1:nrow(eggdata)) {
mid = eggdata$MID[i]
if (mid %in% deaddata$ID) {
eggdata$`dead?`[i] = "yes"
print(mid)
}
}
alive_eggs = eggdata[eggdata$`dead?`!="yes",]
# who is left?
unique(cbind(alive_eggs$MID, alive_eggs$pop)) # 3 KL and 1 PK
hatched = alive_eggs[alive_eggs$hatch_date !="",]
dates = as.Date(hatched$hatch_date, "%m.%d.%y")
hatched$date = dates
unique(hatched$date)
hist(hatched$date, breaks=14, freq=TRUE)
library(ggplot2)
ggplot(hatched, aes(x=date, fill=pop)) +
geom_histogram()
deadbugs
deaddata
deaddata$ID
PKmoms = c("317", "103", "329", "9", "339")
LPmoms = c("247", "153", "262", "363", "164", "263", "61")
HSmoms = c("24", "28", "349", "355", "229", "356", "232",
"348", "33", "22", "29", "129", "41")
deaddata$ID
class(deaddata$ID)
PKmoms = c(317, 103, 329, 9, 339)
LPmoms = c(247, 153, 262, 363, 164, 263, 61)
PKmoms = c(317, 103, 329, 9, 339)
LPmoms = c(247, 153, 262, 363, 164, 263, 61)
HSmoms = c(24, 28, 349, 355, 229, 356, 232,
348, 33, 22, 29, 129, 41)
deaddata$ID  == PKmoms
for (id in deaddata$ID) {
if (id %in% PKmoms) {
cat("PK", id)
}
}
for (id in deaddata$ID) {
if (id %in% PKmoms) {
cat("PK", id)
}
if (id %in% LPmoms) {
cat("LP", id)
}
if (id %in% HSmoms) {
cat("HS", id)
}
}
print(id)
for (id in deaddata$ID) {
print(id)
if (id %in% PKmoms) {
cat("PK", id)
}
if (id %in% LPmoms) {
cat("LP", id)
}
if (id %in% HSmoms) {
cat("HS", id)
}
}
for (id in deaddata$ID) {
if (247 %in% PKmoms) {
cat("PK", id)
}
if (id %in% LPmoms) {
cat("LP", id)
}
if (id %in% HSmoms) {
cat("HS", id)
}
}
cat("PK", "hi")
n
for (id in deaddata$ID) {
if (247 %in% PKmoms) {
cat("PK", "hi")
}
if (id %in% LPmoms) {
cat("LP", id)
}
if (id %in% HSmoms) {
cat("HS", id)
}
}
for (id in deaddata$ID) {
if (247 %in% PKmoms) {
cat("PK", "hi")
}
if (id %in% LPmoms) {
cat("LP", id)
}
if (id %in% HSmoms) {
cat("HS", id)
}
}
for (id in deaddata$ID) {
if (317 %in% PKmoms) {
cat("PK", "hi")
}
if (id %in% LPmoms) {
cat("LP", id)
}
if (id %in% HSmoms) {
cat("HS", id)
}
}
for (id in deaddata$ID) {
if (247 %in% PKmoms) {
cat("PK", id)
}
if (id %in% LPmoms) {
cat("LP", id)
}
if (id %in% HSmoms) {
cat("HS", id)
}
}
