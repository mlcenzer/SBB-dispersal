##that from being confounding (eg, males may have been less likely to die, or had less biased mortality by host).
## AB: I know we talke about this, does this mean this is a pool size issue or sex-based.
##mass by host
data_temp<-aggregate(f_prob~host_c*mass_block, data=d, FUN=mean)
data_temp$n<-aggregate(f_prob~host_c*mass_block, data=d, FUN=length)$f_prob
plot(data_temp$f_prob~data_temp$mass_block, pch=19, col=c(rgb(1,0.1,0,0.8),rgb(0,1,0.8,0.8))[as.factor(data_temp$host_c)], ylab="Flight probability", xlab="Mass")
##Here, we can see that the effect of mass is clear on GRT (red) but weak on BV (blue)
##wing2body by host
data_temp<-aggregate(f_prob~host_c*wing2body_block, data=d, FUN=mean)
data_temp$n<-aggregate(f_prob~host_c*wing2body_block, data=d, FUN=length)$f_prob
plot(data_temp$f_prob~data_temp$wing2body_block, pch=19, col=c(rgb(1,0.1,0,0.8),rgb(0,1,0.8,0.8))[as.factor(data_temp$host_c)], , ylab="Flight probability", xlab="wing-to-body ratio")
##Here, we can see that the positive effect of wing2body ratio is clear on GRT (red) and on BV (blue)
##average days from start by host
data_temp<-aggregate(f_prob~host_c*days_block, data=d, FUN=mean)
data_temp$n<-aggregate(f_prob~host_c*days_block, data=d, FUN=length)$f_prob
plot(data_temp$f_prob~data_temp$days_block, pch=19, col=c(rgb(1,0.1,0,0.8),rgb(0,1,0.8,0.8))[as.factor(data_temp$host_c)], , ylab="Flight probability", xlab="Days from start")
##Here we can see no clear impact of days from start when separated by host
}
six_plots()
plot(data_male$average_mass, data_male$num_flew)
gf_point(num_flew ~ average_mass, data=d) +
geom_smooth(method='lm')
p1 <- gf_point(num_flew ~ average_mass, col=~host_plant, data=d[d$average_mass_c < 0,], title="(a)   avgmass_c <0") +
geom_smooth(method='lm')
d[d$average_mass_c < 0,]
d
d[d$avg_mass_c < 0,]
d$average_mass
d$average_mass_c
d_all$average_mass_c
d_all$average_mass
d
data <- read_flight_data("data/all_flight_data-Winter2020.csv")
data_all <- data[[1]]
data_tested <- data[[2]]
d <- data_tested %>%
group_by(ID, sex,population, site, host_plant, latitude, longitude, total_eggs,
beak, thorax, wing, body, w_morph, morph_notes, tested,
host_c, sex_c, w_morph_c, lat_c, sym_dist, sym_dist_s, total_eggs_c,
beak_c, thorax_c, thorax_s, body_c, wing_c, wing2body, wing2body_c, wing2body_s) %>%
summarise_all(funs(list(na.omit(.))))
d$num_flew <- 0
d$num_notflew <- 0
d$average_mass <- 0
d$avg_days <- 0
for(row in 1:length(d$flew_b)){
n_flew <- sum(d$flew_b[[row]] == 1) # total number of times did fly among trails
d$num_flew[[row]] <- n_flew
n_notflew <- sum(d$flew_b[[row]] == 0) # total number of times did not fly among trails
d$num_notflew[[row]] <- n_notflew
avg_mass <- mean(d$mass[[row]]) # average mass
d$average_mass[[row]] <- avg_mass
avg_days <- mean(d$days_from_start[[row]]) # average days
d$avg_days[[row]] <- avg_days
}
d_all <- select(d, -filename, -channel_letter, -set_number) ##MC: changed the name here to avoid re-loading all data to generate male and female only centered datasets
d_all <- center_data(d_all, is_not_binded = FALSE)
d_all
d_all
d_all
rm(list=ls())
dir = "~/Desktop/git_repositories/SBB-dispersal/avbernat_working_on/Dispersal/Winter_2020/stats/"
setwd(dir)
library(lme4)
library(dplyr)
library(ggplotify)
library(gridExtra)
library(ggformula)
library(tidyselect)
library(zoo)
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_knit$set(root.dir = dir)
getwd()
output_col = TRUE # Recommend changing this to TRUE if working in Base R or RStudio, and FALSE if generating an html
source("src/clean_flight_data.R") # Script that loads and cleans up the data
source("src/regression_output.R") # A script that cleans up regression outputs and prints in color or black and white
source("src/center_flight_data.R")
source("src/get_warnings.R")
data <- read_flight_data("data/all_flight_data-Winter2020.csv")
data_all <- data[[1]]
data_tested <- data[[2]]
d <- data_tested %>%
group_by(ID, sex,population, site, host_plant, latitude, longitude, total_eggs,
beak, thorax, wing, body, w_morph, morph_notes, tested,
host_c, sex_c, w_morph_c, lat_c, sym_dist, sym_dist_s, total_eggs_c,
beak_c, thorax_c, thorax_s, body_c, wing_c, wing2body, wing2body_c, wing2body_s) %>%
summarise_all(funs(list(na.omit(.))))
d$num_flew <- 0
d$num_notflew <- 0
d$average_mass <- 0
d$avg_days <- 0
for(row in 1:length(d$flew_b)){
n_flew <- sum(d$flew_b[[row]] == 1) # total number of times did fly among trails
d$num_flew[[row]] <- n_flew
n_notflew <- sum(d$flew_b[[row]] == 0) # total number of times did not fly among trails
d$num_notflew[[row]] <- n_notflew
avg_mass <- mean(d$mass[[row]]) # average mass
d$average_mass[[row]] <- avg_mass
avg_days <- mean(d$days_from_start[[row]]) # average days
d$avg_days[[row]] <- avg_days
}
d_all <- select(d, -filename, -channel_letter, -set_number) ##MC: changed the name here to avoid re-loading all data to generate male and female only centered datasets
d_all <- center_data(d_all, is_not_binded = FALSE)
d_all
d_all
d_all
d_all
# average days from start; this deals with the problem of individuals who were only tested early, who will have a low value here, and with any chance individuals who happened to get in early or late in both trials.
d_all$avg_days_c <- d_all$avg_days - mean(d_all$avg_days, na.rm=TRUE)
## Log-square-root transformation; this transformation gets average_mass to act normal and not give haywire effect estimates
## AB: Log-square-root transformation - does neither work on their own?
d_all$average_mass_trans <- log(sqrt(d_all$average_mass)) - mean(log(sqrt(d_all$average_mass)), na.rm=TRUE)
## Log-square-root transformation; this transformation gets wing2body ratio to act normal and not give haywire effect estimates; note that this has an inverse relationship with wing2body ratio itself, so effect estimate directions need to be flipped for interpretation.
d_all$wing2body_trans <- log(sqrt(0.85-d_all$wing2body)) - mean(log(sqrt(0.85-d_all$wing2body)), na.rm=TRUE)
# wing2body - take out a constant
# Compare Number of Trials a Bug Flew in to Average Days
d_all$num_trials <- 0
d_all$num_trials <- rowSums(d_all[,c("num_flew", "num_notflew")])
# Scatter Plot
# AB: some bugs we couldn't find early on in the bins and were tested into trial 2 time. Some bugs were also accidentally tested twice in trial 1.
s <- ggplot(d_all, aes(x=avg_days, y=num_trials))  +
geom_point(size=2, shape=23)
# Histogram
d_all$num_trials <- as.factor(rowSums(d_all[,c("num_flew", "num_notflew")]))
h <- ggplot(d_all, aes(x=avg_days, color=num_trials)) +
geom_histogram(binwidth=1, fill="white")+ # removed argument position="dodge"
theme(legend.position="top") +
scale_color_manual(values=c("#999999", "#E69F00", "#56B4E9")) +
scale_fill_manual(values=c("#999999", "#E69F00", "#56B4E9"))
grid.arrange(s, h, nrow=1)
d <- center_data(d_all, is_not_binded = FALSE)
d
# Overall average_mass vs. num_flew trend:
gf_point(num_flew ~ average_mass, data=d) +
geom_smooth(method='lm')
p1 <- gf_point(num_flew ~ average_mass, col=~host_plant, data=d[d$average_mass_c < 0,], title="(a)   avgmass_c <0") +
geom_smooth(method='lm')
p2 <- gf_point(num_flew ~ average_mass, col=~host_plant, data=d[d$average_mass_c > 0,], title="(b)   avgmass_c >0") +
geom_smooth(method='lm')
grid.arrange(p1,p2, nrow=2)
# Overall average_mass vs. num_flew trend:
gf_point(num_flew ~ average_mass, data=d) +
geom_smooth(method='lm')  +
ggtitle("Your Title Here")
gf_point(num_flew ~ average_mass, data=d) +
geom_smooth(method='lm')  +
ggtitle("All Data: Number Times Flew vs. Average Mass (g)")
p3 <- gf_point(num_notflew ~ average_mass, col=~host_plant, data=d[d$average_mass_c < 0,], title="(a)   avgmass_c <0") +
geom_smooth(method='lm')
p4 <- gf_point(num_notflew ~ average_mass, col=~host_plant, data=d[d$average_mass_c > 0,], title="(b)   avgmass_c >0") +
geom_smooth(method='lm')
grid.arrange(p3,p4, nrow=2)
p1 <- gf_point(num_flew ~ average_mass, col=~sex, data=d[d$average_mass_c < 0,], title="(a)   avgmass_c <0") +
geom_smooth(method='lm')
p2 <- gf_point(num_flew ~ average_mass, col=~sex, data=d[d$average_mass_c > 0,], title="(b)   avgmass_c >0") +
geom_smooth(method='lm')
grid.arrange(p1,p2, nrow=2)
p3 <- gf_point(num_notflew ~ average_mass, col=~sex, data=d[d$average_mass_c < 0,], title="(a)   avgmass_c <0") +
geom_smooth(method='lm')
p4 <- gf_point(num_notflew ~ average_mass, col=~sex, data=d[d$average_mass_c > 0,], title="(b)   avgmass_c >0") +
geom_smooth(method='lm')
grid.arrange(p3,p4, nrow=2)
p5 <- gf_point(num_flew ~ average_mass, col=~sex, data=d[d$average_mass_c < 0,], title="(a)   avgmass_c <0") +
geom_smooth(method='lm')
p6 <- gf_point(num_flew ~ average_mass, col=~sex, data=d[d$average_mass_c > 0,], title="(b)   avgmass_c >0") +
geom_smooth(method='lm')
grid.arrange(p5,p6, nrow=2)
p7 <- gf_point(num_notflew ~ average_mass, col=~sex, data=d[d$average_mass_c < 0,], title="(a)   avgmass_c <0") +
geom_smooth(method='lm')
p8 <- gf_point(num_notflew ~ average_mass, col=~sex, data=d[d$average_mass_c > 0,], title="(b)   avgmass_c >0") +
geom_smooth(method='lm')
grid.arrange(p7,p8, nrow=2)
six_plots<-function(){
##quick plots for y/n flight
##plot-specific grouping variables
d$mass_block<-round(d$average_mass/0.005)*0.005
d$f_prob<-d$num_flew/(d$num_flew+d$num_notflew)
d$wing2body_block<-round(d$wing2body, digits=2)
d$days_block<-round(d$avg_days, digits=0)
par(mfrow=c(2,3), mai=c(0.6, 0.6, 0.02, 0.02))
##mass by sex
data_temp<-aggregate(f_prob~sex*mass_block, data=d, FUN=mean)
data_temp$n<-aggregate(f_prob~sex*mass_block, data=d, FUN=length)$f_prob
plot(data_temp$f_prob~data_temp$mass_block, pch=c(2,19)[as.factor(data_temp$sex)], ylab="Flight probability", xlab="Mass")
##Indeed, we can see that the effect of mass is very pronounced in females but essentially absent in males.
##Really clear to see - great image.
## AB: However, based on the delta mass analyses, it might be more nuanced (but it's definitely weaker). Mass does effect males, it might just be in a smaller window because their mass doesn't change as much? Consider the male group point at 1 flight probability - it might be an outlier? If you print the data temp you see that there is only 1 male bug in that group:
print(data_temp) # I don't think that their masses play a huge role but it does follow the trend in the overall data. I guess one way to parse this out experimentally would be to see how virgin female mass impacts flight probability. Would would have a smaller mass window and maybe more dispersed data points.
##wing2body by sex
data_temp<-aggregate(f_prob~sex*wing2body_block, data=d, FUN=mean)
data_temp$n<-aggregate(f_prob~sex*wing2body_block, data=d, FUN=length)$f_prob
plot(data_temp$f_prob~data_temp$wing2body_block, pch=c(2,19)[as.factor(data_temp$sex)], ylab="Flight probability", xlab="wing-to-body ratio")
##Here we can see that as wing2body ratio increases, flight probability increases, but that the effect is much more pronounced in males.
##average days from start by sex
data_temp<-aggregate(f_prob~sex*days_block, data=d, FUN=mean)
data_temp$n<-aggregate(f_prob~sex*days_block, data=d, FUN=length)$f_prob
plot(data_temp$f_prob~data_temp$days_block, pch=c(2,19)[as.factor(data_temp$sex)], ylab="Flight probability", xlab="Days from start")
##Here we can see that as the average days from start increases, flight probability increases, but that the effect is really only visible in females.
##This does not mean days from start didn't impact males - only that our experimental design successfully stopped
##that from being confounding (eg, males may have been less likely to die, or had less biased mortality by host).
## AB: Or does this mean this is a pool size issue?
##mass by host
data_temp<-aggregate(f_prob~host_c*mass_block, data=d, FUN=mean)
data_temp$n<-aggregate(f_prob~host_c*mass_block, data=d, FUN=length)$f_prob
plot(data_temp$f_prob~data_temp$mass_block, pch=19, col=c(rgb(1,0.1,0,0.8),rgb(0,1,0.8,0.8))[as.factor(data_temp$host_c)], ylab="Flight probability", xlab="Mass")
##Here, we can see that the effect of mass is clear on GRT (red) but weak on BV (blue)
print(data_temp)
##wing2body by host
data_temp<-aggregate(f_prob~host_c*wing2body_block, data=d, FUN=mean)
data_temp$n<-aggregate(f_prob~host_c*wing2body_block, data=d, FUN=length)$f_prob
plot(data_temp$f_prob~data_temp$wing2body_block, pch=19, col=c(rgb(1,0.1,0,0.8),rgb(0,1,0.8,0.8))[as.factor(data_temp$host_c)], , ylab="Flight probability", xlab="wing-to-body ratio")
##Here, we can see that the positive effect of wing2body ratio is clear on GRT (red) and on BV (blue)
##average days from start by host
data_temp<-aggregate(f_prob~host_c*days_block, data=d, FUN=mean)
data_temp$n<-aggregate(f_prob~host_c*days_block, data=d, FUN=length)$f_prob
plot(data_temp$f_prob~data_temp$days_block, pch=19, col=c(rgb(1,0.1,0,0.8),rgb(0,1,0.8,0.8))[as.factor(data_temp$host_c)], , ylab="Flight probability", xlab="Days from start")
##Here we can see no clear impact of days from start when separated by host
}
six_plots()
plot(data_tested$total_eggs, data_tested$days_from_start)
plot(data_tested$days_from_start, data_tested$total_eggs)
plot(data_fem$days_from_start, data_fem$total_eggs)
data_fem
data_fem <- d_all[d_all$sex=="F",]
data_fem <- center_data(data_fem, is_not_binded = FALSE)
data_fem
plot(data_fem$days_from_start, data_fem$total_eggs)
gf_point(total_eggs ~ days_from_start, col=~sex, data=data_tested, title="(a)   avgmass_c <0") +
geom_smooth(method='lm')
gf_point(total_eggs ~ days_from_start, data=data_tested, title="(a)   avgmass_c <0") +
geom_smooth(method='lm')
gf_point(total_eggs ~ days_from_start, data=data_tested) +
geom_smooth(method='lm')
# not a strong enough relationship
lm(total_eggs ~ days_from_start, data=data_tested)
# not a strong enough relationship
summary(lm(total_eggs ~ days_from_start, data=data_tested))
# conflation for females between days from start and eggs laid? Check total eggs vs. days from start
gf_point(total_eggs ~ days_from_start, data=data_tested) +
geom_smooth(method='lm')
# not a strong enough relationship
summary(lm(total_eggs ~ days_from_start, data=data_tested)) # not significant
gf_point(num_flew ~ average_mass, col=~sex, data=d) +
gf_point(num_flew ~ average_mass, col=~sex, data=d) +
geom_smooth(method='lm')
gf_point(num_flew ~ average_mass, col=~sex, data=d) +
geom_smooth(method='lm')
rm(list=ls())
dir = "~/Desktop/git_repositories/SBB-dispersal/avbernat_working_on/Dispersal/Winter_2020/stats/"
setwd(dir)
library(lme4)
library(dplyr)
library(ggplotify)
library(gridExtra)
library(ggformula)
library(tidyselect)
library(zoo)
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_knit$set(root.dir = dir)
getwd()
output_col = TRUE # Recommend changing this to TRUE if working in Base R or RStudio, and FALSE if generating an html
source("src/clean_flight_data.R") # Script that loads and cleans up the data
source("src/regression_output.R") # A script that cleans up regression outputs and prints in color or black and white
source("src/center_flight_data.R")
source("src/get_warnings.R")
data <- read_flight_data("data/all_flight_data-Winter2020.csv")
data_all <- data[[1]]
data_tested <- data[[2]]
d <- data_tested %>%
group_by(ID, sex,population, site, host_plant, latitude, longitude, total_eggs,
beak, thorax, wing, body, w_morph, morph_notes, tested,
host_c, sex_c, w_morph_c, lat_c, sym_dist, sym_dist_s, total_eggs_c,
beak_c, thorax_c, thorax_s, body_c, wing_c, wing2body, wing2body_c, wing2body_s) %>%
summarise_all(funs(list(na.omit(.))))
d$num_flew <- 0
d$num_notflew <- 0
d$average_mass <- 0
d$avg_days <- 0
for(row in 1:length(d$flew_b)){
n_flew <- sum(d$flew_b[[row]] == 1) # total number of times did fly among trails
d$num_flew[[row]] <- n_flew
n_notflew <- sum(d$flew_b[[row]] == 0) # total number of times did not fly among trails
d$num_notflew[[row]] <- n_notflew
avg_mass <- mean(d$mass[[row]]) # average mass
d$average_mass[[row]] <- avg_mass
avg_days <- mean(d$days_from_start[[row]]) # average days
d$avg_days[[row]] <- avg_days
}
d_all <- select(d, -filename, -channel_letter, -set_number) ##MC: changed the name here to avoid re-loading all data to generate male and female only centered datasets
d_all <- center_data(d_all, is_not_binded = FALSE) # AB: need this here or else average_mass_c and some other columns do not get calculated
d_all
# average days from start; this deals with the problem of individuals who were only tested early, who will have a low value here, and with any chance individuals who happened to get in early or late in both trials.
d_all$avg_days_c <- d_all$avg_days - mean(d_all$avg_days, na.rm=TRUE)
## Log-square-root transformation; this transformation gets average_mass to act normal and not give haywire effect estimates
## AB: Log-square-root transformation - does neither work on their own?
d_all$average_mass_trans <- log(sqrt(d_all$average_mass)) - mean(log(sqrt(d_all$average_mass)), na.rm=TRUE)
## Log-square-root transformation; this transformation gets wing2body ratio to act normal and not give haywire effect estimates; note that this has an inverse relationship with wing2body ratio itself, so effect estimate directions need to be flipped for interpretation.
d_all$wing2body_trans <- log(sqrt(0.85-d_all$wing2body)) - mean(log(sqrt(0.85-d_all$wing2body)), na.rm=TRUE)
# wing2body - take out a constant
# Compare Number of Trials a Bug Flew in to Average Days
d_all$num_trials <- 0
d_all$num_trials <- rowSums(d_all[,c("num_flew", "num_notflew")])
# Scatter Plot
# AB: some bugs we couldn't find early on in the bins and were tested into trial 2 time. Some bugs were also accidentally tested twice in trial 1.
s <- ggplot(d_all, aes(x=avg_days, y=num_trials))  +
geom_point(size=2, shape=23)
# Histogram
d_all$num_trials <- as.factor(rowSums(d_all[,c("num_flew", "num_notflew")]))
h <- ggplot(d_all, aes(x=avg_days, color=num_trials)) +
geom_histogram(binwidth=1, fill="white")+ # removed argument position="dodge"
theme(legend.position="top") +
scale_color_manual(values=c("#999999", "#E69F00", "#56B4E9")) +
scale_fill_manual(values=c("#999999", "#E69F00", "#56B4E9"))
grid.arrange(s, h, nrow=1)
d <- center_data(d_all, is_not_binded = FALSE)
days_model<-glm(cbind(num_flew,num_notflew)~avg_days_c, data=d, family=binomial)
summary(days_model)
R1 = d$num_flew
R2 = d$num_notflew
A = d$host_c
B = d$sex_c
C = d$sym_dist_s
D = d$average_mass_trans
E = d$avg_days_c
data<-data.frame(R1, R2, A, B, C, D, E)
source("src/compare_models.R")
errors <- withWarnings(model_comparisonsAIC("src/generic models-binomial glm 2R ~ 4-FF + E.R"))
#errors <- withWarnings(model_comparisonsAIC("src/generic models-binomial glm 2R ~ 4-FF + E + noE.R"))
length(errors$warnings)
#generic 4-fixed factor and 1 fixed covariate models - but why? you don't even have a null model anymore.
anova(m63, m85, test="Chisq") # Adding B*D does not improve fit
anova(m26, m36, test="Chisq") # Adding C does not improve fit
anova(m12, m26, test="Chisq") # Adding A*D does improve fit
anova(m63, m36, test="Chisq") # Adding C*D does improve fit | m63 is the best fit
mass_model_all <- glm(cbind(num_flew, num_notflew) ~ host_c * average_mass_trans
+ sym_dist_s * average_mass_trans + sex + avg_days_c, data=d, family=binomial)
summary(mass_model_all) # matches with earlier top models but earlier top model was simplier (host*avg_mass + sex_c)
data_fem <- d_all[d_all$sex=="F",]
data_fem <- center_data(data_fem, is_not_binded = FALSE)
R1 = data_fem$num_flew
R2 = data_fem$num_notflew
A = data_fem$host_c
B = data_fem$sym_dist
C = data_fem$average_mass_trans
D = data_fem$wing2body_trans
E = data_fem$avg_days_c
data<-data.frame(R1, R2, A, B, C, D, E)
source("src/compare_models.R")
errors <- withWarnings(model_comparisonsAIC("src/generic models-binomial glm 2R ~ 4-FF + E.R"))
#errors <- withWarnings(model_comparisonsAIC("src/generic models-binomial glm 2R ~ 4-FF + E + noE.R"))
length(errors$warnings)
anova(m25, m13, test='Chisq') #adding A*C improves fit
anova(m25, m17, test="Chisq") #adding D improves fit
anova(m10, m13, test="Chisq") #adding A alone does not improve fit
anova(m10, m3, test="Chisq") #adding D improves fit
anova(m10, m4, test="Chisq") #adding C improves fit
anova(m25, m45, test='Chisq') #adding A*D does not improve fit | top model is m25
mass_model_fem <- glm(cbind(num_flew, num_notflew) ~ host_c * average_mass_trans +  wing2body_trans + avg_days_c, data=data_fem, family=binomial) ### sym_dist does not matter for females; AB: this matches with earlier top models (host * avg_mass + wing)
summary(mass_model_fem)
# AB: conflation for females between days from start and eggs laid? Check total eggs vs. days from start (this is a rough sketch)
gf_point(total_eggs ~ days_from_start, data=data_tested) +
geom_smooth(method='lm')
# not a strong enough relationship
summary(lm(total_eggs ~ days_from_start, data=data_tested)) # not significant
data_male <- d_all[d_all$sex=="M",]
data_male <- center_data(data_male, is_not_binded = FALSE)
R1 = data_male$num_flew
R2 = data_male$num_notflew
A = data_male$host_c
B = data_male$sym_dist_s
C = data_male$average_mass_trans
D = data_male$wing2body_trans
E = data_male$avg_days_c
data<-data.frame(R1, R2, A, B, C, D, E)
source("src/compare_models.R")
errors <- withWarnings(model_comparisonsAIC("src/generic models-binomial glm 2R ~ 4-FF + E.R"))
#errors <- withWarnings(model_comparisonsAIC("src/generic models-binomial glm 2R ~ 4-FF + E + noE.R")) # AB: maybe better to use this for males since # does not matter?
length(errors$warnings)
anova(m83, m105, test="Chisq") #marginal improvement from adding C*D
anova(m50, m62, test="Chisq") #no improvement from adding C | m50 is the top model
anova(m83, m62, test="Chisq") #marginal improvement from B*C
mass_model_male<-glm(cbind(num_flew, num_notflew)~host_c*wing2body_trans + sym_dist_s*wing2body_trans + avg_days_c, family=binomial, data=data_male) ## AB: host showing up matches top (simpler) model from original dataset (host + mass + days + wing but the nuance is that when used ID host was not significant and when use trial_type it was). Also strange to not see mass show up. It was significant in all the top models but not when it was the only predictor variable in a model.
summary(mass_model_male)
six_plots<-function(){
##quick plots for y/n flight
##plot-specific grouping variables
d$mass_block<-round(d$average_mass/0.005)*0.005
d$f_prob<-d$num_flew/(d$num_flew+d$num_notflew)
d$wing2body_block<-round(d$wing2body, digits=2)
d$days_block<-round(d$avg_days, digits=0)
par(mfrow=c(2,3), mai=c(0.6, 0.6, 0.02, 0.02))
##mass by sex
data_temp<-aggregate(f_prob~sex*mass_block, data=d, FUN=mean)
data_temp$n<-aggregate(f_prob~sex*mass_block, data=d, FUN=length)$f_prob
plot(data_temp$f_prob~data_temp$mass_block, pch=c(2,19)[as.factor(data_temp$sex)], ylab="Flight probability", xlab="Mass")
##Indeed, we can see that the effect of mass is very pronounced in females but essentially absent in males.
##Really clear to see - great image.
## AB: However, based on the delta mass analyses, it might be more nuanced (but it's definitely weaker). Mass does effect males, it might just be in a smaller window because their mass doesn't change as much? Consider the male group point at 1 flight probability - it might be an outlier? If you print the data temp you see that there is only 1 male bug in that group:
print(data_temp) # I don't think that their masses play a huge role but it does follow the trend in the overall data. I guess one way to parse this out experimentally would be to see how virgin female mass impacts flight probability. Would would have a smaller mass window and maybe more dispersed data points.
##wing2body by sex
data_temp<-aggregate(f_prob~sex*wing2body_block, data=d, FUN=mean)
data_temp$n<-aggregate(f_prob~sex*wing2body_block, data=d, FUN=length)$f_prob
plot(data_temp$f_prob~data_temp$wing2body_block, pch=c(2,19)[as.factor(data_temp$sex)], ylab="Flight probability", xlab="wing-to-body ratio")
##Here we can see that as wing2body ratio increases, flight probability increases, but that the effect is much more pronounced in males.
##average days from start by sex
data_temp<-aggregate(f_prob~sex*days_block, data=d, FUN=mean)
data_temp$n<-aggregate(f_prob~sex*days_block, data=d, FUN=length)$f_prob
plot(data_temp$f_prob~data_temp$days_block, pch=c(2,19)[as.factor(data_temp$sex)], ylab="Flight probability", xlab="Days from start")
##Here we can see that as the average days from start increases, flight probability increases, but that the effect is really only visible in females.
##This does not mean days from start didn't impact males - only that our experimental design successfully stopped
##that from being confounding (eg, males may have been less likely to die, or had less biased mortality by host).
## AB: Or does this mean this is a pool size issue? Also, I might argue that for both males and females they are similarly weak? Not entirely visible for females either.
##mass by host
data_temp<-aggregate(f_prob~host_c*mass_block, data=d, FUN=mean)
data_temp$n<-aggregate(f_prob~host_c*mass_block, data=d, FUN=length)$f_prob
plot(data_temp$f_prob~data_temp$mass_block, pch=19, col=c(rgb(1,0.1,0,0.8),rgb(0,1,0.8,0.8))[as.factor(data_temp$host_c)], ylab="Flight probability", xlab="Mass")
##Here, we can see that the effect of mass is clear on GRT (red) but weak on BV (blue)
print(data_temp)
##wing2body by host
data_temp<-aggregate(f_prob~host_c*wing2body_block, data=d, FUN=mean)
data_temp$n<-aggregate(f_prob~host_c*wing2body_block, data=d, FUN=length)$f_prob
plot(data_temp$f_prob~data_temp$wing2body_block, pch=19, col=c(rgb(1,0.1,0,0.8),rgb(0,1,0.8,0.8))[as.factor(data_temp$host_c)], , ylab="Flight probability", xlab="wing-to-body ratio")
##Here, we can see that the positive effect of wing2body ratio is clear on GRT (red) and on BV (blue)
##average days from start by host
data_temp<-aggregate(f_prob~host_c*days_block, data=d, FUN=mean)
data_temp$n<-aggregate(f_prob~host_c*days_block, data=d, FUN=length)$f_prob
plot(data_temp$f_prob~data_temp$days_block, pch=19, col=c(rgb(1,0.1,0,0.8),rgb(0,1,0.8,0.8))[as.factor(data_temp$host_c)], , ylab="Flight probability", xlab="Days from start")
##Here we can see no clear impact of days from start when separated by host
}
six_plots()
gf_point(num_flew ~ average_mass, data=d) +
geom_smooth(method='lm')  +
ggtitle("All Data: Number Times Flew vs. Average Mass (g)") # as average mass increases, the number of times flew decreases
p1 <- gf_point(num_flew ~ average_mass, col=~host_plant, data=d[d$average_mass_c < 0,], title="(a)   avgmass_c <0") +
geom_smooth(method='lm')
p2 <- gf_point(num_flew ~ average_mass, col=~host_plant, data=d[d$average_mass_c > 0,], title="(b)   avgmass_c >0") +
geom_smooth(method='lm')
grid.arrange(p1,p2, nrow=2)
p3 <- gf_point(num_notflew ~ average_mass, col=~host_plant, data=d[d$average_mass_c < 0,], title="(a)   avgmass_c <0") +
geom_smooth(method='lm')
p4 <- gf_point(num_notflew ~ average_mass, col=~host_plant, data=d[d$average_mass_c > 0,], title="(b)   avgmass_c >0") +
geom_smooth(method='lm')
grid.arrange(p3,p4, nrow=2)
p5 <- gf_point(num_flew ~ average_mass, col=~sex, data=d[d$average_mass_c < 0,], title="(a)   avgmass_c <0") +
geom_smooth(method='lm')
p6 <- gf_point(num_flew ~ average_mass, col=~sex, data=d[d$average_mass_c > 0,], title="(b)   avgmass_c >0") +
geom_smooth(method='lm')
grid.arrange(p5,p6, nrow=2)
p7 <- gf_point(num_notflew ~ average_mass, col=~sex, data=d[d$average_mass_c < 0,], title="(a)   avgmass_c <0") +
geom_smooth(method='lm')
p8 <- gf_point(num_notflew ~ average_mass, col=~sex, data=d[d$average_mass_c > 0,], title="(b)   avgmass_c >0") +
geom_smooth(method='lm')
grid.arrange(p7,p8, nrow=2)
gf_point(num_flew ~ average_mass, col=~sex, data=d) +
geom_smooth(method='lm')
p7 <- gf_point(num_notflew ~ average_mass, col=~c(sex, host), data=d[d$average_mass_c < 0,], title="(a)   avgmass_c <0") +
geom_smooth(method='lm')
grid.arrange(p7,p8, nrow=2)
p7 <- gf_point(num_notflew ~ average_mass, col=~c(sex, host_plant), data=d[d$average_mass_c < 0,], title="(a)   avgmass_c <0") +
geom_smooth(method='lm')
p8 <- gf_point(num_notflew ~ average_mass, col=~sex, data=d[d$average_mass_c > 0,], title="(b)   avgmass_c >0") +
geom_smooth(method='lm')
grid.arrange(p7,p8, nrow=2)
p7 <- gf_point(num_notflew ~ average_mass, col=~sex, data=d[d$average_mass_c < 0,], title="(a)   avgmass_c <0") +
geom_smooth(method='lm')
p8 <- gf_point(num_notflew ~ average_mass, col=~sex, data=d[d$average_mass_c > 0,], title="(b)   avgmass_c >0") +
geom_smooth(method='lm')
grid.arrange(p7,p8, nrow=2)
rm(list=ls())
output_col = FALSE
source("src/clean_flight_data.R")
source("src/regression_output.R")
source("src/center_flight_data.R")
source("src/get_warnings.R")
rm(list=ls())
output_col = FALSE
source("src/clean_flight_data.R")
source("src/regression_output.R")
source("src/center_flight_data.R")
source("src/get_warnings.R")
data <- read_flight_data("data/all_flight_data-Winter2020.csv")
data_all <- data[[1]]
data_tested <- data[[2]]
### Remove everyone who didn't fly (then remove distances = 0, if that didn't work fully)
data_flew_all <- data_tested[data_tested$flew_b == 1, ]
### Check for low speeds
low_speeds <- data_flew_all %>%
filter(average_speed <0.05)
### Check for high speeds
high_speeds <- data_flew_all %>%
filter(average_speed >0.65)
low_speeds$flight_type# have 7 bugs with average_speed = 0 but were marked as bursters (this could be just something very short (second burst) - not enough to grant a calculation) - I decided to remove them. But one bug was continuous and had 0 distance and 0 speeds - that was bug 196 T2 set011-3-03-2020-A3_196.txt
high_speeds$flight_type # 3 bugs - also bursters. Could also be short explosive bursts but not true to the biology of these bugs (more like us blowing on them).
### Remove outliers
data_flew <- data_flew_all %>%
filter(average_speed > 0.05) %>%
filter(average_speed < 0.65)
data_flew <- center_data(data_flew)
##transform mass & speed
data_flew$mass_trans<-log(data_flew$mass)-mean(log(data_flew$mass), na.rm=TRUE)
data_flew$speed_trans<-log(data_flew$average_speed)-mean(log(data_flew$average_speed), na.rm=TRUE)
#######do flight types differ?
data_flew$flight_type <- relevel(data_flew$flight_type, ref="B")
summary(lmer(speed_trans~flight_type + (1|chamber) + (1|ID), data=data_flew)) #yes, B and C differ distinctly in average speed; BC and CB are not different from C, so let's keep those in the continuous flight analyses.
#######testing some covariates:
data_flew$chamber <- relevel(data_flew$chamber, ref="A-4")
####### Effect of chamber B-2 and B-4
summary(lmer(speed_trans~chamber + (1|ID), data=data_flew))###Possibly reductions in speed
####### No effect of test date
tidy_regression(lmer(speed_trans~days_from_start + (1|chamber), data=data_flew), is_color=output_col)
####### No effect of test time
tidy_regression(lmer(average_speed~min_from_IncStart + (1|chamber), data=data_flew), is_color=output_col)
