s = d$sex_c[[i]]
top0 = exp(0) # just equals 1
top1 = exp(-1.02 + 0.043*mp - 0.69*s)
top2 = exp(-6.82 - 0.009*mp - 5.63*s)
top3 = exp(0.12 + 0.019*mp- 0.90*s)
bottom = top0 + top1 + top2 + top3
neither = c(neither, top0/bottom)
T1_rather_than_none = c(T1_rather_than_none, top1/bottom)
T2_rather_than_none = c(T2_rather_than_none, top2/bottom)
both_rather_than_none = c(both_rather_than_none, top3/bottom)
}
d$index = 1:nrow(d)
females = d %>%
filter(sex=="F")
males = d %>%
filter(sex=="M")
Frows = females$index
Mrows = males$index
plot(d$mass_per[Frows], T1_rather_than_none[Frows], ylim=c(0,1), xlim=c(-40,104), col="blue", type="l",
ylab="Flight Case Probability", xlab="Percent Change in Mass From T1 to T2 (%)", lty=1) #T1 only
points(d$mass_per[Mrows], T1_rather_than_none[Mrows], col="blue", type="l", lty=2)
points(d$mass_per[Frows], T2_rather_than_none[Frows], col="darkgreen", type="l", lty=1)
points(d$mass_per[Mrows], T2_rather_than_none[Mrows], col="darkgreen", type="l", lty=2)
points(d$mass_per[Frows], both_rather_than_none[Frows], col="maroon", type="l", lty=1)
points(d$mass_per[Mrows], both_rather_than_none[Mrows], col="maroon", type="l", lty=2)
points(d$mass_per[Frows], neither[Frows], col="red", type="l", lty=1)
points(d$mass_per[Mrows], neither[Mrows], col="red", type="l", lty=2)
text(-20,0.9, labels="Did Not Fly", col="red")
text(0,0.5, labels="Flew Twice", col="maroon")
text(30,0.85, labels="Flew in T1 only", col="blue")
text(30,0.1, labels="Flew in T2 only", col="darkgreen")
legend(84, 1.02,
legend = c("female","male"),
lty=1:2,
col="black",
cex=0.8)
probs = round(cbind(neither, T1_rather_than_none, T2_rather_than_none, both_rather_than_none),2)
summary_probs = cbind(as.character(d$flight_case), as.character(d$sex), probs)
colnames(summary_probs) = c("event", "sex", "none", "T1", "T2", "both")
dataframe = as.data.frame(summary_probs)
calculate_accuracy = function(data, cfirst, clast) {
probs = data[cfirst:clast]
most_likely_events = colnames(probs)[apply(probs,1,which.max)]
actual_events = c()
for (i in 1:nrow(data)) {
if (data[i,1] == "0") {
actual_event = "none"
}
if (data[i,1] == "-1") {
actual_event = "T1"
}
if (data[i,1] == "1") {
actual_event = "T2"
}
if (data[i,1] == "2") {
actual_event = "both"
}
actual_events = c(actual_events, actual_event)
}
events = actual_events == most_likely_events
accurate_events = sum(events)
total_events = length(events)
accuracy = accurate_events / total_events
return(accuracy)
}
# overall
acc = calculate_accuracy(dataframe,3,6)
paste("Overall prediction accuracy, ", round(acc,2))
# by sex
femdata = dataframe %>%
filter(sex=="F")
maledata = dataframe %>%
filter(sex=="M")
accF = calculate_accuracy(femdata,3,6)
paste("Female prediction accuracy, ", round(accF,2))
accM = calculate_accuracy(maledata,3,6)
paste("Male prediction accuracy, ", round(accM,2))
get_confusion_matrix = function(data, cfirst, clast) {
probs = data[cfirst:clast]
most_likely_events = colnames(probs)[apply(probs,1,which.max)]
actual_events = c()
for (i in 1:nrow(data)) {
if (data[i,1] == "0") {
actual_event = "none"
}
if (data[i,1] == "-1") {
actual_event = "T1"
}
if (data[i,1] == "1") {
actual_event = "T2"
}
if (data[i,1] == "2") {
actual_event = "both"
}
actual_events = c(actual_events, actual_event)
}
df = as.data.frame(cbind(actual_events, most_likely_events))
#final_df = dplyr::count_(df, vars = c('actual_events','most_likely_events'))
eval <- evaluate(df,
target_col = "actual_events",
prediction_cols = "most_likely_events",
type = "multinomial")
return(eval)
}
acc_table = get_confusion_matrix(dataframe,3,6)
acc_table
confusion_matrix <- acc_table$'Confusion Matrix'[[1]]
confusion_matrix
plot_confusion_matrix(confusion_matrix, add_sums=TRUE)
neither = c()
T1_rather_than_none = c()
T2_rather_than_none = c()
both_rather_than_none = c()
for (i in 1:nrow(d)) {
m = d$mass_per[[i]]
s = d$sex_c[[i]]
w = d$wing / d$body
top0 = exp(0) # just equals 1
top1 = exp(-17.862 + 0.041*m - 0.571*s + 23.558*w )
top2 = exp(-4.395 - 0.005*m - 9.580*s - 8.937*w)
top3 = exp(-19.931 + 0.018*m - 0.760*s + 28.019*w)
bottom = top0 + top1 + top2 + top3
neither = c(neither, top0/bottom)
T1_rather_than_none = c(T1_rather_than_none, top1/bottom)
T2_rather_than_none = c(T2_rather_than_none, top2/bottom)
both_rather_than_none = c(both_rather_than_none, top3/bottom)
}
d$wing
neither = c()
T1_rather_than_none = c()
T2_rather_than_none = c()
both_rather_than_none = c()
for (i in 1:nrow(d)) {
m = d$mass_per[[i]]
s = d$sex_c[[i]]
w = d$wing[[i]] / d$body[[i]]
top0 = exp(0) # just equals 1
top1 = exp(-17.862 + 0.041*m - 0.571*s + 23.558*w )
top2 = exp(-4.395 - 0.005*m - 9.580*s - 8.937*w)
top3 = exp(-19.931 + 0.018*m - 0.760*s + 28.019*w)
bottom = top0 + top1 + top2 + top3
neither = c(neither, top0/bottom)
T1_rather_than_none = c(T1_rather_than_none, top1/bottom)
T2_rather_than_none = c(T2_rather_than_none, top2/bottom)
both_rather_than_none = c(both_rather_than_none, top3/bottom)
}
probs = round(cbind(neither, T1_rather_than_none, T2_rather_than_none, both_rather_than_none),2)
summary_probs = cbind(as.character(d$flight_case), as.character(d$sex), probs)
colnames(summary_probs) = c("event", "sex", "none", "T1", "T2", "both")
dataframe = as.data.frame(summary_probs)
acc_table = get_confusion_matrix(dataframe,3,6)
acc_table
confusion_matrix <- acc_table$'Confusion Matrix'[[1]]
confusion_matrix
plot_confusion_matrix(confusion_matrix, add_sums=TRUE)
dataframe
rm(list=ls())
dir = "~/Desktop/git_repositories/SBB-dispersal/avbernat_working_on/Dispersal/Winter_2020/stats/"
setwd(dir)
library(dplyr)
library(cvms)
library(binom)
library(ggimage)
library(ggnewscale)
library(rsvg)
knitr::opts_chunk$set(echo = TRUE)
source("src/clean_flight_data-Fall.R")
all_data = clean_flight_data.Fall("data/all_flight_data-Fall2019.csv")
morph_data = read.csv("data/bug_morphology_flight-trials-Autumn2019.csv", header=TRUE, sep=",", stringsAsFactors=TRUE)
data <- merge(all_data, morph_data, by=c("ID")) # I must be missing some morphology. Need to check - also need to check that the sexes match. AND population
# sort(unique(data$ID))
# sort(unique(all_data$ID))
data_mass = data %>%
filter(!is.na(mass))
# 60 min trial
data60 = data_mass %>%
filter(set_number < 53)
# 90 min trial
data90 = data_mass %>%
filter(set_number < 72 & set_number > 52)
# ongoing trial
ongoing_data = data_mass %>%
filter(set_number > 71)
colnames(ongoing_data)[18] = "sex"
colnames(ongoing_data)[19] = "population"
source("src/unique_flight_data-Fall.R")
d = create_delta_data.Fall(ongoing_data) # dataset changed. Need to find out why.
d <- d[with(d, order(mass_per)),]
neither = c()
T1_rather_than_none = c()
T2_rather_than_none = c()
both_rather_than_none = c()
for (i in 1:nrow(d)) {
mp = d$mass_per[[i]]
s = d$sex_c[[i]]
top0 = exp(0) # just equals 1
top1 = exp(-1.02 + 0.043*mp - 0.69*s)
top2 = exp(-6.82 - 0.009*mp - 5.63*s)
top3 = exp(0.12 + 0.019*mp- 0.90*s)
bottom = top0 + top1 + top2 + top3
neither = c(neither, top0/bottom)
T1_rather_than_none = c(T1_rather_than_none, top1/bottom)
T2_rather_than_none = c(T2_rather_than_none, top2/bottom)
both_rather_than_none = c(both_rather_than_none, top3/bottom)
}
d$index = 1:nrow(d)
females = d %>%
filter(sex=="F")
males = d %>%
filter(sex=="M")
Frows = females$index
Mrows = males$index
plot(d$mass_per[Frows], T1_rather_than_none[Frows], ylim=c(0,1), xlim=c(-40,104), col="blue", type="l",
ylab="Flight Case Probability", xlab="Percent Change in Mass From T1 to T2 (%)", lty=1) #T1 only
points(d$mass_per[Mrows], T1_rather_than_none[Mrows], col="blue", type="l", lty=2)
points(d$mass_per[Frows], T2_rather_than_none[Frows], col="darkgreen", type="l", lty=1)
points(d$mass_per[Mrows], T2_rather_than_none[Mrows], col="darkgreen", type="l", lty=2)
points(d$mass_per[Frows], both_rather_than_none[Frows], col="maroon", type="l", lty=1)
points(d$mass_per[Mrows], both_rather_than_none[Mrows], col="maroon", type="l", lty=2)
points(d$mass_per[Frows], neither[Frows], col="red", type="l", lty=1)
points(d$mass_per[Mrows], neither[Mrows], col="red", type="l", lty=2)
text(-20,0.9, labels="Did Not Fly", col="red")
text(0,0.5, labels="Flew Twice", col="maroon")
text(30,0.85, labels="Flew in T1 only", col="blue")
text(30,0.1, labels="Flew in T2 only", col="darkgreen")
legend(84, 1.02,
legend = c("female","male"),
lty=1:2,
col="black",
cex=0.8)
probs = round(cbind(neither, T1_rather_than_none, T2_rather_than_none, both_rather_than_none),2)
summary_probs = cbind(as.character(d$flight_case), as.character(d$sex), probs)
colnames(summary_probs) = c("event", "sex", "none", "T1", "T2", "both")
dataframe = as.data.frame(summary_probs)
calculate_accuracy = function(data, cfirst, clast) {
probs = data[cfirst:clast]
most_likely_events = colnames(probs)[apply(probs,1,which.max)]
actual_events = c()
for (i in 1:nrow(data)) {
if (data[i,1] == "0") {
actual_event = "none"
}
if (data[i,1] == "-1") {
actual_event = "T1"
}
if (data[i,1] == "1") {
actual_event = "T2"
}
if (data[i,1] == "2") {
actual_event = "both"
}
actual_events = c(actual_events, actual_event)
}
events = actual_events == most_likely_events
accurate_events = sum(events)
total_events = length(events)
accuracy = accurate_events / total_events
return(accuracy)
}
# overall
acc = calculate_accuracy(dataframe,3,6)
paste("Overall prediction accuracy, ", round(acc,2))
# by sex
femdata = dataframe %>%
filter(sex=="F")
maledata = dataframe %>%
filter(sex=="M")
accF = calculate_accuracy(femdata,3,6)
paste("Female prediction accuracy, ", round(accF,2))
accM = calculate_accuracy(maledata,3,6)
paste("Male prediction accuracy, ", round(accM,2))
get_confusion_matrix = function(data, cfirst, clast) {
probs = data[cfirst:clast]
most_likely_events = colnames(probs)[apply(probs,1,which.max)]
actual_events = c()
for (i in 1:nrow(data)) {
if (data[i,1] == "0") {
actual_event = "none"
}
if (data[i,1] == "-1") {
actual_event = "T1"
}
if (data[i,1] == "1") {
actual_event = "T2"
}
if (data[i,1] == "2") {
actual_event = "both"
}
actual_events = c(actual_events, actual_event)
}
df = as.data.frame(cbind(actual_events, most_likely_events))
#final_df = dplyr::count_(df, vars = c('actual_events','most_likely_events'))
eval <- evaluate(df,
target_col = "actual_events",
prediction_cols = "most_likely_events",
type = "multinomial")
return(eval)
}
acc_table = get_confusion_matrix(dataframe,3,6)
acc_table
confusion_matrix <- acc_table$'Confusion Matrix'[[1]]
confusion_matrix
plot_confusion_matrix(confusion_matrix, add_sums=TRUE)
neither = c()
T1_rather_than_none = c()
T2_rather_than_none = c()
both_rather_than_none = c()
for (i in 1:nrow(d)) {
m = d$mass_per[[i]]
s = d$sex_c[[i]]
w = d$wing[[i]] / d$body[[i]]
top0 = exp(0) # just equals 1
top1 = exp(-17.862 + 0.041*m - 0.571*s + 23.558*w )
top2 = exp(-4.395 - 0.005*m - 9.580*s - 8.937*w)
top3 = exp(-19.931 + 0.018*m - 0.760*s + 28.019*w)
bottom = top0 + top1 + top2 + top3
neither = c(neither, top0/bottom)
T1_rather_than_none = c(T1_rather_than_none, top1/bottom)
T2_rather_than_none = c(T2_rather_than_none, top2/bottom)
both_rather_than_none = c(both_rather_than_none, top3/bottom)
}
probs = round(cbind(neither, T1_rather_than_none, T2_rather_than_none, both_rather_than_none),2)
summary_probs = cbind(as.character(d$flight_case), as.character(d$sex), probs)
colnames(summary_probs) = c("event", "sex", "none", "T1", "T2", "both")
dataframe = as.data.frame(summary_probs)
acc_table = get_confusion_matrix(dataframe,3,6)
acc_table
confusion_matrix <- acc_table$'Confusion Matrix'[[1]]
confusion_matrix
plot_confusion_matrix(confusion_matrix, add_sums=TRUE)
dataframe
rm(list=ls())
dir = "~/Desktop/git_repositories/SBB-dispersal/avbernat_working_on/Dispersal/Winter_2020/stats/"
setwd(dir)
library(dplyr)
library(cvms)
library(binom)
library(ggimage)
library(ggnewscale)
library(rsvg)
knitr::opts_chunk$set(echo = TRUE)
source("src/clean_flight_data-Fall.R")
all_data = clean_flight_data.Fall("data/all_flight_data-Fall2019.csv")
morph_data = read.csv("data/bug_morphology_flight-trials-Autumn2019.csv", header=TRUE, sep=",", stringsAsFactors=TRUE)
data <- merge(all_data, morph_data, by=c("ID")) # I must be missing some morphology. Need to check - also need to check that the sexes match. AND population
# sort(unique(data$ID))
# sort(unique(all_data$ID))
data_mass = data %>%
filter(!is.na(mass))
# 60 min trial
data60 = data_mass %>%
filter(set_number < 53)
# 90 min trial
data90 = data_mass %>%
filter(set_number < 72 & set_number > 52)
# ongoing trial
ongoing_data = data_mass %>%
filter(set_number > 71)
colnames(ongoing_data)[18] = "sex"
colnames(ongoing_data)[19] = "population"
source("src/unique_flight_data-Fall.R")
d = create_delta_data.Fall(ongoing_data) # dataset changed. Need to find out why.
d <- d[with(d, order(mass_per)),]
neither = c()
T1_rather_than_none = c()
T2_rather_than_none = c()
both_rather_than_none = c()
for (i in 1:nrow(d)) {
mp = d$mass_per[[i]]
s = d$sex_c[[i]]
top0 = exp(0) # just equals 1
top1 = exp(-1.02 + 0.043*mp - 0.69*s)
top2 = exp(-6.82 - 0.009*mp - 5.63*s)
top3 = exp(0.12 + 0.019*mp- 0.90*s)
bottom = top0 + top1 + top2 + top3
neither = c(neither, top0/bottom)
T1_rather_than_none = c(T1_rather_than_none, top1/bottom)
T2_rather_than_none = c(T2_rather_than_none, top2/bottom)
both_rather_than_none = c(both_rather_than_none, top3/bottom)
}
d$index = 1:nrow(d)
females = d %>%
filter(sex=="F")
males = d %>%
filter(sex=="M")
Frows = females$index
Mrows = males$index
plot(d$mass_per[Frows], T1_rather_than_none[Frows], ylim=c(0,1), xlim=c(-40,104), col="blue", type="l",
ylab="Flight Case Probability", xlab="Percent Change in Mass From T1 to T2 (%)", lty=1) #T1 only
points(d$mass_per[Mrows], T1_rather_than_none[Mrows], col="blue", type="l", lty=2)
points(d$mass_per[Frows], T2_rather_than_none[Frows], col="darkgreen", type="l", lty=1)
points(d$mass_per[Mrows], T2_rather_than_none[Mrows], col="darkgreen", type="l", lty=2)
points(d$mass_per[Frows], both_rather_than_none[Frows], col="maroon", type="l", lty=1)
points(d$mass_per[Mrows], both_rather_than_none[Mrows], col="maroon", type="l", lty=2)
points(d$mass_per[Frows], neither[Frows], col="red", type="l", lty=1)
points(d$mass_per[Mrows], neither[Mrows], col="red", type="l", lty=2)
text(-20,0.9, labels="Did Not Fly", col="red")
text(0,0.5, labels="Flew Twice", col="maroon")
text(30,0.85, labels="Flew in T1 only", col="blue")
text(30,0.1, labels="Flew in T2 only", col="darkgreen")
legend(84, 1.02,
legend = c("female","male"),
lty=1:2,
col="black",
cex=0.8)
probs = round(cbind(neither, T1_rather_than_none, T2_rather_than_none, both_rather_than_none),2)
summary_probs = cbind(as.character(d$flight_case), as.character(d$sex), probs)
colnames(summary_probs) = c("event", "sex", "none", "T1", "T2", "both")
dataframe = as.data.frame(summary_probs)
dataframe
calculate_accuracy = function(data, cfirst, clast) {
probs = data[cfirst:clast]
most_likely_events = colnames(probs)[apply(probs,1,which.max)]
actual_events = c()
for (i in 1:nrow(data)) {
if (data[i,1] == "0") {
actual_event = "none"
}
if (data[i,1] == "-1") {
actual_event = "T1"
}
if (data[i,1] == "1") {
actual_event = "T2"
}
if (data[i,1] == "2") {
actual_event = "both"
}
actual_events = c(actual_events, actual_event)
}
events = actual_events == most_likely_events
accurate_events = sum(events)
total_events = length(events)
accuracy = accurate_events / total_events
return(accuracy)
}
# overall
acc = calculate_accuracy(dataframe,3,6)
paste("Overall prediction accuracy, ", round(acc,2))
# by sex
femdata = dataframe %>%
filter(sex=="F")
maledata = dataframe %>%
filter(sex=="M")
accF = calculate_accuracy(femdata,3,6)
paste("Female prediction accuracy, ", round(accF,2))
accM = calculate_accuracy(maledata,3,6)
paste("Male prediction accuracy, ", round(accM,2))
get_confusion_matrix = function(data, cfirst, clast) {
probs = data[cfirst:clast]
most_likely_events = colnames(probs)[apply(probs,1,which.max)]
actual_events = c()
for (i in 1:nrow(data)) {
if (data[i,1] == "0") {
actual_event = "none"
}
if (data[i,1] == "-1") {
actual_event = "T1"
}
if (data[i,1] == "1") {
actual_event = "T2"
}
if (data[i,1] == "2") {
actual_event = "both"
}
actual_events = c(actual_events, actual_event)
}
df = as.data.frame(cbind(actual_events, most_likely_events))
#final_df = dplyr::count_(df, vars = c('actual_events','most_likely_events'))
eval <- evaluate(df,
target_col = "actual_events",
prediction_cols = "most_likely_events",
type = "multinomial")
return(eval)
}
acc_table = get_confusion_matrix(dataframe,3,6)
acc_table
confusion_matrix <- acc_table$'Confusion Matrix'[[1]]
confusion_matrix
plot_confusion_matrix(confusion_matrix, add_sums=TRUE)
neither = c()
T1_rather_than_none = c()
T2_rather_than_none = c()
both_rather_than_none = c()
for (i in 1:nrow(d)) {
m = d$mass_per[[i]]
s = d$sex_c[[i]]
w = d$wing[[i]] / d$body[[i]]
top0 = exp(0) # just equals 1
top1 = exp(-17.862 + 0.041*m - 0.571*s + 23.558*w )
top2 = exp(-4.395 - 0.005*m - 9.580*s - 8.937*w)
top3 = exp(-19.931 + 0.018*m - 0.760*s + 28.019*w)
bottom = top0 + top1 + top2 + top3
neither = c(neither, top0/bottom)
T1_rather_than_none = c(T1_rather_than_none, top1/bottom)
T2_rather_than_none = c(T2_rather_than_none, top2/bottom)
both_rather_than_none = c(both_rather_than_none, top3/bottom)
}
acc_table = get_confusion_matrix(dataframe,3,6)
acc_table
confusion_matrix <- acc_table$'Confusion Matrix'[[1]]
confusion_matrix
plot_confusion_matrix(confusion_matrix, add_sums=TRUE)
probs = round(cbind(neither, T1_rather_than_none, T2_rather_than_none, both_rather_than_none),2)
summary_probs = cbind(as.character(d$flight_case), as.character(d$sex), probs)
colnames(summary_probs) = c("event", "sex", "none", "T1", "T2", "both")
dataframe = as.data.frame(summary_probs)
dataframe
acc_table = get_confusion_matrix(dataframe,3,6)
acc_table
confusion_matrix <- acc_table$'Confusion Matrix'[[1]]
confusion_matrix
plot_confusion_matrix(confusion_matrix, add_sums=TRUE)
