dev.off()
}
sets <- unique(data_tested$set_number)
for(set in sets) {
dataA <- filter(data_tested, set_number == set, as.character(channel_letter) == "A" )
dataA$start_time <- strptime(dataA$time_start, format="%H:%M:%S")
dataA <- dataA[order(dataA$chamber, dataA$start_time),]
dataB <- filter(data_tested, set_number == set, as.character(channel_letter) == "B" )
dataB$start_time <- strptime(dataB$time_start, format="%H:%M:%S")
dataB <- dataB[order(dataB$chamber, dataB$start_time),]
data_list <- list(dataA, dataB)
pdf(paste0("output/set", set, ".pdf"), width = 30, height = 20) #width = 2100, height = 1250) #for png() .png
#par(mar=c(4.5,6,4.5,2))
par(mar=c(54.5,6,4.5,2))
#par(mfrow=c(2,1))
for(data in data_list) {
rand_colors <- randomColor(nrow(data), luminosity="bright")
max_x <- max(as.duration(hms(data$time_end)))
min_x <- min(as.duration(hms(data$time_start)))
plot(1, type="n", xlim=c(min_x, max_x), ylim=c(0.5, 4.8),
xlab="Duration (s)", ylab="Channel Number",
cex.axis=1.7,
cex.lab=2.2)
for(row in 1:nrow(data)) {
if(row %% 2 == 0) {
pos <- 1
direction <- -1}
else{
pos <- 3
direction <- 1}
channel <- as.character(data$chamber[row])
channel_num <- as.numeric(sapply(strsplit(channel, "-"), "[[", 2))
channel_letter <- sapply(strsplit(channel, "-"), "[[", 1)
filename <- data$filename[row]
set_num <- data$set_number[row]
start_time <- hms(data$time_start[row])
end_time <- hms(data$time_end[row])
# s <- strptime(data$time_start[row], format = "%H:%M") # could redo labels this way
# start_time <- paste0(hour(s), "H ", minute(s), "M")
# e <- strptime(data$time_end[row], format = "%H:%M")
# end_time <- paste0(hour(e), "H ", minute(e), "M")
lines(c(start_time, end_time), c(channel_num, channel_num), type="l", col=rand_colors[row])
text(c(start_time, end_time), c(channel_num, channel_num), labels=as.character(c(start_time, end_time)),
cex=1.2, font=2, pos=pos, col=rand_colors[row])
midpoint <- as.duration(start_time + end_time ) / 2
file <- sprintf("[%s]", filename)
text(midpoint, channel_num + 0.2*direction, labels=file, cex=0.9, font=2, pos=pos, col=rand_colors[row])
#0.09* direction if don't squish
}
title(main=list(paste("Channel Letter", channel_letter), cex=2.2))
}
dev.off()
}
sets <- unique(data_tested$set_number)
for(set in sets) {
dataA <- filter(data_tested, set_number == set, as.character(channel_letter) == "A" )
dataA$start_time <- strptime(dataA$time_start, format="%H:%M:%S")
dataA <- dataA[order(dataA$chamber, dataA$start_time),]
dataB <- filter(data_tested, set_number == set, as.character(channel_letter) == "B" )
dataB$start_time <- strptime(dataB$time_start, format="%H:%M:%S")
dataB <- dataB[order(dataB$chamber, dataB$start_time),]
data_list <- list(dataA, dataB)
pdf(paste0("output/set", set, ".pdf"), width = 30, height = 20) #width = 2100, height = 1250) #for png() .png
#par(mar=c(4.5,6,4.5,2))
par(mar=c(54.5,6,4.5,2))
#par(mfrow=c(2,1))
for(data in data_list) {
rand_colors <- randomColor(nrow(data), luminosity="bright")
max_x <- max(as.duration(hms(data$time_end)))
min_x <- min(as.duration(hms(data$time_start)))
plot(1, type="n", xlim=c(min_x, max_x), ylim=c(0.5, 4.8),
xlab="Duration (s)", ylab="Channel Number",
cex.axis=1.7,
cex.lab=2.2)
for(row in 1:nrow(data)) {
if(row %% 2 == 0) {
pos <- 1
direction <- -1}
else{
pos <- 3
direction <- 1}
channel <- as.character(data$chamber[row])
channel_num <- as.numeric(sapply(strsplit(channel, "-"), "[[", 2))
channel_letter <- sapply(strsplit(channel, "-"), "[[", 1)
filename <- data$filename[row]
set_num <- data$set_number[row]
start_time <- hms(data$time_start[row])
end_time <- hms(data$time_end[row])
# s <- strptime(data$time_start[row], format = "%H:%M") # could redo labels this way
# start_time <- paste0(hour(s), "H ", minute(s), "M")
# e <- strptime(data$time_end[row], format = "%H:%M")
# end_time <- paste0(hour(e), "H ", minute(e), "M")
lines(c(start_time, end_time), c(channel_num, channel_num), type="l", col=rand_colors[row])
text(c(start_time, end_time), c(channel_num, channel_num), labels=as.character(c(start_time, end_time)),
cex=1.2, font=2, pos=pos, col=rand_colors[row])
midpoint <- as.duration(start_time + end_time ) / 2
file <- sprintf("[%s]", filename)
text(midpoint, channel_num + 0.2*direction, labels=file, cex=0.9, font=2, pos=pos, col=rand_colors[row])
#0.09* direction if don't squish
}
title(main=list(paste("Channel Letter", channel_letter), cex=2.2))
}
dev.off()
}
sets <- unique(data_tested$set_number)
for(set in sets) {
dataA <- filter(data_tested, set_number == set, as.character(channel_letter) == "A" )
dataA$start_time <- strptime(dataA$time_start, format="%H:%M:%S")
dataA <- dataA[order(dataA$chamber, dataA$start_time),]
dataB <- filter(data_tested, set_number == set, as.character(channel_letter) == "B" )
dataB$start_time <- strptime(dataB$time_start, format="%H:%M:%S")
dataB <- dataB[order(dataB$chamber, dataB$start_time),]
data_list <- list(dataA, dataB)
pdf(paste0("output/set", set, ".pdf"), width = 30, height = 20) #width = 2100, height = 1250) #for png() .png
#par(mar=c(4.5,6,4.5,2))
par(mar=c(54.5,6,4.5,2))
#par(mfrow=c(2,1))
for(data in data_list) {
rand_colors <- randomColor(nrow(data), luminosity="bright")
max_x <- max(as.duration(hms(data$time_end)))
min_x <- min(as.duration(hms(data$time_start)))
plot(1, type="n", xlim=c(min_x, max_x), ylim=c(0.5, 4.8),
xlab="Duration (s)", ylab="Channel Number",
cex.axis=1.7,
cex.lab=2.2)
for(row in 1:nrow(data)) {
if(row %% 2 == 0) {
pos <- 1
direction <- -1}
else{
pos <- 3
direction <- 1}
channel <- as.character(data$chamber[row])
channel_num <- as.numeric(sapply(strsplit(channel, "-"), "[[", 2))
channel_letter <- sapply(strsplit(channel, "-"), "[[", 1)
filename <- data$filename[row]
set_num <- data$set_number[row]
start_time <- hms(data$time_start[row])
end_time <- hms(data$time_end[row])
# s <- strptime(data$time_start[row], format = "%H:%M") # could redo labels this way
# start_time <- paste0(hour(s), "H ", minute(s), "M")
# e <- strptime(data$time_end[row], format = "%H:%M")
# end_time <- paste0(hour(e), "H ", minute(e), "M")
lines(c(start_time, end_time), c(channel_num, channel_num), type="l", col=rand_colors[row])
text(c(start_time, end_time), c(channel_num, channel_num), labels=as.character(c(start_time, end_time)),
cex=1.2, font=2, pos=pos, col=rand_colors[row])
midpoint <- as.duration(start_time + end_time ) / 2
file <- sprintf("[%s]", filename)
text(midpoint, channel_num + 0.2*direction, labels=file, cex=0.9, font=2, pos=pos, col=rand_colors[row])
#0.09* direction if don't squish
}
title(main=list(paste("Channel Letter", channel_letter), cex=2.2))
}
dev.off()
}
sets <- unique(data_tested$set_number)
for(set in sets) {
dataA <- filter(data_tested, set_number == set, as.character(channel_letter) == "A" )
dataA$start_time <- strptime(dataA$time_start, format="%H:%M:%S")
dataA <- dataA[order(dataA$chamber, dataA$start_time),]
dataB <- filter(data_tested, set_number == set, as.character(channel_letter) == "B" )
dataB$start_time <- strptime(dataB$time_start, format="%H:%M:%S")
dataB <- dataB[order(dataB$chamber, dataB$start_time),]
data_list <- list(dataA, dataB)
pdf(paste0("output/set", set, ".pdf"), width = 30, height = 20) #width = 2100, height = 1250) #for png() .png
#par(mar=c(4.5,6,4.5,2))
par(mar=c(54.5,6,4.5,2))
#par(mfrow=c(2,1))
for(data in data_list) {
rand_colors <- randomColor(nrow(data), luminosity="bright")
max_x <- max(as.duration(hms(data$time_end)))
min_x <- min(as.duration(hms(data$time_start)))
plot(1, type="n", xlim=c(min_x, max_x), ylim=c(0.5, 4.8),
xlab="Duration (s)", ylab="Channel Number",
cex.axis=1.7,
cex.lab=2.2)
for(row in 1:nrow(data)) {
if(row %% 2 == 0) {
pos <- 1
direction <- -1}
else{
pos <- 3
direction <- 1}
channel <- as.character(data$chamber[row])
channel_num <- as.numeric(sapply(strsplit(channel, "-"), "[[", 2))
channel_letter <- sapply(strsplit(channel, "-"), "[[", 1)
filename <- data$filename[row]
set_num <- data$set_number[row]
start_time <- hms(data$time_start[row])
end_time <- hms(data$time_end[row])
# s <- strptime(data$time_start[row], format = "%H:%M") # could redo labels this way
# start_time <- paste0(hour(s), "H ", minute(s), "M")
# e <- strptime(data$time_end[row], format = "%H:%M")
# end_time <- paste0(hour(e), "H ", minute(e), "M")
lines(c(start_time, end_time), c(channel_num, channel_num), type="l", col=rand_colors[row])
text(c(start_time, end_time), c(channel_num, channel_num), labels=as.character(c(start_time, end_time)),
cex=1.2, font=2, pos=pos, col=rand_colors[row])
midpoint <- as.duration(start_time + end_time ) / 2
file <- sprintf("[%s]", filename)
text(midpoint, channel_num + 0.2*direction, labels=file, cex=0.9, font=2, pos=pos, col=rand_colors[row])
#0.09* direction if don't squish
}
title(main=list(paste("Channel Letter", channel_letter), cex=2.2))
}
dev.off()
}
sets <- unique(data_tested$set_number)
for(set in sets) {
dataA <- filter(data_tested, set_number == set, as.character(channel_letter) == "A" )
dataA$start_time <- strptime(dataA$time_start, format="%H:%M:%S")
dataA <- dataA[order(dataA$chamber, dataA$start_time),]
dataB <- filter(data_tested, set_number == set, as.character(channel_letter) == "B" )
dataB$start_time <- strptime(dataB$time_start, format="%H:%M:%S")
dataB <- dataB[order(dataB$chamber, dataB$start_time),]
data_list <- list(dataA, dataB)
pdf(paste0("output/set", set, ".pdf"), width = 30, height = 20) #width = 2100, height = 1250) #for png() .png
#par(mar=c(4.5,6,4.5,2))
par(mar=c(54.5,6,4.5,2))
#par(mfrow=c(2,1))
for(data in data_list) {
rand_colors <- randomColor(nrow(data), luminosity="bright")
max_x <- max(as.duration(hms(data$time_end)))
min_x <- min(as.duration(hms(data$time_start)))
plot(1, type="n", xlim=c(min_x, max_x), ylim=c(0.5, 4.8),
xlab="Duration (s)", ylab="Channel Number",
cex.axis=1.7,
cex.lab=2.2)
for(row in 1:nrow(data)) {
if(row %% 2 == 0) {
pos <- 1
direction <- -1}
else{
pos <- 3
direction <- 1}
channel <- as.character(data$chamber[row])
channel_num <- as.numeric(sapply(strsplit(channel, "-"), "[[", 2))
channel_letter <- sapply(strsplit(channel, "-"), "[[", 1)
filename <- data$filename[row]
set_num <- data$set_number[row]
start_time <- hms(data$time_start[row])
end_time <- hms(data$time_end[row])
# s <- strptime(data$time_start[row], format = "%H:%M") # could redo labels this way
# start_time <- paste0(hour(s), "H ", minute(s), "M")
# e <- strptime(data$time_end[row], format = "%H:%M")
# end_time <- paste0(hour(e), "H ", minute(e), "M")
lines(c(start_time, end_time), c(channel_num, channel_num), type="l", col=rand_colors[row])
text(c(start_time, end_time), c(channel_num, channel_num), labels=as.character(c(start_time, end_time)),
cex=1.2, font=2, pos=pos, col=rand_colors[row])
midpoint <- as.duration(start_time + end_time ) / 2
file <- sprintf("[%s]", filename)
text(midpoint, channel_num + 0.2*direction, labels=file, cex=0.9, font=2, pos=pos, col=rand_colors[row])
#0.09* direction if don't squish
}
title(main=list(paste("Channel Letter", channel_letter), cex=2.2))
}
dev.off()
}
sets <- unique(data_tested$set_number)
for(set in sets) {
dataA <- filter(data_tested, set_number == set, as.character(channel_letter) == "A" )
dataA$start_time <- strptime(dataA$time_start, format="%H:%M:%S")
dataA <- dataA[order(dataA$chamber, dataA$start_time),]
dataB <- filter(data_tested, set_number == set, as.character(channel_letter) == "B" )
dataB$start_time <- strptime(dataB$time_start, format="%H:%M:%S")
dataB <- dataB[order(dataB$chamber, dataB$start_time),]
data_list <- list(dataA, dataB)
pdf(paste0("output/set", set, ".pdf"), width = 30, height = 20) #width = 2100, height = 1250) #for png() .png
#par(mar=c(4.5,6,4.5,2))
par(mar=c(54.5,6,4.5,2))
#par(mfrow=c(2,1))
for(data in data_list) {
rand_colors <- randomColor(nrow(data), luminosity="bright")
max_x <- max(as.duration(hms(data$time_end)))
min_x <- min(as.duration(hms(data$time_start)))
plot(1, type="n", xlim=c(min_x, max_x), ylim=c(0.5, 4.8),
xlab="Duration (s)", ylab="Channel Number",
cex.axis=1.7,
cex.lab=2.2)
for(row in 1:nrow(data)) {
if(row %% 2 == 0) {
pos <- 1
direction <- -1}
else{
pos <- 3
direction <- 1}
channel <- as.character(data$chamber[row])
channel_num <- as.numeric(sapply(strsplit(channel, "-"), "[[", 2))
channel_letter <- sapply(strsplit(channel, "-"), "[[", 1)
filename <- data$filename[row]
set_num <- data$set_number[row]
start_time <- hms(data$time_start[row])
end_time <- hms(data$time_end[row])
# s <- strptime(data$time_start[row], format = "%H:%M") # could redo labels this way
# start_time <- paste0(hour(s), "H ", minute(s), "M")
# e <- strptime(data$time_end[row], format = "%H:%M")
# end_time <- paste0(hour(e), "H ", minute(e), "M")
lines(c(start_time, end_time), c(channel_num, channel_num), type="l", col=rand_colors[row])
text(c(start_time, end_time), c(channel_num, channel_num), labels=as.character(c(start_time, end_time)),
cex=1.2, font=2, pos=pos, col=rand_colors[row])
midpoint <- as.duration(start_time + end_time ) / 2
file <- sprintf("[%s]", filename)
text(midpoint, channel_num + 0.2*direction, labels=file, cex=0.9, font=2, pos=pos, col=rand_colors[row])
#0.09* direction if don't squish
}
title(main=list(paste("Channel Letter", channel_letter), cex=2.2))
}
dev.off()
}
sets <- unique(data_tested$set_number)
for(set in sets) {
dataA <- filter(data_tested, set_number == set, as.character(channel_letter) == "A" )
dataA$start_time <- strptime(dataA$time_start, format="%H:%M:%S")
dataA <- dataA[order(dataA$chamber, dataA$start_time),]
dataB <- filter(data_tested, set_number == set, as.character(channel_letter) == "B" )
dataB$start_time <- strptime(dataB$time_start, format="%H:%M:%S")
dataB <- dataB[order(dataB$chamber, dataB$start_time),]
data_list <- list(dataA, dataB)
pdf(paste0("output/set", set, ".pdf"), width = 30, height = 20) #width = 2100, height = 1250) #for png() .png
#par(mar=c(4.5,6,4.5,2))
par(mar=c(54.5,6,4.5,2))
#par(mfrow=c(2,1))
for(data in data_list) {
rand_colors <- randomColor(nrow(data), luminosity="bright")
max_x <- max(as.duration(hms(data$time_end)))
min_x <- min(as.duration(hms(data$time_start)))
plot(1, type="n", xlim=c(min_x, max_x), ylim=c(0.5, 4.8),
xlab="Duration (s)", ylab="Channel Number",
cex.axis=1.7,
cex.lab=2.2)
for(row in 1:nrow(data)) {
if(row %% 2 == 0) {
pos <- 1
direction <- -1}
else{
pos <- 3
direction <- 1}
channel <- as.character(data$chamber[row])
channel_num <- as.numeric(sapply(strsplit(channel, "-"), "[[", 2))
channel_letter <- sapply(strsplit(channel, "-"), "[[", 1)
filename <- data$filename[row]
set_num <- data$set_number[row]
start_time <- hms(data$time_start[row])
end_time <- hms(data$time_end[row])
# s <- strptime(data$time_start[row], format = "%H:%M") # could redo labels this way
# start_time <- paste0(hour(s), "H ", minute(s), "M")
# e <- strptime(data$time_end[row], format = "%H:%M")
# end_time <- paste0(hour(e), "H ", minute(e), "M")
lines(c(start_time, end_time), c(channel_num, channel_num), type="l", col=rand_colors[row])
text(c(start_time, end_time), c(channel_num, channel_num), labels=as.character(c(start_time, end_time)),
cex=1.2, font=2, pos=pos, col=rand_colors[row])
midpoint <- as.duration(start_time + end_time ) / 2
file <- sprintf("[%s]", filename)
text(midpoint, channel_num + 0.2*direction, labels=file, cex=0.9, font=2, pos=pos, col=rand_colors[row])
#0.09* direction if don't squish
}
title(main=list(paste("Channel Letter", channel_letter), cex=2.2))
}
dev.off()
}
sets <- unique(data_tested$set_number)
for(set in sets) {
dataA <- filter(data_tested, set_number == set, as.character(channel_letter) == "A" )
dataA$start_time <- strptime(dataA$time_start, format="%H:%M:%S")
dataA <- dataA[order(dataA$chamber, dataA$start_time),]
dataB <- filter(data_tested, set_number == set, as.character(channel_letter) == "B" )
dataB$start_time <- strptime(dataB$time_start, format="%H:%M:%S")
dataB <- dataB[order(dataB$chamber, dataB$start_time),]
data_list <- list(dataA, dataB)
pdf(paste0("output/set", set, ".pdf"), width = 30, height = 20) #width = 2100, height = 1250) #for png() .png
#par(mar=c(4.5,6,4.5,2))
par(mar=c(54.5,6,4.5,2))
#par(mfrow=c(2,1))
for(data in data_list) {
rand_colors <- randomColor(nrow(data), luminosity="bright")
max_x <- max(as.duration(hms(data$time_end)))
min_x <- min(as.duration(hms(data$time_start)))
plot(1, type="n", xlim=c(min_x, max_x), ylim=c(0.5, 4.8),
xlab="Duration (s)", ylab="Channel Number",
cex.axis=1.7,
cex.lab=2.2)
for(row in 1:nrow(data)) {
if(row %% 2 == 0) {
pos <- 1
direction <- -1}
else{
pos <- 3
direction <- 1}
channel <- as.character(data$chamber[row])
channel_num <- as.numeric(sapply(strsplit(channel, "-"), "[[", 2))
channel_letter <- sapply(strsplit(channel, "-"), "[[", 1)
filename <- data$filename[row]
set_num <- data$set_number[row]
start_time <- hms(data$time_start[row])
end_time <- hms(data$time_end[row])
# s <- strptime(data$time_start[row], format = "%H:%M") # could redo labels this way
# start_time <- paste0(hour(s), "H ", minute(s), "M")
# e <- strptime(data$time_end[row], format = "%H:%M")
# end_time <- paste0(hour(e), "H ", minute(e), "M")
lines(c(start_time, end_time), c(channel_num, channel_num), type="l", col=rand_colors[row])
text(c(start_time, end_time), c(channel_num, channel_num), labels=as.character(c(start_time, end_time)),
cex=1.2, font=2, pos=pos, col=rand_colors[row])
midpoint <- as.duration(start_time + end_time ) / 2
file <- sprintf("[%s]", filename)
text(midpoint, channel_num + 0.2*direction, labels=file, cex=0.9, font=2, pos=pos, col=rand_colors[row])
#0.09* direction if don't squish
}
title(main=list(paste("Channel Letter", channel_letter), cex=2.2))
}
dev.off()
}
sets <- unique(data_tested$set_number)
for(set in sets) {
dataA <- filter(data_tested, set_number == set, as.character(channel_letter) == "A" )
dataA$start_time <- strptime(dataA$time_start, format="%H:%M:%S")
dataA <- dataA[order(dataA$chamber, dataA$start_time),]
dataB <- filter(data_tested, set_number == set, as.character(channel_letter) == "B" )
dataB$start_time <- strptime(dataB$time_start, format="%H:%M:%S")
dataB <- dataB[order(dataB$chamber, dataB$start_time),]
data_list <- list(dataA, dataB)
pdf(paste0("output/set", set, ".pdf"), width = 30, height = 20) #width = 2100, height = 1250) #for png() .png
#par(mar=c(4.5,6,4.5,2))
par(mar=c(54.5,6,4.5,2))
#par(mfrow=c(2,1))
for(data in data_list) {
rand_colors <- randomColor(nrow(data), luminosity="bright")
max_x <- max(as.duration(hms(data$time_end)))
min_x <- min(as.duration(hms(data$time_start)))
plot(1, type="n", xlim=c(min_x, max_x), ylim=c(0.5, 4.8),
xlab="Duration (s)", ylab="Channel Number",
cex.axis=1.7,
cex.lab=2.2)
for(row in 1:nrow(data)) {
if(row %% 2 == 0) {
pos <- 1
direction <- -1}
else{
pos <- 3
direction <- 1}
channel <- as.character(data$chamber[row])
channel_num <- as.numeric(sapply(strsplit(channel, "-"), "[[", 2))
channel_letter <- sapply(strsplit(channel, "-"), "[[", 1)
filename <- data$filename[row]
set_num <- data$set_number[row]
start_time <- hms(data$time_start[row])
end_time <- hms(data$time_end[row])
# s <- strptime(data$time_start[row], format = "%H:%M") # could redo labels this way
# start_time <- paste0(hour(s), "H ", minute(s), "M")
# e <- strptime(data$time_end[row], format = "%H:%M")
# end_time <- paste0(hour(e), "H ", minute(e), "M")
lines(c(start_time, end_time), c(channel_num, channel_num), type="l", col=rand_colors[row])
text(c(start_time, end_time), c(channel_num, channel_num), labels=as.character(c(start_time, end_time)),
cex=1.2, font=2, pos=pos, col=rand_colors[row])
midpoint <- as.duration(start_time + end_time ) / 2
file <- sprintf("[%s]", filename)
text(midpoint, channel_num + 0.2*direction, labels=file, cex=0.9, font=2, pos=pos, col=rand_colors[row])
#0.09* direction if don't squish
}
title(main=list(paste("Channel Letter", channel_letter), cex=2.2))
}
dev.off()
}
sets <- unique(data_tested$set_number)
for(set in sets) {
dataA <- filter(data_tested, set_number == set, as.character(channel_letter) == "A" )
dataA$start_time <- strptime(dataA$time_start, format="%H:%M:%S")
dataA <- dataA[order(dataA$chamber, dataA$start_time),]
dataB <- filter(data_tested, set_number == set, as.character(channel_letter) == "B" )
dataB$start_time <- strptime(dataB$time_start, format="%H:%M:%S")
dataB <- dataB[order(dataB$chamber, dataB$start_time),]
data_list <- list(dataA, dataB)
pdf(paste0("output/set", set, ".pdf"), width = 30, height = 20) #width = 2100, height = 1250) #for png() .png
#par(mar=c(4.5,6,4.5,2))
par(mar=c(54.5,6,4.5,2))
#par(mfrow=c(2,1))
for(data in data_list) {
rand_colors <- randomColor(nrow(data), luminosity="bright")
max_x <- max(as.duration(hms(data$time_end)))
min_x <- min(as.duration(hms(data$time_start)))
plot(1, type="n", xlim=c(min_x, max_x), ylim=c(0.5, 4.8),
xlab="Duration (s)", ylab="Channel Number",
cex.axis=1.7,
cex.lab=2.2)
for(row in 1:nrow(data)) {
if(row %% 2 == 0) {
pos <- 1
direction <- -1}
else{
pos <- 3
direction <- 1}
channel <- as.character(data$chamber[row])
channel_num <- as.numeric(sapply(strsplit(channel, "-"), "[[", 2))
channel_letter <- sapply(strsplit(channel, "-"), "[[", 1)
filename <- data$filename[row]
set_num <- data$set_number[row]
start_time <- hms(data$time_start[row])
end_time <- hms(data$time_end[row])
# s <- strptime(data$time_start[row], format = "%H:%M") # could redo labels this way
# start_time <- paste0(hour(s), "H ", minute(s), "M")
# e <- strptime(data$time_end[row], format = "%H:%M")
# end_time <- paste0(hour(e), "H ", minute(e), "M")
lines(c(start_time, end_time), c(channel_num, channel_num), type="l", col=rand_colors[row])
text(c(start_time, end_time), c(channel_num, channel_num), labels=as.character(c(start_time, end_time)),
cex=1.2, font=2, pos=pos, col=rand_colors[row])
midpoint <- as.duration(start_time + end_time ) / 2
file <- sprintf("[%s]", filename)
text(midpoint, channel_num + 0.2*direction, labels=file, cex=0.9, font=2, pos=pos, col=rand_colors[row])
#0.09* direction if don't squish
}
title(main=list(paste("Channel Letter", channel_letter), cex=2.2))
}
dev.off()
}
