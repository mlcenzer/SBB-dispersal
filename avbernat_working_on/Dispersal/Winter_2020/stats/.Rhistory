wald = c(" ",round(c(0.04626286,1376.550215,0.1232515),2))
pvals = c(" ",round(c(8.296987e-0, 0, 0.72553436),2))
key5 = cbind(Odds, effect, pars, estimate, SE, exp.b, wald, pvals)
# -1 vs. 1
Odds = c("$\\frac{P(Yi=flew\\, in\\, T1\\, only)}{P(Yi=flew\\, in\\, T2\\, only}$", " ", " ", " ")
estimate = round(c(6.046223, 0.046992198 , 5.757301, 28.77938),2)
SE = c(" ", round(c(0.02554888, 0.2196477, 20.22414 ),2))
exp.b = c(" ",round(exp(estimate[2:4]),2))
wald = c(" ",round(c(3.38304457,558.5172,2.02498928),2))
pvals = c(" ",round(c(0.06587027, 0, 0.07996207),2))
key6 = cbind(Odds, effect, pars, estimate, SE, exp.b, wald, pvals)
key = rbind(key1, key2, key3, key4, key5, key6)
rownames(key1)<-NULL
colnames(key) = c("Odds","Effect", "Parameter", "Estimate", "SE", "exp($\\beta$)", "Wald", "p")
kable(key) %>%
kable_styling(bootstrap_options = "hover", full_width = F)  %>%
add_header_above(c("Estimated Parameters, Standard Errors, and Wald Test Statistics for All Main Effects Model" = 8)) %>%
column_spec(1, width="6cm")
rownames(key)<-NULL
kable(key) %>%
kable_styling(bootstrap_options = "hover", full_width = F)  %>%
add_header_above(c("Estimated Parameters, Standard Errors, and Wald Test Statistics for All Main Effects Model" = 8)) %>%
column_spec(1, width="6cm")
# Odds:     Equation of the odds written out as vector of strings.
# effect:   Main effects written out as a vector of strings.
# pars:     Parameters written out as a vector of strings
# odds:     Model table ML equations for the given outcome and baseline.
# r:        Row in which the outcome is indexed.
estimate = round(unlist(odds[r,1:4]),2)
getting_odds = function(Odds, effect, pars, odds, r) {
# Odds:     Equation of the odds written out as vector of strings.
# effect:   Main effects written out as a vector of strings.
# pars:     Parameters written out as a vector of strings
# odds:     Model table ML equations for the given outcome and baseline.
# r:        Row in which the outcome is indexed.
estimate = round(unlist(odds[r,1:4]),2)
SE = c(" ", round(unlist(odds[r,6:8]),2))
exp.b = c(" ",round(exp(estimate[2:4]),2))
wald = c(" ",round(unlist(odds[r,12:14]),2))
pvals = c(" ",round(unlist(odds[r,15:17]),2))
key1 = cbind(Odds, effect, pars, estimate, SE, exp.b, wald, pvals)
}
# 2 vs. -1
Odds = c("$\\frac{P(Yi=flew\\,twice)}{P(Yi=flew\\, in\\, T1\\, only)}$", " ", " ", " ")
effect = c("Intercept", "$\\delta$ Mass %", "Sex", "Wing-to-Body")
pars = c("$\\alpha$", "$\\beta_1$", "$\\beta_2\\, (F=1 | M=-1)$", "$\\beta_3\\,(\\mu=0)$ ")
odds = MASS_PER_ML[[1]]
Odds = c("$\\frac{P(Yi=flew\\,twice)}{P(Yi=flew\\, in\\, T1\\, only)}$", " ", " ", " ")
effect = c("Intercept", "$\\delta$ Mass %", "Sex", "Wing-to-Body")
pars = c("$\\alpha$", "$\\beta_1$", "$\\beta_2\\, (F=1 | M=-1)$", "$\\beta_3\\,(\\mu=0)$ ")
odds = MASS_PER_ML[[1]]
getting_odds = function(Odds, effect, pars, odds, r) {
# Odds:     Equation of the odds written out as vector of strings.
# effect:   Main effects written out as a vector of strings.
# pars:     Parameters written out as a vector of strings
# odds:     Model table ML equations for the given outcome and baseline.
# r:        Row in which the outcome is indexed.
estimate = round(unlist(odds[r,1:4]),2)
SE = c(" ", round(unlist(odds[r,6:8]),2))
exp.b = c(" ",round(exp(estimate[2:4]),2))
wald = c(" ",round(unlist(odds[r,12:14]),2))
pvals = c(" ",round(unlist(odds[r,15:17]),2))
key = cbind(Odds, effect, pars, estimate, SE, exp.b, wald, pvals)
return(key)
}
key1 = getting_odds(Odds, effect, pars, MASS_PER_ML[[1]], 3)
getting_odds = function(Odds, effect, pars, odds, r) {
# Odds:     Equation of the odds written out as vector of strings.
# effect:   Main effects written out as a vector of strings.
# pars:     Parameters written out as a vector of strings
# odds:     Model table ML equations for the given outcome and baseline.
# r:        Row in which the outcome is indexed.
estimate = round(unlist(odds[r,1:4]),2)
SE = c(" ", round(unlist(odds[r,6:8]),2))
exp.b = c(" ",round(exp(estimate[2:4]),2))
wald = c(" ",round(unlist(odds[r,12:14]),2))
pvals = c(" ",round(unlist(odds[r,15:17]),2))
key = cbind(Odds, effect, pars, estimate, SE, exp.b, wald, pvals)
return(key)
}
# 2 vs. -1
Odds = c("$\\frac{P(Yi=flew\\,twice)}{P(Yi=flew\\, in\\, T1\\, only)}$", " ", " ", " ")
effect = c("Intercept", "$\\delta$ Mass %", "Sex", "Wing-to-Body")
pars = c("$\\alpha$", "$\\beta_1$", "$\\beta_2\\, (F=1 | M=-1)$", "$\\beta_3\\,(\\mu=0)$ ")
key1 = getting_odds(Odds, effect, pars, MASS_PER_ML[[1]], 3)
# 2 vs. 1
Odds = c("$\\frac{P(Yi=flew\\,twice)}{P(Yi=flew\\, in\\, T2\\, only)}$", " ", " ", " ")
key2 = getting_odds(Odds, effect, pars, MASS_PER_ML[[3]], 3)
key3 = getting_odds(Odds, effect, pars, MASS_PER_ML[[2]], 3)
getting_odds = function(Odds, effect, pars, odds, r) {
# Odds:     Equation of the odds written out as vector of strings.
# effect:   Main effects written out as a vector of strings.
# pars:     Parameters written out as a vector of strings
# odds:     Model table ML equations for the given outcome and baseline.
# r:        Row in which the outcome is indexed.
estimate = round(unlist(odds[r,1:4]),2)
SE = c(" ", round(unlist(odds[r,6:8]),2))
exp.b = c(" ",round(exp(estimate[2:4]),2))
wald = c(" ",round(unlist(odds[r,12:14]),2))
pvals = c(" ",round(unlist(odds[r,15:17]),2))
key = cbind(Odds, effect, pars, estimate, SE, exp.b, wald, pvals)
return(key)
}
# 2 vs. -1
Odds = c("$\\frac{P(Yi=flew\\,twice)}{P(Yi=flew\\, in\\, T1\\, only)}$", " ", " ", " ")
effect = c("Intercept", "$\\delta$ Mass %", "Sex", "Wing-to-Body")
pars = c("$\\alpha$", "$\\beta_1$", "$\\beta_2\\, (F=1 | M=-1)$", "$\\beta_3\\,(\\mu=0)$ ")
key1 = getting_odds(Odds, effect, pars, MASS_PER_ML[[1]], 3)
# 2 vs. 1
Odds = c("$\\frac{P(Yi=flew\\,twice)}{P(Yi=flew\\, in\\, T2\\, only)}$", " ", " ", " ")
key2 = getting_odds(Odds, effect, pars, MASS_PER_ML[[3]], 3)
# 2 vs. 0
Odds = c("$\\frac{P(Yi=flew\\,twice)}{P(Yi=did\\, not\\, fly)}$", " ", " ", " ")
key3 = getting_odds(Odds, effect, pars, MASS_PER_ML[[2]], 3)
MASS_PER_ML
# -1 vs. 0
Odds = c("$\\frac{P(Yi=flew\\, in\\, T1\\, only)}{P(Yi=did\\, not\\, fly)}$", " ", " ", " ")
key4 = getting_odds(Odds, effect, pars, MASS_PER_ML[[2]], 1)
MASS_PER_ML[[2]]
Odds = c("$\\frac{P(Yi=flew\\, in\\, T2\\, only)}{P(Yi=did\\, not\\, fly)}$", " ", " ", " ")
key5 = getting_odds(Odds, effect, pars, MASS_PER_ML[[2]], 2)
MASS_PER_ML[[3]]
key6 = getting_odds(Odds, effect, pars, MASS_PER_ML[[3]], 2)
# -1 vs. 1
Odds = c("$\\frac{P(Yi=flew\\, in\\, T1\\, only)}{P(Yi=flew\\, in\\, T2\\, only}$", " ", " ", " ")
getting_odds = function(Odds, effect, pars, odds, r) {
# Odds:     Equation of the odds written out as vector of strings.
# effect:   Main effects written out as a vector of strings.
# pars:     Parameters written out as a vector of strings
# odds:     Model table ML equations for the given outcome and baseline.
# r:        Row in which the outcome is indexed.
estimate = round(unlist(odds[r,1:4]),2)
SE = c(" ", round(unlist(odds[r,6:8]),2))
exp.b = c(" ",round(exp(estimate[2:4]),2))
wald = c(" ",round(unlist(odds[r,12:14]),2))
pvals = c(" ",round(unlist(odds[r,15:17]),2))
key = cbind(Odds, effect, pars, estimate, SE, exp.b, wald, pvals)
return(key)
}
# 2 vs. -1
Odds = c("$\\frac{P(Yi=flew\\,twice)}{P(Yi=flew\\, in\\, T1\\, only)}$", " ", " ", " ")
effect = c("Intercept", "$\\delta$ Mass %", "Sex", "Wing-to-Body")
pars = c("$\\alpha$", "$\\beta_1$", "$\\beta_2\\, (F=1 | M=-1)$", "$\\beta_3\\,(\\mu=0)$ ")
key1 = getting_odds(Odds, effect, pars, MASS_PER_ML[[1]], 3)
# 2 vs. 1
Odds = c("$\\frac{P(Yi=flew\\,twice)}{P(Yi=flew\\, in\\, T2\\, only)}$", " ", " ", " ")
key2 = getting_odds(Odds, effect, pars, MASS_PER_ML[[3]], 3)
# 2 vs. 0
Odds = c("$\\frac{P(Yi=flew\\,twice)}{P(Yi=did\\, not\\, fly)}$", " ", " ", " ")
key3 = getting_odds(Odds, effect, pars, MASS_PER_ML[[2]], 3)
# -1 vs. 0
Odds = c("$\\frac{P(Yi=flew\\, in\\, T1\\, only)}{P(Yi=did\\, not\\, fly)}$", " ", " ", " ")
key4 = getting_odds(Odds, effect, pars, MASS_PER_ML[[2]], 1)
# 1 vs. 0
Odds = c("$\\frac{P(Yi=flew\\, in\\, T2\\, only)}{P(Yi=did\\, not\\, fly)}$", " ", " ", " ")
key5 = getting_odds(Odds, effect, pars, MASS_PER_ML[[2]], 2)
# -1 vs. 1
Odds = c("$\\frac{P(Yi=flew\\, in\\, T1\\, only)}{P(Yi=flew\\, in\\, T2\\, only}$", " ", " ", " ")
key6 = getting_odds(Odds, effect, pars, MASS_PER_ML[[3]], 2)
getting_odds = function(Odds, effect, pars, odds, r) {
# Odds:     Equation of the odds written out as vector of strings.
# effect:   Main effects written out as a vector of strings.
# pars:     Parameters written out as a vector of strings
# odds:     Model table ML equations for the given outcome and baseline.
# r:        Row in which the outcome is indexed.
estimate = round(unlist(odds[r,1:4]),2)
SE = c(" ", round(unlist(odds[r,6:8]),2))
exp.b = c(" ",round(exp(estimate[2:4]),2))
wald = c(" ",round(unlist(odds[r,12:14]),2))
pvals = c(" ",round(unlist(odds[r,15:17]),2))
key = cbind(Odds, effect, pars, estimate, SE, exp.b, wald, pvals)
return(key)
}
getting_odds = function(Odds, effect, pars, odds, r) {
# Odds:     Equation of the odds written out as vector of strings.
# effect:   Main effects written out as a vector of strings.
# pars:     Parameters written out as a vector of strings
# odds:     Model table ML equations for the given outcome and baseline.
# r:        Row in which the outcome is indexed.
estimate = round(unlist(odds[r,1:4]),2)
SE = c(" ", round(unlist(odds[r,6:8]),2))
exp.b = c(" ",round(exp(estimate[2:4]),2))
wald = c(" ",round(unlist(odds[r,12:14]),2))
pvals = c(" ",round(unlist(odds[r,15:17]),2))
key = cbind(Odds, effect, pars, estimate, SE, exp.b, wald, pvals)
return(key)
}
# 2 vs. -1
Odds = c("$\\frac{P(Yi=flew\\,twice)}{P(Yi=flew\\, in\\, T1\\, only)}$", " ", " ", " ")
effect = c("Intercept", "$\\delta$ Mass %", "Sex", "Wing-to-Body")
pars = c("$\\alpha$", "$\\beta_1$", "$\\beta_2\\, (F=1 | M=-1)$", "$\\beta_3\\,(\\mu=0)$ ")
key1 = getting_odds(Odds, effect, pars, MASS_PER_ML[[1]], 3)
# 2 vs. 1
Odds = c("$\\frac{P(Yi=flew\\,twice)}{P(Yi=flew\\, in\\, T2\\, only)}$", " ", " ", " ")
key2 = getting_odds(Odds, effect, pars, MASS_PER_ML[[3]], 3)
# 2 vs. 0
Odds = c("$\\frac{P(Yi=flew\\,twice)}{P(Yi=did\\, not\\, fly)}$", " ", " ", " ")
key3 = getting_odds(Odds, effect, pars, MASS_PER_ML[[2]], 3)
# -1 vs. 0
Odds = c("$\\frac{P(Yi=flew\\, in\\, T1\\, only)}{P(Yi=did\\, not\\, fly)}$", " ", " ", " ")
key4 = getting_odds(Odds, effect, pars, MASS_PER_ML[[2]], 1)
# 1 vs. 0
Odds = c("$\\frac{P(Yi=flew\\, in\\, T2\\, only)}{P(Yi=did\\, not\\, fly)}$", " ", " ", " ")
key5 = getting_odds(Odds, effect, pars, MASS_PER_ML[[2]], 2)
# -1 vs. 1
Odds = c("$\\frac{P(Yi=flew\\, in\\, T1\\, only)}{P(Yi=flew\\, in\\, T2\\, only}$", " ", " ", " ")
key6 = getting_odds(Odds, effect, pars, MASS_PER_ML[[3]], 2)
key = rbind(key1, key2, key3, key4, key5, key6)
rownames(key)<-NULL
colnames(key) = c("Odds","Effect", "Parameter", "Estimate", "SE", "exp($\\beta$)", "Wald", "p")
kable(key) %>%
kable_styling(bootstrap_options = "hover", full_width = F)  %>%
add_header_above(c("Estimated Parameters, Standard Errors, and Wald Test Statistics for All Main Effects Model" = 8)) %>%
column_spec(1, width="6cm")
#%>% row_spec(0, italic=T)
# save_kable("model_table.pdf)
key
key$estimate
key[4]
key[,4]
key[,6]
getting_odds = function(Odds, effect, pars, odds, r) {
# Odds:     Equation of the odds written out as vector of strings.
# effect:   Main effects written out as a vector of strings.
# pars:     Parameters written out as a vector of strings
# odds:     Model table ML equations for the given outcome and baseline.
# r:        Row in which the outcome is indexed.
estimate = round(unlist(odds[r,1:4]),2)
SE = c(" ", round(unlist(odds[r,6:8]),2))
for (i in 2:4) {
print(i)
}
exp.b = c(" ",round(exp(estimate[2:4]),2))
wald = c(" ",round(unlist(odds[r,12:14]),2))
pvals = c(" ",round(unlist(odds[r,15:17]),2))
key = cbind(Odds, effect, pars, estimate, SE, exp.b, wald, pvals)
return(key)
}
key1 = getting_odds(Odds, effect, pars, MASS_PER_ML[[1]], 3)
getting_odds = function(Odds, effect, pars, odds, r) {
# Odds:     Equation of the odds written out as vector of strings.
# effect:   Main effects written out as a vector of strings.
# pars:     Parameters written out as a vector of strings
# odds:     Model table ML equations for the given outcome and baseline.
# r:        Row in which the outcome is indexed.
estimate = round(unlist(odds[r,1:4]),2)
SE = c(" ", round(unlist(odds[r,6:8]),2))
for (i in 2:4) {
if (i == 2) {
estimate[i] = estimate[i]*20
}
if (i ==3) {
estimate[i] = estimate[i]/100
}
}
exp.b = c(" ",round(exp(estimate[2:4]),2))
wald = c(" ",round(unlist(odds[r,12:14]),2))
pvals = c(" ",round(unlist(odds[r,15:17]),2))
key = cbind(Odds, effect, pars, estimate, SE, exp.b, wald, pvals)
return(key)
}
# 2 vs. -1
Odds = c("$\\frac{P(Yi=flew\\,twice)}{P(Yi=flew\\, in\\, T1\\, only)}$", " ", " ", " ")
effect = c("Intercept", "$\\delta$ Mass %", "Sex", "Wing-to-Body")
pars = c("$\\alpha$", "$\\beta_1$", "$\\beta_2\\, (F=1 | M=-1)$", "$\\beta_3\\,(\\mu=0)$ ")
key1 = getting_odds(Odds, effect, pars, MASS_PER_ML[[1]], 3)
# 2 vs. 1
Odds = c("$\\frac{P(Yi=flew\\,twice)}{P(Yi=flew\\, in\\, T2\\, only)}$", " ", " ", " ")
key2 = getting_odds(Odds, effect, pars, MASS_PER_ML[[3]], 3)
# 2 vs. 0
Odds = c("$\\frac{P(Yi=flew\\,twice)}{P(Yi=did\\, not\\, fly)}$", " ", " ", " ")
key3 = getting_odds(Odds, effect, pars, MASS_PER_ML[[2]], 3)
# -1 vs. 0
Odds = c("$\\frac{P(Yi=flew\\, in\\, T1\\, only)}{P(Yi=did\\, not\\, fly)}$", " ", " ", " ")
key4 = getting_odds(Odds, effect, pars, MASS_PER_ML[[2]], 1)
# 1 vs. 0
Odds = c("$\\frac{P(Yi=flew\\, in\\, T2\\, only)}{P(Yi=did\\, not\\, fly)}$", " ", " ", " ")
key5 = getting_odds(Odds, effect, pars, MASS_PER_ML[[2]], 2)
# -1 vs. 1
Odds = c("$\\frac{P(Yi=flew\\, in\\, T1\\, only)}{P(Yi=flew\\, in\\, T2\\, only}$", " ", " ", " ")
key6 = getting_odds(Odds, effect, pars, MASS_PER_ML[[3]], 2)
key = rbind(key1, key2, key3, key4, key5, key6)
rownames(key)<-NULL
colnames(key) = c("Odds","Effect", "Parameter", "Estimate", "SE", "exp($\\beta$)", "Wald", "p")
kable(key) %>%
kable_styling(bootstrap_options = "hover", full_width = F)  %>%
add_header_above(c("Estimated Parameters, Standard Errors, and Wald Test Statistics for All Main Effects Model" = 8)) %>%
column_spec(1, width="6cm")
getting_odds = function(Odds, effect, pars, odds, r) {
# Odds:     Equation of the odds written out as vector of strings.
# effect:   Main effects written out as a vector of strings.
# pars:     Parameters written out as a vector of strings
# odds:     Model table ML equations for the given outcome and baseline.
# r:        Row in which the outcome is indexed.
estimate = round(unlist(odds[r,1:4]),2)
SE = c(" ", round(unlist(odds[r,6:8]),2))
for (i in 2:4) {
if (i == 2) {
estimate[i] = estimate[i]*20
}
if (i == 4) {
estimate[i] = estimate[i]/100
}
}
exp.b = c(" ",round(exp(estimate[2:4]),2))
wald = c(" ",round(unlist(odds[r,12:14]),2))
pvals = c(" ",round(unlist(odds[r,15:17]),2))
key = cbind(Odds, effect, pars, estimate, SE, exp.b, wald, pvals)
return(key)
}
# 2 vs. -1
Odds = c("$\\frac{P(Yi=flew\\,twice)}{P(Yi=flew\\, in\\, T1\\, only)}$", " ", " ", " ")
effect = c("Intercept", "$\\delta$ Mass %", "Sex", "Wing-to-Body")
pars = c("$\\alpha$", "$\\beta_1$", "$\\beta_2\\, (F=1 | M=-1)$", "$\\beta_3\\,(\\mu=0)$ ")
key1 = getting_odds(Odds, effect, pars, MASS_PER_ML[[1]], 3)
# 2 vs. 1
Odds = c("$\\frac{P(Yi=flew\\,twice)}{P(Yi=flew\\, in\\, T2\\, only)}$", " ", " ", " ")
key2 = getting_odds(Odds, effect, pars, MASS_PER_ML[[3]], 3)
# 2 vs. 0
Odds = c("$\\frac{P(Yi=flew\\,twice)}{P(Yi=did\\, not\\, fly)}$", " ", " ", " ")
key3 = getting_odds(Odds, effect, pars, MASS_PER_ML[[2]], 3)
# -1 vs. 0
Odds = c("$\\frac{P(Yi=flew\\, in\\, T1\\, only)}{P(Yi=did\\, not\\, fly)}$", " ", " ", " ")
key4 = getting_odds(Odds, effect, pars, MASS_PER_ML[[2]], 1)
# 1 vs. 0
Odds = c("$\\frac{P(Yi=flew\\, in\\, T2\\, only)}{P(Yi=did\\, not\\, fly)}$", " ", " ", " ")
key5 = getting_odds(Odds, effect, pars, MASS_PER_ML[[2]], 2)
# -1 vs. 1
Odds = c("$\\frac{P(Yi=flew\\, in\\, T1\\, only)}{P(Yi=flew\\, in\\, T2\\, only}$", " ", " ", " ")
key6 = getting_odds(Odds, effect, pars, MASS_PER_ML[[3]], 2)
key = rbind(key1, key2, key3, key4, key5, key6)
rownames(key)<-NULL
colnames(key) = c("Odds","Effect", "Parameter", "Estimate", "SE", "exp($\\beta$)", "Wald", "p")
kable(key) %>%
kable_styling(bootstrap_options = "hover", full_width = F)  %>%
add_header_above(c("Estimated Parameters, Standard Errors, and Wald Test Statistics for All Main Effects Model" = 8)) %>%
column_spec(1, width="6cm")
#%>% row_spec(0, italic=T)
# save_kable("model_table.pdf)
# 2 vs. -1
Odds = c("$\\frac{P(Yi=flew\\,twice)}{P(Yi=flew\\, in\\, T1\\, only)}$", " ", " ", " ")
effect = c("Intercept", "$\\delta$ Mass %", "Sex", "Wing-to-Body")
pars = c("$\\alpha$", "$\\beta_1$", "$\\beta_2\\, (F=1 | M=-1)$", "$\\beta_3\\,(\\mu=0)$ ")
key1 = getting_odds(Odds, effect, pars, MASS_PER_ML[[1]], 3)
# 2 vs. 1
Odds = c("$\\frac{P(Yi=flew\\,twice)}{P(Yi=flew\\, in\\, T2\\, only)}$", " ", " ", " ")
key2 = getting_odds(Odds, effect, pars, MASS_PER_ML[[3]], 3)
# 2 vs. 0
Odds = c("$\\frac{P(Yi=flew\\,twice)}{P(Yi=did\\, not\\, fly)}$", " ", " ", " ")
key3 = getting_odds(Odds, effect, pars, MASS_PER_ML[[2]], 3)
# -1 vs. 0
Odds = c("$\\frac{P(Yi=flew\\, in\\, T1\\, only)}{P(Yi=did\\, not\\, fly)}$", " ", " ", " ")
key4 = getting_odds(Odds, effect, pars, MASS_PER_ML[[2]], 1)
# 1 vs. 0
Odds = c("$\\frac{P(Yi=flew\\, in\\, T2\\, only)}{P(Yi=did\\, not\\, fly)}$", " ", " ", " ")
key5 = getting_odds(Odds, effect, pars, MASS_PER_ML[[2]], 2)
# -1 vs. 1
Odds = c("$\\frac{P(Yi=flew\\, in\\, T1\\, only)}{P(Yi=flew\\, in\\, T2\\, only}$", " ", " ", " ")
key6 = getting_odds(Odds, effect, pars, MASS_PER_ML[[3]], 2)
key = rbind(key1, key2, key3, key4, key5, key6)
rownames(key)<-NULL
colnames(key) = c("Odds","Effect", "Parameter", "Estimate", "SE", "exp($\\beta$)*", "Wald", "p")
kable(key) %>%
kable_styling(bootstrap_options = "hover", full_width = F)  %>%
add_header_above(c("Estimated Parameters, Standard Errors, and Wald Test Statistics for All Main Effects Model" = 8)) %>%
column_spec(1, width="6cm")
#%>% row_spec(0, italic=T)
# save_kable("model_table.pdf)
kable(key) %>%
kable_styling(bootstrap_options = "strips" "hover", full_width = F)  %>%
kable(key) %>%
kable_styling(bootstrap_options = "striped", "hover", full_width = F)  %>%
add_header_above(c("Estimated Parameters, Standard Errors, and Wald Test Statistics for All Main Effects Model" = 8)) %>%
column_spec(1, width="6cm")
#%>% row_spec(0, italic=T)
# save_kable("model_table.pdf)
getting_odds = function(Odds, effect, pars, odds, r) {
# Odds:     Equation of the odds written out as vector of strings.
# effect:   Main effects written out as a vector of strings.
# pars:     Parameters written out as a vector of strings
# odds:     Model table ML equations for the given outcome and baseline.
# r:        Row in which the outcome is indexed.
estimate = round(unlist(odds[r,1:4]),2)
SE = c(" ", round(unlist(odds[r,6:8]),2))
for (i in 2:4) {
if (i == 2) {
estimate[i] = estimate[i]*20
}
if (i == 4) {
estimate[i] = round(estimate[i]/100,2)
}
}
exp.b = c(" ",round(exp(estimate[2:4]),2))
wald = c(" ",round(unlist(odds[r,12:14]),2))
pvals = c(" ",round(unlist(odds[r,15:17]),2))
key = cbind(Odds, effect, pars, estimate, SE, exp.b, wald, pvals)
return(key)
}
# 2 vs. -1
Odds = c("$\\frac{P(Yi=flew\\,twice)}{P(Yi=flew\\, in\\, T1\\, only)}$", " ", " ", " ")
# 2 vs. -1
Odds = c("$\\frac{P(Yi=flew\\,twice)}{P(Yi=flew\\, in\\, T1\\, only)}$", " ", " ", " ")
effect = c("Intercept", "$\\delta$ Mass %", "Sex", "Wing-to-Body")
pars = c("$\\alpha$", "$\\beta_1$", "$\\beta_2\\, (F=1 | M=-1)$", "$\\beta_3\\,(\\mu=0)$ ")
key1 = getting_odds(Odds, effect, pars, MASS_PER_ML[[1]], 3)
# 2 vs. 1
Odds = c("$\\frac{P(Yi=flew\\,twice)}{P(Yi=flew\\, in\\, T2\\, only)}$", " ", " ", " ")
key2 = getting_odds(Odds, effect, pars, MASS_PER_ML[[3]], 3)
# 2 vs. 0
Odds = c("$\\frac{P(Yi=flew\\,twice)}{P(Yi=did\\, not\\, fly)}$", " ", " ", " ")
key3 = getting_odds(Odds, effect, pars, MASS_PER_ML[[2]], 3)
# -1 vs. 0
Odds = c("$\\frac{P(Yi=flew\\, in\\, T1\\, only)}{P(Yi=did\\, not\\, fly)}$", " ", " ", " ")
key4 = getting_odds(Odds, effect, pars, MASS_PER_ML[[2]], 1)
# 1 vs. 0
Odds = c("$\\frac{P(Yi=flew\\, in\\, T2\\, only)}{P(Yi=did\\, not\\, fly)}$", " ", " ", " ")
key5 = getting_odds(Odds, effect, pars, MASS_PER_ML[[2]], 2)
# -1 vs. 1
Odds = c("$\\frac{P(Yi=flew\\, in\\, T1\\, only)}{P(Yi=flew\\, in\\, T2\\, only}$", " ", " ", " ")
key6 = getting_odds(Odds, effect, pars, MASS_PER_ML[[3]], 2)
key = rbind(key1, key2, key3, key4, key5, key6)
rownames(key)<-NULL
colnames(key) = c("Odds","Effect", "Parameter", "Estimate*", "SE", "exp($\\beta$)*", "Wald", "p")
kable(key) %>%
kable_styling(bootstrap_options = "striped", "hover", full_width = F)  %>%
add_header_above(c("Estimated Parameters, Standard Errors, and Wald Test Statistics for All Main Effects Model" = 8)) %>%
column_spec(1, width="6cm")
sd(d$wing2body_c)
sd(d$wing2body_c) / 2
kable(key) %>%
kable_styling(bootstrap_options = "striped", "hover", full_width = F)  %>%
add_header_above(c("Estimated Parameters, Standard Errors, and Wald Test Statistics for All Main Effects Model" = 8)) %>%
column_spec(1, width="6cm")
kable(key) %>%
kable_styling(bootstrap_options = "striped", "hover", full_width = F)  %>%
add_header_above(c("Estimated Parameters, Standard Errors, and Wald Test Statistics for All Main Effects Model" = 8)) %>%
column_spec(1, width="6cm") %>%
kable_classic(full_width = F, html_font = "Cambria")
kable(key, caption="Estimated Parameters, Standard Errors, and Wald Test Statistics for All Main Effects Model") %>%
kable_styling(bootstrap_options = "striped", "hover", full_width = F)  %>%
column_spec(1, width="6cm") %>%
kable_classic(full_width = F, html_font = "Cambria")
kable(key, caption="Estimated Parameters, Standard Errors, and Wald Test Statistics for All Main Effects Model") %>%
kable_styling(bootstrap_options = "striped", "hover", full_width = F)  %>%
column_spec(1, width="6cm") %>%
kable_classic(html_font = "Cambria")
kable(key, caption="Estimated Parameters, Standard Errors, and Wald Test Statistics for All Main Effects Model") %>%
kable_styling(bootstrap_options = "striped", "hover", full_width = F)  %>%
column_spec(1, width="10cm") %>%
kable_classic(html_font = "Cambria")
kable(key, caption="Estimated Parameters, Standard Errors, and Wald Test Statistics for All Main Effects Model") %>%
kable_styling(bootstrap_options = "striped", "hover", full_width = F)  %>%
column_spec(1, width="6cm") %>%
kable_classic(html_font = "Cambria")
kable(key, caption="Table 1. Estimated Parameters, Standard Errors, and Wald Test Statistics for All Main Effects Model") %>%
kable_styling(bootstrap_options = "striped", "hover", full_width = F)  %>%
column_spec(1, width="6cm") %>%
kable_classic(html_font = "Cambria")
kable(key, caption="Table 1. Estimated Parameters, Standard Errors, and Wald Test Statistics for All Main Effects Model") %>%
kable_styling(bootstrap_options = "striped", "hover", full_width = F)  %>%
column_spec(1, width="6cm") %>%
kable_classic(html_font = "Cambria") %>%
pack_rows(" ", 1, 4)
kable(key, caption="Table 1. Estimated Parameters, Standard Errors, and Wald Test Statistics for All Main Effects Model") %>%
kable_styling(bootstrap_options = "striped", "hover", full_width = F)  %>%
column_spec(1, width="6cm") %>%
kable_classic(html_font = "Cambria") %>%
pack_rows(" ", 1, 4) %>%
pack_rows(" ", 5, 8)
kable(key, caption="Table 1. Estimated Parameters, Standard Errors, and Wald Test Statistics for All Main Effects Model") %>%
kable_styling(bootstrap_options = "striped", "hover", full_width = F)  %>%
column_spec(1, width="6cm") %>%
kable_classic_2(html_font = "Cambria")
kable(key, caption="Table 1. Estimated Parameters, Standard Errors, and Wald Test Statistics for All Main Effects Model") %>%
kable_styling(bootstrap_options = "striped", "hover", full_width = F)  %>%
column_spec(1, width="6cm") %>%
kable_classic(html_font = "Cambria")
kable(key, caption="Table 1. Estimated Parameters, Standard Errors, and Wald Test Statistics for All Main Effects Model") %>%
kable_styling(bootstrap_options = "striped", "hover", full_width = F)  %>%
column_spec(1, width="6cm") %>%
kable_classic(html_font = "Cambria") %>%
row_spec(2, extra_css = "border-bottom: 1px solid")
kable(key, caption="Table 1. Estimated Parameters, Standard Errors, and Wald Test Statistics for All Main Effects Model") %>%
kable_styling(bootstrap_options = "striped", "hover", full_width = F)  %>%
column_spec(1, width="6cm") %>%
kable_classic(html_font = "Cambria") %>%
row_spec(4, extra_css = "border-bottom: 1px solid")
kable(key, caption="Table 1. Estimated Parameters, Standard Errors, and Wald Test Statistics for All Main Effects Model") %>%
kable_styling(bootstrap_options = "striped", "hover", full_width = F)  %>%
column_spec(1, width="6cm") %>%
kable_classic(html_font = "Cambria") %>%
row_spec(c(4,8), extra_css = "border-bottom: 1px solid")
kable(key, caption="Table 1. Estimated Parameters, Standard Errors, and Wald Test Statistics for All Main Effects Model") %>%
kable_styling(bootstrap_options = "striped", "hover", full_width = F)  %>%
column_spec(1, width="6cm") %>%
kable_classic(html_font = "Cambria") %>%
row_spec(c(4,8, 12), extra_css = "border-bottom: 1px solid")
kable(key, caption="Table 1. Estimated Parameters, Standard Errors, and Wald Test Statistics for All Main Effects Model") %>%
kable_styling(bootstrap_options = "striped", "hover", full_width = F)  %>%
column_spec(1, width="6cm") %>%
kable_classic(html_font = "Cambria") %>%
row_spec(c(4,8,12,16), extra_css = "border-bottom: 1px solid")
kable(key, caption="Table 1. Estimated Parameters, Standard Errors, and Wald Test Statistics for All Main Effects Model") %>%
kable_styling(bootstrap_options = "striped", "hover", full_width = F)  %>%
column_spec(1, width="6cm") %>%
kable_classic(html_font = "Cambria") %>%
row_spec(c(4,8,12,16), extra_css = "border-bottom: 1px solid")
kable(key, caption="Table 1. Estimated Parameters, Standard Errors, and Wald Test Statistics for All Main Effects Model") %>%
kable_styling(bootstrap_options = "striped", "hover", full_width = F)  %>%
column_spec(1, width="6cm") %>%
kable_classic(html_font = "Cambria") %>%
row_spec(c(4,8,12,16,20), extra_css = "border-bottom: 1px solid")
