d$w_morph <- unlist(d$w_morph)
d$wing2body <- unlist(d$wing2body)
d$beak_c <- unlist(d$beak_c)
d$thorax_c <- unlist(d$thorax_c)
d$wing_c <- unlist(d$wing_c)
d$w_morph_c <- unlist(d$w_morph_c)
d$wing2body_c <- unlist(d$wing2body_c)
####### Effect of beak length
tidy_regression(glm(num_flew~beak_c, data=d), is_color=output_col)
####### Effect of thorax length
tidy_regression(glm(num_flew~thorax_c, data=d), is_color=output_col)
####### Effect of body length
tidy_regression(glm(num_flew~body_c, data=d), is_color=output_col)
# columns of strings (e.g. "T1, T2")
# d2 <- data_tested %>%
#     group_by(ID) %>%
#     summarise_all(funs(toString(na.omit(.))))
# columns of tuples (e.g. list(T1, T2))
d <- data_tested %>%
group_by(ID) %>%
summarise_all(funs(list(na.omit(.))))
d$num_flew <- 0
d$num_notflew <- 0
d$average_mass <- 0
for(row in 1:length(d$flew_b)){
n_flew <- sum(d$flew_b[[row]] == 1) # total number of times did fly among trails
d$num_flew[[row]] <- n_flew
n_notflew <- sum(d$flew_b[[row]] == 0) # total number of times did not fly among trails
d$num_notflew[[row]] <- n_flew
avg_mass <- mean(d$mass[[row]])
d$average_mass[[row]] <- avg_mass
# keep columns that are the same value as only 1 value rather than a list:
d$sex[[row]] <- d$sex[[row]][1]
d$sex_c[[row]] <- d$sex_c[[row]][1]
d$population[[row]] <- d$population[[row]][1]
d$host_plant[[row]] <- d$host_plant[[row]][1]
d$host_c[[row]] <- d$host_c[[row]][1]
d$flight_type[[row]] <- d$flight_type[[row]][1]
d$latitude[[row]] <- d$latitude[[row]][1]
d$longitude[[row]] <- d$longitude[[row]][1]
d$total_eggs[[row]] <- d$total_eggs[[row]][1]
d$body[[row]] <- d$body[[row]][1]
d$beak[[row]] <- d$beak[[row]][1]
d$thorax[[row]] <- d$thorax[[row]][1]
d$wing[[row]] <- d$wing[[row]][1]
d$w_morph[[row]] <- d$w_morph[[row]][1]
d$wing2body[[row]] <- d$wing2body[[row]][1]
d$body_c[[row]] <- d$body_c[[row]][1]
d$beak_c[[row]] <- d$beak_c[[row]][1]
d$thorax_c[[row]] <- d$thorax_c[[row]][1]
d$wing_c[[row]] <- d$wing_c[[row]][1]
d$w_morph_c[[row]] <- d$w_morph_c[[row]][1]
d$wing2body_c[[row]] <- d$wing2body_c[[row]][1]
}
d$sex <- unlist(d$sex)
d$sex_c <- unlist(d$sex_c)
d$population <- unlist(d$population)
d$host_plant <- unlist(d$host_plant)
d$host_c <- unlist(d$host_c)
d$total_eggs <- unlist(d$total_eggs)
d$body <- unlist(d$body)
d$beak <- unlist(d$beak)
d$thorax <- unlist(d$thorax)
d$wing <- unlist(d$wing)
d$w_morph <- unlist(d$w_morph)
d$wing2body <- unlist(d$wing2body)
d$body_c <- unlist(d$body_c)
d$beak_c <- unlist(d$beak_c)
d$thorax_c <- unlist(d$thorax_c)
d$wing_c <- unlist(d$wing_c)
d$w_morph_c <- unlist(d$w_morph_c)
d$wing2body_c <- unlist(d$wing2body_c)
# don't use filename, channel_letter, set_number,
####### Effect of beak length
tidy_regression(glm(num_flew~beak_c, data=d), is_color=output_col)
####### Effect of thorax length
tidy_regression(glm(num_flew~thorax_c, data=d), is_color=output_col)
####### Effect of body length
tidy_regression(glm(num_flew~body_c, data=d), is_color=output_col)
####### No effect of wing length
tidy_regression(glm(flew_b~wing_c, data=d), is_color=output_col)
####### No effect of wing length
tidy_regression(glm(num_flew~wing_c, data=d), is_color=output_col)
####### No effect of wing morph (check how annotated the wing morph) - don't include it
tidy_regression_bw(glm(num_flew~w_morph_c, data=d))
####### No effect of wing morph (check how annotated the wing morph) - don't include it
tidy_regression(glm(num_flew~w_morph_c, data=d))
####### No effect of wing morph (check how annotated the wing morph) - don't include it
tidy_regression(glm(num_flew~w_morph_c, data=d),  is_color=output_col)
# columns of strings (e.g. "T1, T2")
# d2 <- data_tested %>%
#     group_by(ID) %>%
#     summarise_all(funs(toString(na.omit(.))))
# columns of tuples (e.g. list(T1, T2))
d <- data_tested %>%
group_by(ID) %>%
summarise_all(funs(list(na.omit(.))))
d$num_flew <- 0
d$num_notflew <- 0
d$average_mass <- 0
for(row in 1:length(d$flew_b)){
n_flew <- sum(d$flew_b[[row]] == 1) # total number of times did fly among trails
d$num_flew[[row]] <- n_flew
n_notflew <- sum(d$flew_b[[row]] == 0) # total number of times did not fly among trails
d$num_notflew[[row]] <- n_flew
avg_mass <- mean(d$mass[[row]])
d$average_mass[[row]] <- avg_mass
# keep columns that are the same value as only 1 value rather than a list:
d$sex[[row]] <- d$sex[[row]][1]
d$sex_c[[row]] <- d$sex_c[[row]][1]
d$population[[row]] <- d$population[[row]][1]
d$host_plant[[row]] <- d$host_plant[[row]][1]
d$host_c[[row]] <- d$host_c[[row]][1]
d$flight_type[[row]] <- d$flight_type[[row]][1]
d$sym_dist[[row]] <- d$sym_dist[[row]][1]
d$total_eggs[[row]] <- d$total_eggs[[row]][1]
d$body[[row]] <- d$body[[row]][1]
d$beak[[row]] <- d$beak[[row]][1]
d$thorax[[row]] <- d$thorax[[row]][1]
d$wing[[row]] <- d$wing[[row]][1]
d$w_morph[[row]] <- d$w_morph[[row]][1]
d$wing2body[[row]] <- d$wing2body[[row]][1]
d$body_c[[row]] <- d$body_c[[row]][1]
d$beak_c[[row]] <- d$beak_c[[row]][1]
d$thorax_c[[row]] <- d$thorax_c[[row]][1]
d$wing_c[[row]] <- d$wing_c[[row]][1]
d$w_morph_c[[row]] <- d$w_morph_c[[row]][1]
d$wing2body_c[[row]] <- d$wing2body_c[[row]][1]
}
d$sex <- unlist(d$sex)
d$sex_c <- unlist(d$sex_c)
d$population <- unlist(d$population)
d$host_plant <- unlist(d$host_plant)
d$host_c <- unlist(d$host_c)
d$sym_dist <- unlist(d$sym_dist)
d$total_eggs <- unlist(d$total_eggs)
d$body <- unlist(d$body)
d$beak <- unlist(d$beak)
d$thorax <- unlist(d$thorax)
d$wing <- unlist(d$wing)
d$w_morph <- unlist(d$w_morph)
d$wing2body <- unlist(d$wing2body)
d$body_c <- unlist(d$body_c)
d$beak_c <- unlist(d$beak_c)
d$thorax_c <- unlist(d$thorax_c)
d$wing_c <- unlist(d$wing_c)
d$w_morph_c <- unlist(d$w_morph_c)
d$wing2body_c <- unlist(d$wing2body_c)
# don't use filename, channel_letter, set_number,
R = d$flew_b
A = d$host_c
B = d$sex_c
C = d$sym_dist
D = d$average_mass
X = d$population
data<-data.frame(R, A, B, C, D, X, Y)
data<-data.frame(R, A, B, C, D, X)
R
R = d$num_flew
R = d$num_flew
A = d$host_c
B = d$sex_c
C = d$sym_dist
D = d$average_mass
X = d$population
data<-data.frame(R, A, B, C, D, X)
source("src/compare_models.R")
errors <- withWarnings(model_comparisonsAIC("src/generic models-gaussian glmer 1-RF + 3-FF.R"))
length(errors$warnings) # 10 models did not converge
# Remove any missing masses
d %>%
filter(is.na(mass))
# Remove any missing masses
d %>%
filter(is.na(average_mass))
# Remove any missing masses
filter(d, is.na(average_mass))
d$average_mass
source("src/compare_models.R")
errors <- withWarnings(model_comparisonsAIC("src/generic models-gaussian glmer 1-RF + 4-FF.R"))
length(errors$warnings) # 10 models did not converge
source("src/compare_models.R")
errors <- withWarnings(model_comparisonsAIC("src/generic models-gaussian glmer 1-RF + 4-FF.R"))
length(errors$warnings) # 10 models did not converge
R = d$num_flew
A = d$host_c
B = d$sex_c
C = d$sym_dist
D = d$average_mass
X = d$population
data<-data.frame(R, A, B, C, D, X)
source("src/compare_models.R")
errors <- withWarnings(model_comparisonsAIC("src/generic models-gaussian glmer 1-RF + 3-FF.R"))
length(errors$warnings) # 10 models did not converge
R = d$num_flew
A = d$host_c
B = d$sex_c
C = d$sym_dist
D = d$average_mass
X = d$population
data<-data.frame(R, A, B, C, D, X)
source("src/compare_models.R")
errors <- withWarnings(model_comparisonsAIC("src/generic models-gaussian glmer 1-RF + 3-FF.R"))
length(errors$warnings) # 10 models did not converge
anova(m2, m4, test="Chisq")
anova(m2, m6, test="Chisq")
anova(m4, m8, test="Chisq")
nomass_model <- lmer(num_flew ~ sex_c, data=d)
nomass_model <- lmer(num_flew ~ sex_c + (1|population), data=d)
tidy_regression(nomass_model, is_color=output_col)
nomass_model <- lmer(num_flew ~ sex_c*host_c + (1|population), data=d)
tidy_regression(nomass_model, is_color=output_col)
nomass_model <- lmer(num_flew ~ sex_c + (1|population), data=d)
tidy_regression(nomass_model, is_color=output_col)
source("src/compare_models.R")
errors <- withWarnings(model_comparisonsAIC("src/generic models-gaussian glmer 1-RF + 4-FF.R"))
length(errors$warnings)
anova(m50, m85, test="Chisq")
anova(m26, m50, test="Chisq") # Adding B
mass_model <- lmer(num_flew ~ host_c * average_mass + sex_c + (1|population), data=d)
tidy_regression(mass_model, is_color=output_col)
tidy_regression(mass_model, is_color=TRUE)
rm(list=ls())
setwd("~/Desktop/Rstats-winter2020/")
library(lme4)
library(dplyr)
library(ggplotify)
library(gridExtra)
library(ggformula)
library(tidyselect)
library(zoo)
knitr::opts_chunk$set(echo = TRUE)
data_tested %>%
group_by(ID, sex) %>%
summarise_all(funs(list(na.omit(.))))
rm(list=ls())
output_col = FALSE # Recommend changing this to TRUE if working in Base R or RStudio, and FALSE if generating an html
source("src/clean_flight_data.R") # Script that loads and cleans up the data
source("src/regression_output.R") # A script that cleans up regression outputs and prints in color or black and white
source("src/center_flight_data.R")
source("get_warnings.R")
data <- read_flight_data("data/all_flight_data-Winter2020.csv")
data_all <- data[[1]]
data_tested <- data[[2]]
data_tested %>%
group_by(ID, sex) %>%
summarise_all(funs(list(na.omit(.))))
data_tested %>%
group_by(ID, sex,population, site, host_plant, latitude, longitude, total_eggs, beak, thorax, wing, body, w_morph, morph_notes, tested, host_c, sex_c, w_morph_c, lat_c, sym_dist, sym_dist_s,mass_c, mass_s, total_eggs_c, beak_c, thorax_c, thorax_s, body_c, wing_c, wing2body, wing2body_c, wing2body_s) %>%
summarise_all(funs(list(na.omit(.))))
data_tested %>%
group_by(ID, sex,population, site, host_plant, latitude, longitude) %>%
summarise_all(funs(list(na.omit(.))))
data_tested %>%
group_by(ID, sex,population, site, host_plant, latitude, longitude, total_eggs) %>%
summarise_all(funs(list(na.omit(.))))
data_tested %>%
group_by(ID, sex,population, site, host_plant, latitude, longitude, total_eggs, beak, thorax, wing, body, w_morph, morph_notes) %>%
summarise_all(funs(list(na.omit(.))))
data_tested %>%
group_by(ID, sex,population, site, host_plant, latitude, longitude, total_eggs, beak, thorax, wing, body, w_morph, morph_notes, tested, host_c, sex_c, w_morph_c, lat_c) %>%
summarise_all(funs(list(na.omit(.))))
data_tested %>%
group_by(ID, sex,population, site, host_plant, latitude, longitude, total_eggs, beak, thorax, wing, body, w_morph, morph_notes, tested, host_c, sex_c, w_morph_c, lat_c, sym_dist, sym_dist_s) %>%
summarise_all(funs(list(na.omit(.))))
data_tested %>%
group_by(ID, sex,population, site, host_plant, latitude, longitude, total_eggs, beak, thorax, wing, body, w_morph, morph_notes, tested, host_c, sex_c, w_morph_c, lat_c, sym_dist, sym_dist_s, total_eggs_c, beak_c, thorax_c, thorax_s, body_c, wing_c, wing2body, wing2body_c, wing2body_s) %>%
summarise_all(funs(list(na.omit(.))))
d <- data_tested %>%
group_by(ID, sex,population, site, host_plant, latitude, longitude, total_eggs,
beak, thorax, wing, body, w_morph, morph_notes, tested,
host_c, sex_c, w_morph_c, lat_c, sym_dist, sym_dist_s, total_eggs_c,
beak_c, thorax_c, thorax_s, body_c, wing_c, wing2body, wing2body_c, wing2body_s) %>%
summarise_all(funs(list(na.omit(.))))
d
d$num_flew <- 0
d$num_notflew <- 0
d$average_mass <- 0
for(row in 1:length(d$flew_b)){
n_flew <- sum(d$flew_b[[row]] == 1) # total number of times did fly among trails
d$num_flew[[row]] <- n_flew
n_notflew <- sum(d$flew_b[[row]] == 0) # total number of times did not fly among trails
d$num_notflew[[row]] <- n_flew
avg_mass <- mean(d$mass[[row]])
d$average_mass[[row]] <- avg_mass
}
# don't use filename, channel_letter, set_number,
d
select(d, -filename)
select(d, -filename, -channel_letter, -set_number)
d <- select(d, -filename, -channel_letter, -set_number)
# test mixed effect model
model <- lmer(num_flew~sex_c*host_c + (1|population), data=d)
tidy_regression(model, is_color=output_col)
getME(model, "lower")
####### (Strong) Effect of average mass
tidy_regression(glm(num_flew~average_mass, data=d), is_color=output_col)
####### Effect of number of eggs laid
tidy_regression(glm(num_flew~total_eggs, data=d), is_color=output_col)
####### Effect of beak length
tidy_regression(glm(num_flew~beak_c, data=d), is_color=output_col)
####### Effect of thorax length
tidy_regression(glm(num_flew~thorax_c, data=d), is_color=output_col)
####### Effect of body length
tidy_regression(glm(num_flew~body_c, data=d), is_color=output_col)
####### No effect of wing length
tidy_regression(glm(num_flew~wing_c, data=d), is_color=output_col)
R = d$num_flew
A = d$host_c
B = d$sex_c
C = d$sym_dist
D = d$average_mass
X = d$population
data<-data.frame(R, A, B, C, D, X)
source("src/compare_models.R")
errors <- withWarnings(model_comparisonsAIC("src/generic models-gaussian glmer 1-RF + 3-FF.R"))
length(errors$warnings) # 10 models did not converge
source("src/compare_models.R")
errors <- withWarnings(model_comparisonsAIC("src/generic models-gaussian glmer 1-RF + 4-FF.R"))
length(errors$warnings)
d$body
d <- d %>%
filter(!is.na(body))
d <- d(data_T1)
d <- center_data(d)
d$thorax_c <- d$thorax - mean(d$thorax)
d$wing_c <- d$wing - mean(d$wing)
d$body_c <- d$body - mean(d$body)
R = d$num_flew
A = d$thorax_c
B = d$body_c
C = d$wing_c
X = population
data<-data.frame(R, A, B, C, X)
R = d$num_flew
A = d$thorax_c
B = d$body_c
C = d$wing_c
X = d$population
data<-data.frame(R, A, B, C, X)
source("src/compare_models.R")
errors <- withWarnings(model_comparisonsAIC("src/generic models-gaussian glmer 1-RF + 3-FF.R"))
length(errors$warnings)
anova(m5, m7, test="Chisq")
anova(m7, m12, test="Chisq")
anova(m7, m13, test="Chisq")
morph_model <- lmer(num_flew ~ body_c * wing_c + thorax_c + (1 | population), data=d)
tidy_regression(morph_model, is_color=output_col)
R = d$num_flew
A = d$thorax_c
B = d$wing2body_c
X = d$population
data<-data.frame(R, A, B, C, X)
source("src/compare_models.R")
errors <- withWarnings(model_comparisonsAIC("src/generic models-gaussian glmer 1-RF + 3-FF.R"))
length(errors$warnings)
R = d$num_flew
A = d$thorax_c
B = d$wing2body_c
X = d$population
data<-data.frame(R, A, B, X)
source("src/compare_models.R")
errors <- withWarnings(model_comparisonsAIC("src/generic models-gaussian glmer 1-RF + 2-FF.R"))
length(errors$warnings)
morph_model <- lmer(num_flew ~ wing2body_c * thorax_c + (1 | population), data=d)
tidy_regression(morph_model, is_color=output_col)
morph_model <- lmer(num_flew ~ wing2body_c + (1 | population), data=d)
tidy_regression(morph_model, is_color=output_col)
morph_model <- lmer(num_flew ~ wing2body_c * thorax_c + (1 | population), data=d)
tidy_regression(morph_model, is_color=output_col)
morph_model <- lmer(num_flew ~ wing2body_c + thorax_c + (1 | population), data=d)
tidy_regression(morph_model, is_color=output_col)
morph_model <- lmer(num_flew ~ wing2body_c * thorax_c + (1 | population), data=d)
tidy_regression(morph_model, is_color=output_col)
R = d$num_flew
A = d$thorax_c
B = d$wing2body_c
C = d$mass
D = d$sex
X = d$population
data<-data.frame(R, A, B, C, D, X)
R = d$num_flew
A = d$thorax_c
B = d$wing2body_c
C = d$average_mass
D = d$sex_c
X = d$population
data<-data.frame(R, A, B, C, D, X)
source("src/compare_models.R")
errors <- withWarnings(model_comparisonsAIC("src/generic models-gaussian glmer 1-RF + 4-FF.R"))
length(errors$warnings)
R = d$num_flew
A = d$thorax_c
B = d$wing2body_c
#C = d$average_mass
D = d$sex_c
X = d$population
data<-data.frame(R, A, B, C, D, X)
source("src/compare_models.R")
errors <- withWarnings(model_comparisonsAIC("src/generic models-gaussian glmer 1-RF + 4-FF.R"))
length(errors$warnings)
R = d$num_flew
A = d$thorax_c
B = d$wing2body_c
C = d$average_mass
#D = d$sex_c
X = d$population
data<-data.frame(R, A, B, C, X)
source("src/compare_models.R")
errors <- withWarnings(model_comparisonsAIC("src/generic models-gaussian glmer 1-RF + 3-FF.R"))
length(errors$warnings)
R = d$num_flew
A = d$thorax_c
B = d$wing2body_c
C = d$sex_c
#D = d$sex_c
X = d$population
data<-data.frame(R, A, B, C, X)
source("src/compare_models.R")
errors <- withWarnings(model_comparisonsAIC("src/generic models-gaussian glmer 1-RF + 3-FF.R"))
length(errors$warnings)
R = d$num_flew
A = d$thorax_c
B = d$wing2body_c
C = d$average_mass
#D = d$sex_c
X = d$population
data<-data.frame(R, A, B, C, X)
source("src/compare_models.R")
errors <- withWarnings(model_comparisonsAIC("src/generic models-gaussian glmer 1-RF + 3-FF.R"))
length(errors$warnings)
R = d$num_flew
A = d$thorax_c
B = d$wing2body_c
C = d$sex_c
X = d$population
data<-data.frame(R, A, B, C, X)
source("src/compare_models.R")
errors <- withWarnings(model_comparisonsAIC("src/generic models-gaussian glmer 1-RF + 3-FF.R"))
length(errors$warnings)
data_tested <- data_tested %>%
filter(!is.na(body))
data_tested <- data_tested(data_T1)
data_tested <- data_tested %>%
filter(!is.na(body))
data_tested <- center_data(data_tested)
R = data_tested$flew_b
A = data_tested$thorax_c
B = data_tested$body_c
C = data_tested$wing_c
data<-data.frame(R, A, B, C)
source("src/compare_models.R")
model_comparisonsAIC("src/generic models-binomial glm 3-FF.R")
data_tested <- data_tested %>%
filter(!is.na(body))
data_tested <- center_data(data_tested)
R = data_tested$flew_b
A = data_tested$thorax_c
B = data_tested$body_c
C = data_tested$wing_c
X = data_tested$ID
Y = data_tested$trial_type
data<-data.frame(R, A, B, C, D, X, Y)
data_tested <- data_tested %>%
filter(!is.na(body))
data_tested <- center_data(data_tested)
R = data_tested$flew_b
A = data_tested$thorax_c
B = data_tested$body_c
C = data_tested$wing_c
X = data_tested$ID
Y = data_tested$trial_type
data<-data.frame(R, A, B, C, X, Y)
source("src/compare_models.R")
errors <- withWarnings(model_comparisonsAIC("src/generic models-binomial glmer 2 RF + 3-FF.R"))
length(errors$warnings) # 10 models did not converge
anova(m53, m56, test="Chisq")
data_tested <- data_tested %>%
filter(!is.na(body))
data_tested <- center_data(data_tested)
R = data_tested$flew_b
A = data_tested$thorax_c
B = data_tested$body_c
C = data_tested$wing_c
X = data_tested$ID
Y = data_tested$trial_type
data<-data.frame(R, A, B, C, X, Y)
source("src/compare_models.R")
errors <- withWarnings(model_comparisonsAIC("src/generic models-binomial glmer 2 RF + 3-FF.R"))
cat("Number of models that failed to converge:", length(errors$warnings)) # 14 models did not converge
anova(m51, m53, test="Chisq") # Adding B*C
morph_model<-glmer(flew_b~ thorax_c * body_c + body_c * wing_c + (1|trial_type), family=binomial, data=data_tested)
tidy_regression(morph_model, is_color=output_col)
R = data_tested$flew_b
A = data_tested$thorax_c
B = data_tested$wing2body_c
X = data_tested$ID
Y = data_tested$trial_type
data<-data.frame(R, A, B, C, X, Y)
source("src/compare_models.R")
errors <- withWarnings(model_comparisonsAIC("src/generic models-binomial glmer 2-RF + 2-FF.R"))
cat("Number of models that failed to converge:", length(errors$warnings)) # 13 models did not converge
anova(m13, m14, test="Chisq")
morph_model<-glmer(flew_b~ thorax_c * body_c + body_c * wing_c + (1|trial_type) + (1|ID), family=binomial, data=data_tested)
morph_model<-glmer(flew_b~ thorax_c * body_c + body_c * wing_c + (1|ID), family=binomial, data=data_tested) # model failed to converge
tidy_regression(morph_model, is_color=output_col) # model converged
morph_model<-glmer(flew_b~ thorax_c * wing2body_c + (1|trial_type) + (1|ID), family=binomial, data=data_tested)
tidy_regression(morph_model, is_color=output_col) # model converged
morph_model<-glmer(flew_b~ thorax_c * wing2body_c + (1|ID), family=binomial, data=data_tested)
tidy_regression(morph_model, is_color=output_col) # coefficients are very huge
morph_model<-glmer(flew_b~ thorax_c * wing2body_c + (1|trial_type) , family=binomial, data=data_tested)
tidy_regression(morph_model, is_color=output_col) # coefficients are very huge
