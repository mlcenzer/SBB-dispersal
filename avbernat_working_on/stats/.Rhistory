s.test <- paste("pval: ", shapiro.test(residuals(continuous_model))$p.value)
qqnorm(resid(continuous_model))
qqline(resid(continuous_model))
text(-1, 0.1, s.test)
continuous_model <- lmer(average_speed ~ sex_c + (1|ID), data=dC, REML=FALSE)
tidy_regression(continuous_model, is_color=output_col)
continuous_model <- lmer(average_speed ~ sex_c + (1|chamber) + (1|ID), data=dC, REML=FALSE)
tidy_regression(continuous_model, is_color=output_col)
data<-data.frame(R=dC$average_speed,
A=dC$host_c,
B=dC$sex_c,
C=dC$sym_dist,
D=dC$mass_c,
X=dC$ID)
source("src/compare_models.R")
errors <- withWarnings(model_comparisonsAIC("src/generic models-gaussian glmer 1-RF + 4-FF REMLF.R"))
cat("Number of models that failed to converge: ", length(errors$warnings))
anova(m20, m30, test="Chisq") # Adding (1|X) marginally improves fit
anova(m20, m31, test="Chisq")
continuous_model <- lmer(average_speed ~ sex_c*mass_c + (1|chamber) + (1|ID), data=dC)
tidy_regression(continuous_model, is_color=output_col)
continuous_model <- lmer(average_speed ~ sex_c*mass_c  (1|ID), data=dC)
continuous_model <- lmer(average_speed ~ sex_c*mass_c + (1|ID), data=dC)
tidy_regression(continuous_model, is_color=output_col)
continuous_model <- lmer(average_speed ~ sex_c*mass_c + (1|chamber) + (1|ID), data=dC)
tidy_regression(continuous_model, is_color=output_col)
continuous_model <- lmer(average_speed ~ sex_c*mass_c + (1|ID), data=dC)
continuous_model <- lmer(average_speed ~ sex_c*mass_c + (1|ID), data=dC)
continuous_model <- lmer(average_speed ~ sex_c*mass_c + (1|ID), data=dC)
continuous_model <- lmer(average_speed ~ sex_c*mass_c + (1|ID), data=dC)
continuous_model <- lmer(average_speed ~ sex_c*mass_c + (1|ID), data=dC)
tidy_regression(continuous_model, is_color=output_col)
continuous_model <- lmer(average_speed ~ sex_c*mass_c + (1|ID), data=dC)
tidy_regression(continuous_model, is_color=output_col)
continuous_model <- lmer(average_speed ~ sex_c*mass_c + (1|chamber) + (1|ID), data=dC)
tidy_regression(continuous_model, is_color=output_col) # Adding chamber improves model
s.test <- paste("pval: ", shapiro.test(residuals(continuous_model))$p.value)
qqnorm(resid(continuous_model))
qqline(resid(continuous_model))
text(-1, 0.1, s.test)
dC<-data_flew[data_flew$flight_type=="C",]
dC <- dC %>%
filter(!is.na(body))
dC <- center_data(dC)
data<-data.frame(R=dC$average_speed,
A=dC$thorax_c,
B=dC$body_c,
C=dC$wing_c,
X=dC$ID)
source("src/compare_models.R")
errors <- withWarnings(model_comparisonsAIC("src/generic models-gaussian glmer 1-RF + 3-FF REMLF.R"))
cat("Number of models that failed to converge: ", length(errors$warnings))
anova(m18, m19, test="Chisq") # Adding A improves fit
anova(m10, m13, test="Chisq")
continuous_morph_model <- lmer(average_speed ~ body_c*wing_c + (1|ID), data=dC)
tidy_regression(continuous_morph_model, is_color=output_col)
continuous_morph_model <- lmer(average_speed ~ body_c*wing_c + (1|ID) + (1|chamber), data=dC)
tidy_regression(continuous_morph_model, is_color=output_col)
continuous_morph_model <- lmer(average_speed ~ body_c*wing_c + (1|ID), data=dC)
tidy_regression(continuous_morph_model, is_color=output_col)
continuous_morph_model <- lmer(average_speed ~ body_c*wing_c + (1|ID) + (1|chamber), data=dC)
tidy_regression(continuous_morph_model, is_color=output_col) # improves model
continuous_morph_model <- lmer(average_speed ~ body_c*wing_c + (1|ID), data=dC)
tidy_regression(continuous_morph_model, is_color=output_col)
continuous_morph_model <- lmer(average_speed ~ body_c*wing_c + (1|ID) + (1|chamber), data=dC)
tidy_regression(continuous_morph_model, is_color=output_col) # improves model
anova(m10, m9, test="Chisq")
continuous_morph_model <- lmer(average_speed ~ thorax*wing_c + (1|ID), data=dC)
tidy_regression(continuous_morph_model, is_color=output_col)
continuous_morph_model <- lmer(average_speed ~ body_c*wing_c + (1|ID), data=dC)
tidy_regression(continuous_morph_model, is_color=output_col)
continuous_morph_model <- lmer(average_speed ~ body_c*wing_c + (1|ID) + (1|chamber), data=dC)
tidy_regression(continuous_morph_model, is_color=output_col) # improves model
rm(list=ls())
setwd("~/Desktop/Rstats-winter2020/")
# For Modeling
library(lme4)
# For Data Summaries and Manipulation
library(dplyr)
library(mosaic)
# For Plotting
library(ggplotify)
library(gridExtra) # "grid" graphics
knitr::opts_chunk$set(echo = TRUE)
ggplot2::theme_set(ggplot2::theme_bw())
ggplot2::theme_update(panel.grid.major = ggplot2::element_line(colour = "grey75"))
rm(list=ls())
output_col = FALSE # Recommend changing this to TRUE if working in Base R or RStudio, and FALSE if generating an html
source("src/clean_flight_data.R") # Script that loads and cleans up the data
source("src/regression_output.R") # A script that cleans up regression outputs and prints in color or black and white
source("src/center_flight_data.R")
data <- read_flight_data("data/all_flight_data-Winter2020.csv")
data_all <- data[[1]]
data_tested <- data[[2]]
###### No effect of chamber
tidy_regression(lmer(mass_c~chamber + (1|ID) + (1|trial_type), data=data_tested), is_color=output_col) # shouldn't matter because this measurement was taken seperate from the chamber.
####### No effect of test date
tidy_regression(lmer(mass_c~days_from_start_c + (1|ID) + (1|trial_type), data=data_tested), is_color=output_col)
####### No effect of test time
tidy_regression(lmer(mass_c~min_from_IncStart_c + (1|ID) + (1|trial_type), data=data_tested), is_color=output_col)
###### No effect of chamber
tidy_regression(lmer(mass_c~chamber + (1|ID) + (1|trial_type), data=data_tested), is_color=output_col) # shouldn't matter because this measurement was taken seperate from the chamber.
###### No effect of chamber
tidy_regression(lmer(mass_c~chamber + (1|ID), data=data_tested), is_color=output_col)
####### No effect of test date
tidy_regression(lmer(mass_c~days_from_start_c + (1|ID) + (1|trial_type), data=data_tested), is_color=output_col)
####### No effect of test time
tidy_regression(lmer(mass_c~min_from_IncStart_c + (1|ID) + (1|trial_type), data=data_tested), is_color=output_col)
data<-data.frame(R=data_tested$mass_c,
A=data_tested$host_c,
B=data_tested$sex_c,
C=data_tested$sym_dist,
X=data_tested$ID, Y=data_tested$trial_type)
source("src/compare_models.R")
model_comparisonsAIC("src/generic models-gaussian glmer 2-RF + 3-FF.R")
rm(list=ls())
output_col = FALSE # Recommend changing this to TRUE if working in Base R or RStudio, and FALSE if generating an html
source("src/clean_flight_data.R") # Script that loads and cleans up the data
source("src/regression_output.R") # A script that cleans up regression outputs and prints in color or black and white
source("src/center_flight_data.R")
source("get_warnings.R")
data <- read_flight_data("data/all_flight_data-Winter2020.csv")
data_all <- data[[1]]
data_tested <- data[[2]]
data<-data.frame(R=data_tested$mass_c,
A=data_tested$host_c,
B=data_tested$sex_c,
C=data_tested$sym_dist,
X=data_tested$ID, Y=data_tested$trial_type)
source("src/compare_models.R")
model_comparisonsAIC("src/generic models-gaussian glmer 2-RF + 3-FF.R")
errors <- withWarnings(model_comparisonsAIC("src/generic models-gaussian glmer 1-RF + 4-FF REMLF.R"))
data<-data.frame(R=data_tested$mass_c,
A=data_tested$host_c,
B=data_tested$sex_c,
C=data_tested$sym_dist,
X=data_tested$ID)
source("src/compare_models.R")
errors <- withWarnings(model_comparisonsAIC("src/generic models-gaussian glmer 1-RF + 3-FF REMLF.R"))
cat("Number of models that failed to converge: ", length(errors$warnings))
anova(m13, m15, test="Chisq") # Adding A improves fit
model_alldata <- lmer(mass_c ~ sex_c + host_c + (1|ID) + (1|trial_type), data=data_tested)
tidy_regression(model_alldata, is_color=output_col)
data<-data.frame(R=data_tested$mass_c,
A=data_tested$host_c,
B=data_tested$sex_c,
C=data_tested$sym_dist,
X=data_tested$trial_type)
source("src/compare_models.R")
errors <- withWarnings(model_comparisonsAIC("src/generic models-gaussian glmer 1-RF + 3-FF REMLF.R"))
cat("Number of models that failed to converge: ", length(errors$warnings))
data<-data.frame(R=data_tested$mass_c,
A=data_tested$host_c,
B=data_tested$sex_c,
C=data_tested$sym_dist,
X=data_tested$ID)
source("src/compare_models.R")
errors <- withWarnings(model_comparisonsAIC("src/generic models-gaussian glmer 1-RF + 3-FF REMLF.R"))
cat("Number of models that failed to converge: ", length(errors$warnings))
model_alldata <- lmer(mass_c ~ sex_c * sym_dist + host_c + (1|ID) + (1|trial_type), data=data_tested)
tidy_regression(model_alldata, is_color=output_col)
model_alldata <- lmer(mass_c ~ sex_c * sym_dist + host_c + (1|ID), data=data_tested)
tidy_regression(model_alldata, is_color=output_col)
model_alldata <- lmer(mass_c ~ sex_c * sym_dist + host_c + (1|ID), data=data_tested)
tidy_regression(model_alldata, is_color=output_col)
model_alldata <- lmer(mass_c ~ sex_c * sym_dist + host_c + (1|ID) + (1|trial_type), data=data_tested)
tidy_regression(model_alldata, is_color=output_col)
model_alldata <- lmer(mass_c ~ sex_c + host_c + (1|ID) + (1|trial_type), data=data_tested)
tidy_regression(model_alldata, is_color=output_col)
model_alldata <- lmer(mass_c ~ sex_c * sym_dist + host_c + (1|ID) + (1|trial_type), data=data_tested)
tidy_regression(model_alldata, is_color=output_col) # adding trial type improves fit
model_alldata <- lmer(mass_c ~ sex_c + host_c + (1|ID) + (1|trial_type), data=data_tested)
tidy_regression(model_alldata, is_color=output_col)
model_alldata <- lmer(mass_c ~ sex_c * sym_dist + host_c + (1|ID), data=data_tested)
tidy_regression(model_alldata, is_color=output_col)
model_alldata <- lmer(mass_c ~ sex_c * sym_dist + host_c + (1|ID) + (1|trial_type), data=data_tested)
tidy_regression(model_alldata, is_color=output_col) # adding trial type improves fit
model_alldata <- lmer(mass_c ~ sex_c + host_c + (1|ID) + (1|trial_type), data=data_tested)
tidy_regression(model_alldata, is_color=output_col)
model_alldata <- lmer(mass_c ~ sex_c * sym_dist + host_c + (1|ID), data=data_tested, REML=FALSE)
tidy_regression(model_alldata, is_color=output_col)
model_alldata <- lmer(mass_c ~ sex_c * sym_dist + host_c + (1|ID) + (1|trial_type), data=data_tested, REML=FALSE)
tidy_regression(model_alldata, is_color=output_col) # adding trial type improves fit
model_alldata <- lmer(mass_c ~ sex_c + host_c + (1|ID) + (1|trial_type), data=data_tested)
tidy_regression(model_alldata, is_color=output_col) ## AB example where ID and trial type added as RFs really change the output and which top models are selected
data<-data.frame(R=data_tested$mass_c,
A=data_tested$beak_c,
B=data_tested$thorax_c,
C=data_tested$body_c,
D=data_tested$wing_c,
X=data_tested$ID)
data <- data %>%
filter(!is.na(C))
source("src/compare_models.R")
errors <- withWarnings(model_comparisonsAIC("src/generic models-gaussian glmer 1-RF + 4-FF REMLF.R"))
cat("Number of models that failed to converge: ", length(errors$warnings))
data<-data.frame(R=data_tested$mass_c,
A=data_tested$beak_c,
B=data_tested$thorax_c,
C=data_tested$body_c,
D=data_tested$wing_c,
X=data_tested$ID)
data <- data %>%
filter(!is.na(C))
source("src/compare_models.R")
errors <- withWarnings(model_comparisonsAIC("src/generic models-gaussian glmer 1-RF + 4-FF REMLF.R"))
cat("Number of models that failed to converge: ", length(errors$warnings))
anova(m91, m107, test="Chisq")
errors <- withWarnings(model_comparisonsAIC("src/generic models-gaussian glmer 1-RF + 4-FF"))
errors <- withWarnings(model_comparisonsAIC("src/generic models-gaussian glmer 1-RF + 4-FF.R"))
errors <- withWarnings(model_comparisonsAIC("src/generic models-gaussian glmer 1-RF + 4-FF.R"))
cat("Number of models that failed to converge: ", length(errors$warnings))
anova(m91, m107, test="Chisq") # Adding C*D does not improve fit
errors <- withWarnings(model_comparisonsAIC("src/generic models-gaussian glmer 1-RF + 4-FF REMLF.R"))
errors <- withWarnings(model_comparisonsAIC("src/generic models-gaussian glmer 1-RF + 4-FF REMLF.R"))
cat("Number of models that failed to converge: ", length(errors$warnings))
anova(m91, m107, test="Chisq") # Adding C*D does not improve fit
allmorph_model <- lmer(mass_c ~ beak_c * thorax_c + beak_c * body_c + beak_c * wing_c + thorax_c * body_c + (1|ID), data=data_tested)
tidy_regression(allmorph_model, is_color=output_col) # failed to converge
data<-data.frame(R=data_tested$mass_c,
A=data_tested$beak_c,
B=data_tested$thorax_c,
C=data_tested$wing2body_c,
X=data_tested$ID)
data <- data %>%
filter(!is.na(A))
source("src/compare_models.R")
errors <- withWarnings(model_comparisonsAIC("src/generic models-gaussian glmer 1-RF + 3-FF REMLF.R"))
cat("Number of models that failed to converge: ", length(errors$warnings))
anova(m12, m14, test="Chisq")
allmorph_model <- lmer(mass_c ~  beak_c * wing2body_c + thorax_c + (1 | ID), data=data_tested)
tidy_regression(allmorph_model, is_color=output_col) # model didn't converge
#pdf("massby-flightduration.pdf") # alternative way to save graph
flight_p1 <- as.grob(expression(
plot(data_tested$mass,data_tested$minute_duration,
main = "All Trials",
xlab = "Mass (g)",
ylab = "Flight duration (min)") %>%
# Seems like bugs with a mass between 0.025-0.075 g can hit longer flight durations
abline(v=0.025, col="red") %>%
abline(v=0.075, col="red")
#dev.off() # alt way to save graph
))
yes_fly <- filter(data_tested, flew_b == 1)
flight_p2 <- as.grob(expression(
plot(yes_fly$mass,yes_fly$minute_duration,
main = "All Trials, only bugs that flew (yes_flew)",
xlab="Mass (g)",
ylab = "Flight duration(min)") %>%
abline(v=0.025, col="red")%>%
abline(v=0.075, col="red")
))
C_fly <- filter(yes_fly, flight_type =="C")
flight_p3 <- as.grob(expression(
plot(C_fly$mass,C_fly$minute_duration,
main = "All Trials, only bugs that flew continuously",
xlab="Mass (g)",
ylab = "Flight duration(min)") %>%
abline(v=0.025, col="red") %>%
abline(v=0.075, col="red")
))
grob1 <- as.grob(expression(flight_p1))
grid.arrange(flight_p1, flight_p2, flight_p3, ncol=3)
# filter out missing masses
data_tested <- data_tested %>%
filter(!is.na(mass_c))
p <- gf_point(mass ~ sym_dist, data = data_tested,
color = ~host_plant,
alpha = ~sex,
ylab="Mass (g)",
xlab="Distance From Sympatric Zone")
p
p
#, fig.width=6, fig.height=2.5}
summary<-aggregate(mass~sex*host_plant*sym_dist, data=data_all, FUN=mean)
# Uncomment below to save graph
#pdf("lm-mass-model.pdf", width=9, height=6)
plot(summary$mass~summary$sym_dist,
col=c(1,2)[as.factor(summary$sex)], # Female = Black, Male = Red
pch=c(19,22)[as.factor(summary$host_plant)],
main="Observed Data",
xlab = "Distance from Sympatric Zone (°)",
ylab= "Mass (g)", # K. elegans = Squares C.corindum = circles
)
legend("topright",
legend = c("C.corindum and F","K.elegans and M"),
col=c(1,2),
pch = c(19,22))
#dev.off()
#, fig.width=2.8, fig.height=2.3}
# Uncomment below to save graphs
# For both graphs: need to add xaxt="n" inside plot function to make the customized x-axis
#pdf("lm-massbysex-model.pdf", width=6, height=6)
source("src/plotting-lm.R")
source("src/plotting-lm2.R")
lm_plot2(data_tested, "sex_c","mass_c", "Sex", "Mass (g)", "Mass by Sex")
axis(1, at = seq(-1,1,.5),labels=c("M", " ", " ", " ", "F"))
#dev.off()
#pdf("lm-massbyhost-model.pdf", width=6, height=6)
lm_plot2(data_tested, "host_c","mass_c", "Host Plant", "Mass (g)", "Mass by Host Plant")
axis(1, at = seq(-1,1,.5),labels=c("BV", " ", " ", " ", "GRT"))
#dev.off()
# Had twice as many males as females.
data_fem <- filter(data_tested, sex == "F") # 208 obs
data_male <- filter(data_tested, sex == "M") # 406 obs
data_fem1 <- filter(data_tested, sex == "F") # 115 obs
data_fem2 <- filter(data_tested, sex == "F") # 93 obs
data_male1 <- filter(data_tested, sex == "M") # 219 obs
data_male2 <- filter(data_tested, sex == "M") # 187 obs
h3 <- as.grob(expression(hist(data_fem1$mass, main="Females Trial 1", xlab= "Mass (g)")))
h4 <- as.grob(expression(hist(data_fem2$mass, main="Females Trial 2", xlab= "Mass (g)")))
h5 <- as.grob(expression(hist(data_male1$mass, main="Males Trial 1", xlab = "Mass (g)")))
h6 <- as.grob(expression(hist(data_male2$mass, main="Males Trial 2", xlab = "Mass (g)")))
h7 <- as.grob(expression(hist(data_fem$mass, main="Females", xlab= "Mass (g)")))
h8 <- as.grob(expression(hist(data_male$mass, main="Males", xlab= "Mass (g)")))
grid.arrange(h7,h8,ncol=2)
grid.arrange(h3,h4,h5,h6,ncol=4)
data_fem1 <- filter(data_tested, sex == "F", trial_type=="T1")
# Had twice as many males as females.
data_fem <- filter(data_tested, sex == "F")
data_male <- filter(data_tested, sex == "M")
data_fem1 <- filter(data_tested, sex == "F", trial_type=="T1")
data_fem2 <- filter(data_tested, sex == "F", trial_type=="T2")
data_male1 <- filter(data_tested, sex == "M", trial_type=="T1")
data_male2 <- filter(data_tested, sex == "M", trial_type=="T2")
h3 <- as.grob(expression(hist(data_fem1$mass, main="Females Trial 1", xlab= "Mass (g)")))
h4 <- as.grob(expression(hist(data_fem2$mass, main="Females Trial 2", xlab= "Mass (g)")))
h5 <- as.grob(expression(hist(data_male1$mass, main="Males Trial 1", xlab = "Mass (g)")))
h6 <- as.grob(expression(hist(data_male2$mass, main="Males Trial 2", xlab = "Mass (g)")))
h7 <- as.grob(expression(hist(data_fem$mass, main="Females", xlab= "Mass (g)")))
h8 <- as.grob(expression(hist(data_male$mass, main="Males", xlab= "Mass (g)")))
grid.arrange(h7,h8,ncol=2)
grid.arrange(h3,h4,h5,h6,ncol=4)
rm(list=ls())
output_col = FALSE
source("src/clean_flight_data.R")
source("src/regression_output.R")
source("src/center_flight_data.R")
data <- read_flight_data("data/all_flight_data-Winter2020.csv")
data_all <- data[[1]]
data_tested <- data[[2]]
# filter out missing masses
data_tested <- data_tested %>%
filter(!is.na(mass))
data_fem <- data_tested[data_tested$sex=="F",]
data_fem <- center_data(data_fem)
###### No effect of chamber
tidy_regression(lmer(mass_c~chamber + (1|ID) + (1|trial_type), data=data_fem), is_color=output_col) # shouldn't matter because this measurement was taken seperate from the chamber.
####### Effect of test date
tidy_regression(lmer(mass_c~days_from_start_c + (1|ID), data=data_fem), is_color=output_col) # t val = 2.29 - makes sense because female mass would fluctuate the most
####### No effect of test time
tidy_regression(lmer(mass_c~min_from_IncStart_c + (1|ID) + (1|trial_type), data=data_fem), is_color=output_col)
####### Effect of number of eggs laid
tidy_regression(lmer(mass_c~total_eggs + (1|ID) + (1|trial_type), data=data_fem), is_color=output_col)
####### Effect of whether eggs were laid or not
tidy_regression(lmer(mass_c~eggs_b + (1|ID), data=data_fem), is_color=output_col)
####### Effect of beak length
tidy_regression(lmer(mass_c~beak_c + (1|ID) + (1|trial_type), data=data_fem), is_color=output_col)
####### Effect of thorax length
tidy_regression(lmer(mass_c~thorax_c + (1|ID) + (1|trial_type), data=data_fem), is_color=output_col)
####### Effect of body length
tidy_regression(lmer(mass_c~body_c + (1|ID) + (1|trial_type), data=data_fem), is_color=output_col)
####### Effect of wing length
tidy_regression(lmer(mass_c~wing_c + (1|ID) + (1|trial_type), data=data_fem), is_color=output_col) # model didn't converge
####### Effect of wing length
tidy_regression(lmer(mass_c~wing_c + (1|ID) , data=data_fem), is_color=output_col) # model didn't converge
data<-data.frame(R=data_fem$mass_c,
A=data_fem$host_c,
B=data_fem$sym_dist,
X=data_fem$ID, Y=data_fem$population)
data<-data.frame(R=data_fem$mass_c,
A=data_fem$host_c,
B=data_fem$sym_dist,
X=data_fem$ID)
source("src/compare_models.R")
errors <- withWarnings(model_comparisonsAIC("src/generic models-gaussian glmer 1-RF + 4-FF REMLF.R"))
source("src/get_warnings.R")
rm(list=ls())
output_col = FALSE
source("src/clean_flight_data.R")
source("src/regression_output.R")
source("src/center_flight_data.R")
source("src/get_warnings.R")
data <- read_flight_data("data/all_flight_data-Winter2020.csv")
data_all <- data[[1]]
data_tested <- data[[2]]
# filter out missing masses
data_tested <- data_tested %>%
filter(!is.na(mass))
data_fem <- data_tested[data_tested$sex=="F",]
data_fem <- center_data(data_fem)
rm(list=ls())
output_col = FALSE
source("src/clean_flight_data.R")
source("src/regression_output.R")
source("src/center_flight_data.R")
source("src/get_warnings.R")
data <- read_flight_data("data/all_flight_data-Winter2020.csv")
data_all <- data[[1]]
data_tested <- data[[2]]
# filter out missing masses
data_tested <- data_tested %>%
filter(!is.na(mass))
data_fem <- data_tested[data_tested$sex=="F",]
data_fem <- center_data(data_fem)
data<-data.frame(R=data_fem$mass_c,
A=data_fem$host_c,
B=data_fem$sym_dist,
X=data_fem$ID)
source("src/compare_models.R")
errors <- withWarnings(model_comparisonsAIC("src/generic models-gaussian glmer 1-RF + 2-FF REMLF.R"))
cat("Number of models that failed to converge: ", length(errors$warnings))
anova(m0, m2, test="Chisq") # Adding (1|Y) does not improve fit
anova(m2, m3, test="Chisq")
femm_model <- lmer(mass_c ~ sym_dist + (1|ID), data=data_fem)
tidy_regression(femm_model, is_color=output_col)
data<-data.frame(R=data_fem$mass_c,
A=data_fem$host_c,
B=data_fem$sym_dist,
C=data_fem$eggs_b,
X=data_fem$ID)
source("src/compare_models.R")
errors <- withWarnings(model_comparisonsAIC("src/generic models-gaussian glmer 1-RF + 3-FF REMLF.R"))
cat("Number of models that failed to converge: ", length(errors$warnings))
anova(m6, m10, test="Chisq")
femm_model <- lmer(mass_c ~ sym_dist + eggs_b + (1|ID), data=data_fem)
tidy_regression(femm_model, is_color=output_col)
data<-data.frame(R=data_fem$mass_c,
A=data_fem$host_c,
B=data_fem$sym_dist,
C=data_fem$eggs_b,
D=data_fem$total_eggs_c,
X=data_fem$ID)
data <- data %>%
filter(!is.na(D))
source("src/compare_models.R")
errors <- withWarnings(model_comparisonsAIC("src/generic models-gaussian glmer 1-RF + 4-FF REMLF.R"))
cat("Number of models that failed to converge: ", length(errors$warnings))
anova(m21, m33, test="Chisq") # Adding D improves the fit
anova(m10, m21, test="Chisq") # Adding C improves fit
data<-data.frame(R=data_fem$mass_c,
A=data_fem$host_c,
B=data_fem$sym_dist,
C=data_fem$total_eggs_c,
X=data_fem$ID)
data <- data %>%
filter(!is.na(D))
source("src/compare_models.R")
errors <- withWarnings(model_comparisonsAIC("src/generic models-gaussian glmer 1-RF + 3-FF REMLF.R"))
cat("Number of models that failed to converge: ", length(errors$warnings))
anova(m2, m4, test="Chisq")
femm_model <- lmer(mass_c ~ sym_dist + (1|ID), data=data_fem)
tidy_regression(femm_model, is_color=output_col)
data<-data.frame(R=data_fem$mass_c,
A=data_fem$beak_c,
B=data_fem$thorax_c,
C=data_fem$wing_c,
D=data_fem$body_c,
X=data_fem$ID)
data <- data %>%
filter(!is.na(A))
source("src/compare_models.R")
errors <- withWarnings(model_comparisonsAIC("src/generic models-gaussian glmer 1-RF + 4-FF REMLF.R"))
cat("Number of models that failed to converge: ", length(errors$warnings))
femm_morph_model <- lmer(mass_c ~ beak_c * thorax_c + thorax_c * body_c + wing_c  + (1|ID), data=data_fem)
tidy_regression(femm_morph_model, is_color=output_col)
femm_morph_model <- lmer(mass_c ~ beak_c * thorax_c + thorax_c * body_c + wing_c  + (1|trial_type), data=data_fem)
tidy_regression(femm_morph_model, is_color=output_col)
femm_morph_model <- lmer(mass_c ~ beak_c * thorax_c + thorax_c * body_c + wing_c  + (1|ID), data=data_fem)
tidy_regression(femm_morph_model, is_color=output_col)
femm_morph_model <- lmer(mass_c ~ beak_c * thorax_c + thorax_c * body_c + wing_c  + (1|trial_type), data=data_fem)
tidy_regression(femm_morph_model, is_color=output_col)
femm_morph_model <- lmer(mass_c ~ beak_c * thorax_c + thorax_c * body_c + wing_c  + (1|ID), data=data_fem)
tidy_regression(femm_morph_model, is_color=output_col)
data<-data.frame(R=data_fem$mass_c,
A=data_fem$eggs_b,
B=data_fem$thorax_c,
C=data_fem$wing_c,
D=data_fem$body_c,
X=data_fem$ID)
data <- data %>%
filter(!is.na(A)) %>%
filter(!is.na(B))
source("src/compare_models.R")
errors <- withWarnings(model_comparisonsAIC("src/generic models-gaussian glmer 1-RF + 4-FF REMLF.R"))
cat("Number of models that failed to converge: ", length(errors$warnings))
data <- data %>%
filter(!is.na(A), !is.na(B))
data<-data.frame(R=data_fem$mass_c,
A=data_fem$eggs_b,
B=data_fem$thorax_c,
C=data_fem$wing_c,
D=data_fem$body_c,
X=data_fem$ID)
data <- data %>%
filter(!is.na(A), !is.na(B))
source("src/compare_models.R")
errors <- withWarnings(model_comparisonsAIC("src/generic models-gaussian glmer 1-RF + 4-FF REMLF.R"))
cat("Number of models that failed to converge: ", length(errors$warnings))
model_comparisonsAIC("src/generic models-gaussian glmer 1-RF + 4-FF.R")
data<-data.frame(R=data_fem$mass_c,
A=data_fem$eggs_b,
B=data_fem$thorax_c,
C=data_fem$wing_c,
D=data_fem$body_c,
X=data_fem$ID)
data <- data %>%
filter(!is.na(A), !is.na(B))
model_comparisonsAIC("src/generic models-gaussian glmer 1-RF + 4-FF.R")
source("src/compare_models.R")
errors <- withWarnings(model_comparisonsAIC("src/generic models-gaussian glmer 1-RF + 4-FF REMLF.R"))
cat("Number of models that failed to converge: ", length(errors$warnings)) # wide difference between model selection
