####### Effect of body length
summary(glm(flew_b~body, data=data_all, family=binomial))
####### No effect of wing length
summary(glm(flew_b~wing, data=data_all, family=binomial))
####### No effect of wing morph (check how annotated the wing morph)
summary(glm(flew_b~wing_morph, data=data_all, family=binomial))
install.packages(c("broom", "dplyr", "lubridate"))
install.packages(c("broom", "dplyr", "lubridate"))
---
title: "Binomial Modeling: flight_yes_no"
author: "Anastasia Bernat"
date: "3/30/2020"
output: html_document
---
# Winter 2020 Flight Trials
```{r setup, include=FALSE}
rm(list=ls())
setwd("~/Desktop/Rstats-winter2020/")
library(lme4)
library(lubridate)
library(broom)
library(dplyr)
library(glmnet)
knitr::opts_chunk$set(echo = TRUE)
```
# Reading the data
Flight Trials Winter 2020 Dataset was conducted from 2/17/2020 - 3/10/2020. Soapberry bugs were flight tested twice in the flight mill and observed from 8 AM to (5-8 PM) each day.
```{r}
#data_all<-read.csv("complete_flight_data-Winter2020.csv", header=TRUE, sep=",", quote="", stringsAsFactors=FALSE)
#data_all<-data_all[data_all$flew!="",]
data_all<-read.csv("complete_flight_data-Winter2020.csv", header=TRUE, sep=",", stringsAsFactors=FALSE)
#data_all<-read.csv("main_data.csv", header=TRUE)
```
# Recoding column values
```{r}
data_all$flew_b<-0
data_all$flew_b[data_all$flew=="Y"]<-1
data_all$host_c[data_all$host_plant=="K.elegans"]<-1
data_all$host_c[data_all$host_plant=="C. corindum"]<- -1
data_all$sex_c<--1
data_all$sex_c[data_all$sex=="F"]<-1
data_all$lat_c<-data_all$latitude-mean(data_all$latitude)
data_all$sym_dist<-abs(data_all$latitude-25.49197)
data_all$eggs_b<-0
data_all$eggs_b[data_all$EWM=="Y"]<-1
data_all$ID<-as.factor(data_all$ID)
data_all$min_from_start<-0
data_all$min_from_start <- as.integer(data_all$total_duration / 60)
data_all$days_from_start <- 0
data_all$test_date <- as_date(data_all$test_date)
dates <- sort(unique(data_all$test_date))
data_all$wing_morph <- 0
data_all$wing_morph[data_all$w_morph=="L"]<-1
data_all$wing_morph[data_all$w_morph=="LS"]<- 2
install.packages(c("broom", "dplyr", "lubridate"))
setwd("~/Documents/Florida soapberry project/2019 Dispersal/SBB-dispersal git/Meredith is working on/")
library(lme4)
library(lubridate)
setwd("~/Documents/Florida soapberry project/2019 Dispersal/SBB-dispersal git/Meredith is working on/")
library(lme4)
library(lubridate)
install.packages(c("broom", "dplyr", "lubridate"))
install.packages(c("broom", "dplyr", "lubridate"))
rm(list=ls())
setwd("~/Documents/Florida soapberry project/2019 Dispersal/SBB-dispersal git/Meredith is working on/")
library(lme4)
library(lubridate)
data_all<-read.csv("complete_flight_data-Winter2020.csv", header=TRUE, sep=",", stringsAsFactors=FALSE)
data_all<-read.csv("data/complete_flight_data-Winter2020.csv", header=TRUE, sep=",", stringsAsFactors=FALSE)
rm(list=ls())
setwd("~/Documents/Florida soapberry project/2019 Dispersal/SBB-dispersal git/Meredith is working on/stats/AB scripts/winter2020/")
library(lme4)
library(lubridate)
install.packages("lubridate")
library(lubridate)
install.packages(lubridate)
install.package(lubridate)
install.packages("lubridate")
library(lubridate)
rm(list=ls())
setwd("~/Documents/Florida soapberry project/2019 Dispersal/SBB-dispersal git/Meredith is working on/stats/AB scripts/winter2020/")
library(lme4)
library(lubridate)
library(broom)
install.packages("broom")
install.packages(c("broom", "dplyr", "lubridate"))
library(lme4)
library(lubridate)
library(broom)
install.packages("broom")
rm(list=ls())
setwd("~/Documents/Florida soapberry project/2019 Dispersal/SBB-dispersal git/Meredith is working on/stats/AB scripts/winter2020/")
library(lme4)
library(lubridate)
library(broom)
install.packages("broom")
library(broom)
library(dplyr)
rm(list=ls())
setwd("~/Documents/Florida soapberry project/2019 Dispersal/SBB-dispersal git/Meredith is working on/stats/AB scripts/winter2020/")
library(lme4)
library(lubridate)
library(broom)
install.packages("broom")
---
title: "Modeling Mass"
author: "Anastasia Bernat"
date: "4/17/2020"
output: html_document
---
# Winter 2020 Flight Trials
```{r setup, include=FALSE}
rm(list=ls())
setwd("~/Desktop/Rstats-winter2020/")
# For Modeling
library(lme4)
# For Data Summaries and Manipulation
library(jtools)
library(dplyr)
library(glmnet)
library(mosaic)
# For Date and Time Objects
library(lubridate)
library(chron) # convert char to times object
# For Plotting
library(ggplotify)
library(gridExtra) # "grid" graphics
knitr::opts_chunk$set(echo = TRUE)
ggplot2::theme_set(ggplot2::theme_bw())
ggplot2::theme_update(panel.grid.major = ggplot2::element_line(colour = "grey75"))
```
# Reading the data
Flight Trials Winter 2020 Dataset was conducted from 2/17/2020 - 3/10/2020. Soapberry bugs were flight tested twice in the flight mill and observed from 8 AM to (5-8 PM) each day.
```{r}
#data_all<-read.csv("complete_flight_data-Winter2020.csv", header=TRUE, sep=",", quote="", stringsAsFactors=FALSE)
#data_all<-data_all[data_all$flew!="",]
data_all<-read.csv("complete_flight_data-Winter2020.csv", header=TRUE, sep=",", stringsAsFactors=FALSE)
```
# Recoding column values
```{r}
data_all <- subset(data_all, select = -c(channel_num, channel_letter, NOTES,duration_check))
# Mass
data_all$mass_c <- data_all$mass-mean(data_all$mass, na.rm=TRUE)
# Host
data_all$host_c[data_all$host_plant=="K.elegans"]<-1
data_all$host_c[data_all$host_plant=="C. corindum"]<- -1
# Sex
data_all$sex_c<--1
data_all$sex_c[data_all$sex=="F"]<-1
# Distance From Sympatric Zone
data_all$lat_c<-data_all$latitude-mean(data_all$latitude)
data_all$sym_dist<-abs(data_all$latitude-25.49197)
# Morphology
# Wing Morph
data_all$w_morph_c <- 0
data_all$w_morph_c[data_all$w_morph=="L"] <- 1
data_all$w_morph_c[data_all$w_morph=="LS"]<- -1
# Beak Length
data_all$beak_c <- data_all$beak-mean(data_all$beak, na.rm=TRUE)
# Thorax Length
data_all$thorax_c <- data_all$thorax-mean(data_all$thorax, na.rm=TRUE)
# Body Length
data_all$body_c <- data_all$body-mean(data_all$body, na.rm=TRUE)
# Wing Length
data_all$wing_c <- data_all$wing-mean(data_all$wing, na.rm=TRUE)
####################################################################################
# Yes-No Flew
data_all$flew_b<-0
data_all$flew_b[data_all$flew=="Y"]<-1
# Yes-No Eggs on Flight Trial Day
data_all$eggs_b<-0
data_all$eggs_b[data_all$EWM=="Y"]<-1
# ID
data_all$ID<-as.factor(data_all$ID)
# Flight Duration (minutes)
data_all$minute_duration <- 0
data_all$minute_duration <- as.integer(data_all$total_duration / 60)
data_all$minute_duration_c <- data_all$minute_duration-mean(data_all$minute_duration)
# Minutes From When Incubator Lights Turned On
t_IncLights_turn_on <- 8 # AM
data_all$min_from_IncStart <- 0
for(row in 1:length(data_all$ID)){
time <- chron(times=data_all$time_start[row])
minute<- minutes(time)
hour <- hours(time)
data_all$min_from_IncStart[row] <- 60*(hour - t_IncLights_turn_on) + minute
}
data_all$min_from_IncStart_c <- data_all$min_from_IncStart-mean(data_all$min_from_IncStart)
# Days From Starting Time
data_all$days_from_start <- 0
data_all$test_date <- as_date(data_all$test_date)
dates <- sort(unique(data_all$test_date))
for (i in 1:length(dates)){
day_diff <- dates[i] - dates[1]
for (r in 1:length(data_all$test_date)){
if (data_all$test_date[r] == dates[i]) {
data_all$days_from_start[r] = day_diff }
}
}
data_all$days_from_start_c <- data_all$days_from_start-mean(data_all$days_from_start)
# Chamber
chambers <- sort(unique(data_all$chamber))
recode <- c(1,2,3,4,-1,-2,-3,-4)
data_all$chamber_c <- 0
for (i in seq(1:length(chambers))) {
data_all$chamber_c[data_all$chamber==chambers[i]] <- recode[i]
}
#Trial Type
data_all$trial_type_b <- 0
data_all$trial_type_b[data_all$trial_type=="T1"] <- 1
data_all$trial_type_b[data_all$trial_type=="T2"] <- 2
```
# T1 vs. T2 Mass Histograms
```{r, fig.width=6, fig.height=2.5}
data_T1 <- filter(data_all, trial_type == "T1")
data_T2 <- filter(data_all, trial_type == "T2")
h1 <- as.grob(expression(hist(data_T1$mass, main="Trial 1", xlab= "Mass (g)")))
h2 <- as.grob(expression(hist(data_T2$mass, main="Trial 2", xlab = "Mass (g)")))
hist(data_all$mass, xlab="Mass (g)", main="Soapberry Bug Mass Histogram")
grid.arrange(h1, h2, ncol=2)
```
install.packages(c("broom.mixed", "jtools", "mosaic"))
install.packages(c("broom.mixed", "jtools", "mosaic"))
---
title: "Modeling Mass"
author: "Anastasia Bernat"
date: "4/17/2020"
output: html_document
---
# Winter 2020 Flight Trials
```{r setup, include=FALSE}
rm(list=ls())
setwd("~/Desktop/Rstats-winter2020/")
# For Modeling
library(lme4)
# For Data Summaries and Manipulation
library(jtools)
library(dplyr)
library(glmnet)
library(mosaic)
# For Date and Time Objects
library(lubridate)
library(chron) # convert char to times object
# For Plotting
library(ggplotify)
library(gridExtra) # "grid" graphics
knitr::opts_chunk$set(echo = TRUE)
ggplot2::theme_set(ggplot2::theme_bw())
ggplot2::theme_update(panel.grid.major = ggplot2::element_line(colour = "grey75"))
```
# Reading the data
Flight Trials Winter 2020 Dataset was conducted from 2/17/2020 - 3/10/2020. Soapberry bugs were flight tested twice in the flight mill and observed from 8 AM to (5-8 PM) each day.
```{r}
#data_all<-read.csv("complete_flight_data-Winter2020.csv", header=TRUE, sep=",", quote="", stringsAsFactors=FALSE)
#data_all<-data_all[data_all$flew!="",]
data_all<-read.csv("complete_flight_data-Winter2020.csv", header=TRUE, sep=",", stringsAsFactors=FALSE)
```
# Recoding column values
```{r}
data_all <- subset(data_all, select = -c(channel_num, channel_letter, NOTES,duration_check))
# Mass
data_all$mass_c <- data_all$mass-mean(data_all$mass, na.rm=TRUE)
# Host
data_all$host_c[data_all$host_plant=="K.elegans"]<-1
data_all$host_c[data_all$host_plant=="C. corindum"]<- -1
# Sex
data_all$sex_c<--1
data_all$sex_c[data_all$sex=="F"]<-1
# Distance From Sympatric Zone
data_all$lat_c<-data_all$latitude-mean(data_all$latitude)
data_all$sym_dist<-abs(data_all$latitude-25.49197)
# Morphology
# Wing Morph
data_all$w_morph_c <- 0
data_all$w_morph_c[data_all$w_morph=="L"] <- 1
data_all$w_morph_c[data_all$w_morph=="LS"]<- -1
# Beak Length
data_all$beak_c <- data_all$beak-mean(data_all$beak, na.rm=TRUE)
# Thorax Length
data_all$thorax_c <- data_all$thorax-mean(data_all$thorax, na.rm=TRUE)
# Body Length
data_all$body_c <- data_all$body-mean(data_all$body, na.rm=TRUE)
# Wing Length
data_all$wing_c <- data_all$wing-mean(data_all$wing, na.rm=TRUE)
####################################################################################
# Yes-No Flew
data_all$flew_b<-0
data_all$flew_b[data_all$flew=="Y"]<-1
# Yes-No Eggs on Flight Trial Day
data_all$eggs_b<-0
data_all$eggs_b[data_all$EWM=="Y"]<-1
# ID
data_all$ID<-as.factor(data_all$ID)
# Flight Duration (minutes)
data_all$minute_duration <- 0
data_all$minute_duration <- as.integer(data_all$total_duration / 60)
data_all$minute_duration_c <- data_all$minute_duration-mean(data_all$minute_duration)
# Minutes From When Incubator Lights Turned On
t_IncLights_turn_on <- 8 # AM
data_all$min_from_IncStart <- 0
for(row in 1:length(data_all$ID)){
time <- chron(times=data_all$time_start[row])
minute<- minutes(time)
hour <- hours(time)
data_all$min_from_IncStart[row] <- 60*(hour - t_IncLights_turn_on) + minute
}
data_all$min_from_IncStart_c <- data_all$min_from_IncStart-mean(data_all$min_from_IncStart)
# Days From Starting Time
data_all$days_from_start <- 0
data_all$test_date <- as_date(data_all$test_date)
dates <- sort(unique(data_all$test_date))
for (i in 1:length(dates)){
day_diff <- dates[i] - dates[1]
for (r in 1:length(data_all$test_date)){
if (data_all$test_date[r] == dates[i]) {
data_all$days_from_start[r] = day_diff }
}
}
data_all$days_from_start_c <- data_all$days_from_start-mean(data_all$days_from_start)
# Chamber
chambers <- sort(unique(data_all$chamber))
recode <- c(1,2,3,4,-1,-2,-3,-4)
data_all$chamber_c <- 0
for (i in seq(1:length(chambers))) {
data_all$chamber_c[data_all$chamber==chambers[i]] <- recode[i]
}
#Trial Type
data_all$trial_type_b <- 0
data_all$trial_type_b[data_all$trial_type=="T1"] <- 1
data_all$trial_type_b[data_all$trial_type=="T2"] <- 2
```
# T1 vs. T2 Mass Histograms
```{r, fig.width=6, fig.height=2.5}
data_T1 <- filter(data_all, trial_type == "T1")
data_T2 <- filter(data_all, trial_type == "T2")
h1 <- as.grob(expression(hist(data_T1$mass, main="Trial 1", xlab= "Mass (g)")))
h2 <- as.grob(expression(hist(data_T2$mass, main="Trial 2", xlab = "Mass (g)")))
hist(data_all$mass, xlab="Mass (g)", main="Soapberry Bug Mass Histogram")
grid.arrange(h1, h2, ncol=2)
```
install.packages(c("dplyr", "ggformula", "ggplotify", "gridExtra", "knitr", "lme4", "tidyselect", "zoo"))
rm(list=ls())
setwd("~/Documents/Florida soapberry project/2019 Dispersal/SBB-dispersal git/avbernat_working_on/stats")
library(lme4)
library(dplyr)
library(ggplotify)
library(gridExtra)
library(ggformula)
library(tidyselect)
library(zoo)
rm(list=ls())
output_col = FALSE # Recommend changing this to TRUE if working in Base R or RStudio, and FALSE if generating an html
source("src/clean_flight_data.R") # Script that loads and cleans up the data
library(lubridate)
install.packages("lubridate")
library(lubridate)
rm(list=ls())
output_col = FALSE # Recommend changing this to TRUE if working in Base R or RStudio, and FALSE if generating an html
source("src/clean_flight_data.R") # Script that loads and cleans up the data
source("src/regression_output.R") # A script that cleans up regression outputs and prints in color or black and white
source("src/center_flight_data.R")
source("get_warnings.R")
source("src/get_warnings.R")
data <- read_flight_data("data/all_flight_data-Winter2020.csv")
data_all <- data[[1]]
data_tested <- data[[2]]
head(data_tested)
d <- data_tested %>%
group_by(ID, sex,population, site, host_plant, latitude, longitude, total_eggs,
beak, thorax, wing, body, w_morph, morph_notes, tested,
host_c, sex_c, w_morph_c, lat_c, sym_dist, sym_dist_s, total_eggs_c,
beak_c, thorax_c, thorax_s, body_c, wing_c, wing2body, wing2body_c, wing2body_s) %>%
summarise_all(funs(list(na.omit(.))))
d$num_flew <- 0
d$num_notflew <- 0
d$average_mass <- 0
for(row in 1:length(d$flew_b)){
n_flew <- sum(d$flew_b[[row]] == 1) # total number of times did fly among trails
d$num_flew[[row]] <- n_flew
n_notflew <- sum(d$flew_b[[row]] == 0) # total number of times did not fly among trails
d$num_notflew[[row]] <- n_flew
avg_mass <- mean(d$mass[[row]])
d$average_mass[[row]] <- avg_mass
}
d <- select(d, -filename, -channel_letter, -set_number)
d
head(d)
d$num_flew
d$num_notflew
cbind(d$num_flew, d$num_notflew)
for(row in 1:length(d$flew_b)){
n_flew <- sum(d$flew_b[[row]] == 1) # total number of times did fly among trails
d$num_flew[[row]] <- n_flew
n_notflew <- sum(d$flew_b[[row]] == 0) # total number of times did not fly among trails
d$num_notflew[[row]] <- n_notflew
avg_mass <- mean(d$mass[[row]])
d$average_mass[[row]] <- avg_mass
}
d <- select(d, -filename, -channel_letter, -set_number)
d <- data_tested %>%
group_by(ID, sex,population, site, host_plant, latitude, longitude, total_eggs,
beak, thorax, wing, body, w_morph, morph_notes, tested,
host_c, sex_c, w_morph_c, lat_c, sym_dist, sym_dist_s, total_eggs_c,
beak_c, thorax_c, thorax_s, body_c, wing_c, wing2body, wing2body_c, wing2body_s) %>%
summarise_all(funs(list(na.omit(.))))
d$num_flew <- 0
d$num_notflew <- 0
d$average_mass <- 0
for(row in 1:length(d$flew_b)){
n_flew <- sum(d$flew_b[[row]] == 1) # total number of times did fly among trails
d$num_flew[[row]] <- n_flew
n_notflew <- sum(d$flew_b[[row]] == 0) # total number of times did not fly among trails
d$num_notflew[[row]] <- n_notflew
avg_mass <- mean(d$mass[[row]])
d$average_mass[[row]] <- avg_mass
}
d <- select(d, -filename, -channel_letter, -set_number)
d
cbind(d$num_flew, d$num_notflew)
model <- lmer(c(num_flew, num_notflew)~sex_c*host_c + (1|population), data=d)
head(d)
d$sex_c
model <- lmer(cbind(num_flew, num_notflew)~sex_c*host_c + (1|population), data=d)
model <- glmer(cbind(num_flew, num_notflew)~sex_c*host_c + (1|population), data=d, family='binom')
model <- glmer(cbind(num_flew, num_notflew)~sex_c*host_c + (1|population), data=d, family=binomial)
cbind(d$num_flew, d$num_notflew)
d$num_flew + d$num_notflew
model <- glmer(cbind(num_flew, (num_flew+num_notflew))~sex_c*host_c + (1|population), data=d, family=binomial)
?isSingular
model <- glm(cbind(num_flew, num_notflew)~sex_c, data=d, family=binomial)
summary(model)
model <- glm(cbind(num_flew, num_notflew)~sex_c*host_c, data=d, family=binomial)
summary(model)
tidy_regression(glm(cbind(num_flew, num_notflew)~average_mass, data=d, family=binomial), is_color=output_col)
tidy_regression(glm(cbind(num_flew, num_notflew)~total_eggs, data=d, family=binomial), is_color=output_col)
tidy_regression(glm(cbind(num_flew, num_notflew)~beak_c, data=d, family=binomial), is_color=output_col)
tidy_regression(glm(cbind(num_flew, num_notflew)~thorax_c, data=d, family=binomial), is_color=output_col)
tidy_regression(glm(cbind(num_flew, num_notflew)~body_c, data=d, family=binomial), is_color=output_col)
tidy_regression(glm(cbind(num_flew, num_notflew)~wing_c, data=d, family=binomial), is_color=output_col)
rm(list=ls())
setwd("~/Documents/Florida soapberry project/2019 Dispersal/SBB-dispersal git/avbernat_working_on/stats") ####MLC: changed to my working directory
library(lme4)
library(dplyr)
library(ggplotify)
library(gridExtra)
library(ggformula)
library(tidyselect)
library(zoo)
knitr::opts_chunk$set(echo = TRUE)
model <- glmer(cbind(num_flew, num_notflew)~sex_c*host_c + (1|population), data=d, family=binomial)
rm(list=ls())
output_col = FALSE # Recommend changing this to TRUE if working in Base R or RStudio, and FALSE if generating an html
source("src/clean_flight_data.R") # Script that loads and cleans up the data
source("src/regression_output.R") # A script that cleans up regression outputs and prints in color or black and white
source("src/center_flight_data.R")
source("src/get_warnings.R") ####MLC: this was not calling from the src/ subfolder
data <- read_flight_data("data/all_flight_data-Winter2020.csv")
data_all <- data[[1]]
data_tested <- data[[2]]
d <- data_tested %>%
group_by(ID, sex,population, site, host_plant, latitude, longitude, total_eggs,
beak, thorax, wing, body, w_morph, morph_notes, tested,
host_c, sex_c, w_morph_c, lat_c, sym_dist, sym_dist_s, total_eggs_c,
beak_c, thorax_c, thorax_s, body_c, wing_c, wing2body, wing2body_c, wing2body_s) %>%
summarise_all(funs(list(na.omit(.))))
d$num_flew <- 0
d$num_notflew <- 0
d$average_mass <- 0
for(row in 1:length(d$flew_b)){
n_flew <- sum(d$flew_b[[row]] == 1) # total number of times did fly among trails
d$num_flew[[row]] <- n_flew
n_notflew <- sum(d$flew_b[[row]] == 0) # total number of times did not fly among trails
d$num_notflew[[row]] <- n_notflew ####MLC: there was a typo here making this equal to n_flew
avg_mass <- mean(d$mass[[row]])
d$average_mass[[row]] <- avg_mass
}
d <- select(d, -filename, -channel_letter, -set_number)
model <- glmer(cbind(num_flew, num_notflew)~sex_c*host_c + (1|population), data=d, family=binomial)
tidy_regression(model, is_color=output_col)
install.packages(c("glmnet", "randomcoloR"))
rm(list=ls())
setwd("~/Documents/Florida soapberry project/2019 Dispersal/SBB-dispersal git/avbernat_working_on/stats") ####MLC: changed to my working directory
library(lme4)
library(rethinking)
install.package(rethinking)
install.packages(rethinking)
rm(list=ls())
output_col = FALSE # Recommend changing this to TRUE if working in Base R or RStudio, and FALSE if generating an html
source("src/clean_flight_data.R") # Script that loads and cleans up the data
rm(list=ls())
setwd("~/Documents/Florida soapberry project/2019 Dispersal/SBB-dispersal git/avbernat_working_on/stats") ####MLC: changed to my working directory
library(lme4)
library(rethinking)
wd
pwd
getwd()
library(dplyr)
library(tidyselect)
library(stringr)
library(glmnet)
library(ggplotify)
library(gridExtra)
library(ggformula)
library(randomcoloR)
rm(list=ls())
output_col = FALSE # Recommend changing this to TRUE if working in Base R or RStudio, and FALSE if generating an html
source("src/clean_flight_data.R")
getwd()
source("src/regression_output.R")
data <- read_flight_data("data/all_flight_data-Winter2020.csv")
rm(list=ls())
setwd("~/Documents/Florida soapberry project/2019 Dispersal/SBB-dispersal git/avbernat_working_on/stats/") ####MLC: changed to my working directory
