scale = (length(lut)-1)/(max-min)
final_ticks=seq(min/100, max/100, len=nticks)
#final_ticks = c("0.63", "0.66", "0.70", "0.74", "0.77")
final_ticks = c("0.63", "0.70", "0.77")
#dev.new(width=1.75, height=5)
plot(c(0,10), c(min,max), type='n', bty='n', xaxt='n', xlab='', yaxt='n', ylab='', main=title)
axis(2, ticks, las=1, labels=final_ticks)
for (i in 1:(length(lut)-1)) {
y = (i-1)/scale + min
rect(0,y,10,y+1/scale, col=lut[i], border=NA)
}
}
# generate small subset plots and scales in the top right hand corner
plot_histograms = function() {
x = 0.48
v = c(x-0.13,x, 0.85, 0.90)
par( fig=v, new=TRUE, mar=c(0,0,0,0) )
hist(df$wing2body[Frows], col="white", main="", cex.axis=0.9, ylim=c(0,50), breaks=10)
text(0.66,40, labels="w2b", cex=0.9)
x = 0.88
v = c(x-0.13, x, 0.85, 0.90)
par( fig=v, new=TRUE, mar=c(0,0,0,0) )
hist(df$wing2body[Mrows], col="white", main="",
cex.axis=0.9, ylim=c(0,50), xlim=c(0.64,0.78), breaks=10)
text(0.66,40, labels="w2b", cex=0.9)
}
plot_color_scale = function() {
x = 0.98
v = c(x-0.025, x, 0.75, 0.86)
par( fig=v, new=TRUE, mar=c(0,0,0,0) )
color.bar(colorRampPalette(c("black", "grey"))(1000), 63)
}
par(mai=c(1,0.9,0.4,0.05)) # bottom, right, top, left
plot1(df4,pp4)
par(mfrow=c(1,2), tcl=-0.5) # length of tick marks set at default
par(mai=c(1,0.9,0.4,0))
plot2(df5,pp5, pp4, gradient=TRUE, circles=FALSE, stochasticity=TRUE, points=FALSE)
par(mai=c(1,0.6,0.4,0.05))
plot3(df5,pp5, pp4, gradient=TRUE, circles=FALSE, stochasticity=TRUE, points=FALSE)
plot_histograms()
plot_color_scale()
# key = response in T2 - response in T1
Event = c("laid eggs in both trials", "laid eggs in T2 only", "laid eggs in neither trials", "laid eggs in T1 only")
Encoding = c(2, 1,0,-1)
key = cbind(Event, Encoding)
kable(key) %>%
kable_styling(bootstrap_options = c("striped", "hover", "condensed"))  %>%
kable_classic(html_font = "Cambria") %>%
add_header_above(c("Delta Egg Response Key" = 2 ))
# filtered for females and removed missing values
df = d[with(d,!is.na(flight_case) & !is.na(mass_per) & !is.na(egg_case) & sex=="F"),]
# ordered the dataset by ascending mass percent change values
df = df[with(df, order(mass_per)),]
# releveled the flight case factors so as to set 0 as the first level.
df$flight_case = relevel(as.factor(df$flight_case), ref = "0")
# no female bug only flew in T2, so dropped factor "1"
df$flight_case = droplevels(df$flight_case)
data = data.frame(R = df$flight_case,
A = df$egg_case,
B = df$mass_per,
C = df$host_c)
model_script = paste0(source_path,"generic multinomial models- multinom 1RF + 3 FF.R")
model_comparisonsAIC(model_script)
anova(m4, m7, test="Chisq") # Adding C does not improve fit
anova(m7, m13, test="Chisq") # Adding mass_per*host does not improve fit
data = data.frame(R = df$flight_case,
A = df$egg_case,
B = df$mass_per,
C = df$wing2body)
model_script = paste0(source_path,"generic multinomial models- multinom 1RF + 3 FF.R")
model_comparisonsAIC(model_script)
anova(m4, m7, test="Chisq") # adding wing2body does not improve fit
anova(m7, m13, test="Chisq") # Adding A*C does not improve fit
anova(m7, m12, test="Chisq") # Adding B*C does not improve fit
# same best fit model as the set of model comparisons in section 3.6.3
M6 = multinom(flight_case ~ mass_per + egg_case, data = df, trace=FALSE)
model_table6 = calculate_P2(M6, "mass_per", "egg_case")
# defined the run_multinom_model function based on the best fit model
run_multinom_model = function(d) {
m = multinom(flight_case ~ mass_per + egg_case, trace=FALSE, data = d)
model_table = calculate_P2(m, "mass_per", "egg_case", print_table=FALSE)
return(model_table)
}
# visuals of significant effects
par(mfrow=c(1,2))
mass_per_ML = get_significant_modelsf(15) # mass_per
mtext("Mass", side=3, adj=0, line=0.5, cex=1.5, font=1)
egg_case_ML = get_significant_modelsf(16) # egg_case
mtext("Egg Case", side=3, adj=0, line=0.3, cex=1.5, font=1)
pp = fitted(M6)
df$index = 1:nrow(df)
eggT1 = df[df$egg_case == -1,]
egg0 = df[df$egg_case == 0,]
egg2 = df[df$egg_case == 2,]
eggT2 = df[df$egg_case == 1,]
eggT1_rows = eggT1$index
egg_0rows = egg0$index
egg_2rows = egg2$index
eggT2_rows = eggT2$index
plot4 = function(df, pp) {
# only laid eggs in T1
plot(df$mass_per[eggT1_rows], pp[eggT1_rows,1], ylim=c(0,1.1), xlim=c(-36,108),
col=nf, type="l", lty=1,
ylab="Flight Case Probability",
xlab="% Mass Change From T1 to T2",
lwd=lweight_s,
cex.axis=c_ax-0.2, cex.lab=c_lab-0.2)
points(df$mass_per[eggT1_rows], pp[eggT1_rows,2], col=f1t1col, type="l", lty=1, cex=0.45, lwd=lweight_s)
points(df$mass_per[eggT1_rows], pp[eggT1_rows,3], col=f2col, type="l", lty=1, cex=0.45, lwd=lweight_s)
# no egg change
points(df$mass_per[egg_0rows], pp[egg_0rows,1], col=nf, type="l", lty=2, lwd=lweight_s)
points(df$mass_per[egg_0rows], pp[egg_0rows,2], col=f1t1col, type="l", lty=2, lwd=lweight_s)
points(df$mass_per[egg_0rows], pp[egg_0rows,3], col=f2col, type="l", lty=2, lwd=lweight_s)
# eggs twice
points(df$mass_per[egg_2rows], pp[egg_2rows,1], col=nf, type="l", lty=4, lwd=lweight_s)
points(df$mass_per[egg_2rows], pp[egg_2rows,2], col=f1t1col, type="l", lty=4, lwd=lweight_s)
points(df$mass_per[egg_2rows], pp[egg_2rows,3], col=f2col, type="l", lty=4, lwd=lweight_s)
# only laid eggs in T2
points(df$mass_per[eggT2_rows], pp[eggT2_rows,1], col=nf, type="l", lty=3, lwd=lweight_s)
points(df$mass_per[eggT2_rows], pp[eggT2_rows,2], col=f1t1col, type="l", lty=3, lwd=lweight_s)
points(df$mass_per[eggT2_rows], pp[eggT2_rows,3], col=f2col, type="l", lty=3, lwd=lweight_s)
text(70,0.68, labels="Flew in T1 only", col=f1t1col)
text(0,0.88, labels="Did Not Fly", col=nf_dark)
text(-20,0.55, labels="Flew Twice", col=f2col_dark)
mtext(expression(italic("Females")), side=3, adj=0.05, line=-2, cex=1.5, font=2)
legend(76, 1.11,
legend = c("laid eggs in T1",
"no eggs laid",
"eggs laid twice",
"laid eggs in T2"),
lty=1:4,
col="black",
cex=1.1)
}
pp6 = fitted(M6)
df6 = df
par(mai=c(1,0.9,0.4,0.05))
plot4(df6,pp6)
source("get_paper_figure.R")
pdf(file = "plots/figure5-newestS2-SR.pdf",
width = 10,
height = 10)
source("get_paper_figure.R")
pdf(file = "plots/figure5-newestS2-SR.pdf",
width = 10,
height = 10)
source("get_paper_figure.R")
pdf(file = "plots/figure5-newestS2-SR.pdf",
width = 10,
height = 10)
source("get_paper_figure.R")
dev.off()
pdf(file = "plots/figure5-newestS2-SR.pdf",
width = 10,
height = 10)
source("get_paper_figure.R")
dev.off()
pdf(file = "plots/figure5-newestS2-SR.pdf",
width = 10,
height = 10)
source("get_paper_figure.R")
dev.off()
pdf(file = "plots/figure5-newestS2-SR.pdf",
width = 10,
height = 10)
source("get_paper_figure.R")
dev.off()
pdf(file = "plots/figure5-newestS2-SR.pdf",
width = 10,
height = 10)
source("get_paper_figure.R")
dev.off()
pdf(file = "plots/figure5-newestS2-SR.pdf",
width = 10,
height = 10)
source("get_paper_figure.R")
dev.off()
?mtext
pdf(file = "plots/figure5-newestS2-SR.pdf",
width = 10,
height = 10)
source("get_paper_figure.R")
dev.off()
pdf(file = "plots/figure5-newestS2-SR.pdf",
width = 10,
height = 10)
source("get_paper_figure.R")
dev.off()
pdf(file = "plots/figure5-newestS2-SR.pdf",
width = 10,
height = 10)
source("get_paper_figure.R")
dev.off()
pdf(file = "plots/figure5-newestS2-SR.pdf",
width = 10,
height = 10)
source("get_paper_figure.R")
dev.off()
rm(list=ls())
setwd("/Users/anastasiabernat/Desktop/git_repositories/SBB-dispersal/avbernat/Dispersal/Winter_2020/stats")
library(lme4)
library(dplyr)
library(ggplotify)
library(gridExtra)
library(ggformula)
library(tidyselect)
library(zoo)
library(knitr)
library(kableExtra)
library(webshot)
knitr::opts_chunk$set(echo = TRUE)
source_path = "~/Desktop/git_repositories/SBB-dispersal/avbernat/Rsrc/"
script_names = c("center_flight_data.R", # Re-centers data
"clean_flight_data.R" # Loads and cleans data
)
for (script in script_names) {
path = paste0(source_path, script)
source(path)
}
data <- read_flight_data("data/all_flight_data-Winter2020.csv")
data_all <- data[[1]]
data_tested <- data[[2]]
all_data <- data_all %>%
filter(trial_type != "T2")
all_data <- center_data(all_data)
data_tested <- all_data[all_data$tested == "yes",]
data_tested <- center_data(data_tested)
Fall = read.csv("/Users/anastasiabernat/Desktop/git_repositories/SBB-dispersal/avbernat/Dispersal/Autumn_2019/stats/data/full_data-Fall2019.csv")
mass = Fall %>% filter(mass != 0)
#length(unique(mass$ID))
min30 = Fall %>% filter(set_number <= 30) # where is set002?
min60 = Fall %>% filter(set_number > 30 & set_number <= 52)
min90 = Fall %>% filter(set_number > 52 & set_number <= 71)
unlimited = Fall %>% filter(set_number >= 72)
T1 = data_all %>% filter(trial_type =="T1")
T2 = data_all %>% filter(trial_type =="T2")
n_30 = length(unique(min30$ID))
n_60 = length(unique(min60$ID))
n_90 = length(unique(min90$ID))
n_unlimited = length(unique(unlimited$ID))
season = c("Fall", "Fall", "Fall", "Fall", "Winter", "Winter")
year = c("2019","2019","2019","2019","2020","2020")
dates = c("October 15 to October 23", "October 23 to October 29",
"October 30 to November 4", "November 5 to November 8",
"February 17 to February 28", "March 3 to March 10")
exp_setup = c("30 min", "60 min", "90 min", "unlimited", "unlimited", "unlimited")
n_tested = c(n_30, n_60, n_90, n_unlimited, nrow(T1), nrow(T2))
wing_morph = c("short and long", "short and long","short and long","long","long","long")
table_season = cbind(season, year,dates, exp_setup, n_tested, wing_morph)
colnames(table_season) <- c("Season", "Year", "Dates", "Experimental Setup", "N Tested", "Wing Morph")
paper_table = kable(table_season) %>%
kable_styling(bootstrap_options = "striped", "hover", full_width = F)
paper_table
table_season
df <- knitr::kable(table_season, format = 'latex')
getwd()
outpath = "/Users/anastasiabernat/Desktop/git_repositories/SBB-dispersal/avbernat/Dispersal/Winter_2020/stats/tables/"
df <- knitr::kable(table_season, format = 'latex')
writeLines(df, paste0(outpath,"paper-table1.tex"))
save_kable(paper_table, paste0(outpath,"paper-table1.tex"))
save_kable(paper_table, paste0(outpath,"paper-table1.tex"), format = "latex")
save_kable(paper_table, paste0(outpath,"paper-table1.tex"), format = "latex")
save_kable(paper_table, paste0(outpath,"paper-table1.tex"), format = "latex", float=FALSE)
as_kable_extra(paper_table, format="latex")
library(gtsummary)
install.packages("gtsummary")
install.packages("gtsummary")
library(gtsummary)
Fall = read.csv("/Users/anastasiabernat/Desktop/git_repositories/SBB-dispersal/avbernat/Dispersal/Autumn_2019/stats/data/full_data-Fall2019.csv")
mass = Fall %>% filter(mass != 0)
#length(unique(mass$ID))
min30 = Fall %>% filter(set_number <= 30) # where is set002?
min90 = Fall %>% filter(set_number > 52 & set_number <= 71)
T1 = data_all %>% filter(trial_type =="T1")
n_60 = length(unique(min60$ID))
n_90 = length(unique(min90$ID))
n_unlimited = length(unique(unlimited$ID))
season = c("Fall", "Fall", "Fall", "Fall", "Winter", "Winter")
year = c("2019","2019","2019","2019","2020","2020")
dates = c("October 15 to October 23", "October 23 to October 29",
"October 30 to November 4", "November 5 to November 8",
"February 17 to February 28", "March 3 to March 10")
exp_setup = c("30 min", "60 min", "90 min", "unlimited", "unlimited", "unlimited")
n_tested = c(n_30, n_60, n_90, n_unlimited, nrow(T1), nrow(T2))
wing_morph = c("short and long", "short and long","short and long","long","long","long")
table_season = cbind(season, year,dates, exp_setup, n_tested, wing_morph)
colnames(table_season) <- c("Season", "Year", "Dates", "Experimental Setup", "N Tested", "Wing Morph")
paper_table = kable(table_season) %>%
kable_styling(bootstrap_options = "striped", "hover", full_width = F)
paper_table
?save_kable
save_kable(paper_table, paste0(outpath,"paper-table1.pdf"), keep_tex=TRUE)
df <- knitr::kable(table_season, format = 'latex')
writeLines(df, paste0(outpath,"paper-table1.tex"))
df <- knitr::kable(table_season, format = 'latex')
writeLines(df, paste0(outpath,"paper-table1-writelines.tex"))
save_kable(paper_table, paste0(outpath,"paper-table1-latex.tex"), format = "latex", float=FALSE)
save_kable(paper_table, paste0(outpath,"paper-table1-latex2.tex"), keep_tex=TRUE)
save_kable(paper_table, paste0(outpath,"paper-table1.pdf"))
paper_table = kable(table_season, caption=" ", table.attr = "style='width:60%;'") %>%
kable_styling(bootstrap_options = c("striped", "hover", "condensed"))  %>%
column_spec(1, width="0.5cm", background="white") %>%
kable_classic(html_font = "Arial") %>%
# row_spec(c(1:6), extra_css = "border-bottom: 1px solid") %>%
row_spec(seq(1,6,2), background = "#f5f5f5")
outpath = "/Users/anastasiabernat/Desktop/git_repositories/SBB-dispersal/avbernat/Dispersal/Winter_2020/stats/tables/"
outpath = "/Users/anastasiabernat/Desktop/git_repositories/SBB-dispersal/avbernat/Dispersal/Winter_2020/stats/tables/"
save_kable(paper_table, file = paste0(outpath,"paper-table1-latex2.png"), keep_tex = TRUE, zoom = 5)
save_kable(paper_table, file = paste0(outpath,"paper-table1-latex2.tex"))
paper_table = kable(table_season, caption=" ", table.attr = "style='width:60%;'") %>%
kable_styling(bootstrap_options = c("striped", "hover", "condensed"))  %>%
column_spec(1, width="0.5cm", background="white") %>%
kable_classic(html_font = "Arial") %>%
# row_spec(c(1:6), extra_css = "border-bottom: 1px solid") %>%
row_spec(seq(1,6,2), background = "#f5f5f5")
outpath = "/Users/anastasiabernat/Desktop/git_repositories/SBB-dispersal/avbernat/Dispersal/Winter_2020/stats/tables/"
save_kable(paper_table, file = paste0(outpath,"paper-table1-latex2.tex"))
paper_table
df <- knitr::kable(paper_table, format = 'latex')
df
writeLines(paper_table, paste0(outpath,"test.tex"))
paper_table = kable(table_season, caption=" ", table.attr = "style='width:60%;'") %>%
kable_styling(bootstrap_options = c("striped", "hover", "condensed"))  %>%
column_spec(1, width="0.5cm", background="white") %>%
kable_classic(html_font = "Arial") %>%
# row_spec(c(1:6), extra_css = "border-bottom: 1px solid") %>%
row_spec(seq(1,6,2), background = "#f5f5f5")
outpath = "/Users/anastasiabernat/Desktop/git_repositories/SBB-dispersal/avbernat/Dispersal/Winter_2020/stats/tables/"
writeLines(paper_table, paste0(outpath,"test.tex"))
paper_table = kable(table_season, caption=" ", table.attr = "style='width:60%;'", format='latex') %>%
kable_styling(bootstrap_options = c("striped", "hover", "condensed"))  %>%
column_spec(1, width="0.5cm", background="white") %>%
kable_classic(html_font = "Arial") %>%
# row_spec(c(1:6), extra_css = "border-bottom: 1px solid") %>%
row_spec(seq(1,6,2), background = "#f5f5f5")
paper_table = kable(table_season, caption=" ", format='latex') %>%
kable_styling(bootstrap_options = c("striped", "hover", "condensed"))  %>%
column_spec(1, width="0.5cm", background="white") %>%
kable_classic(html_font = "Arial") %>%
# row_spec(c(1:6), extra_css = "border-bottom: 1px solid") %>%
row_spec(seq(1,6,2), background = "#f5f5f5")
outpath = "/Users/anastasiabernat/Desktop/git_repositories/SBB-dispersal/avbernat/Dispersal/Winter_2020/stats/tables/"
writeLines(paper_table, paste0(outpath,"test.tex"))
paper_table_latex = kable(table_season, caption=" ", format='latex') %>%
kable_styling(bootstrap_options = c("striped", "hover", "condensed"))  %>%
column_spec(1, width="0.5cm", background="white") %>%
kable_classic(html_font = "Arial") %>%
# row_spec(c(1:6), extra_css = "border-bottom: 1px solid") %>%
row_spec(seq(1,6,2), background = "#f5f5f5")
paper_table_latex
paper_table_latex = kable(table_season, caption=" ", format='latex') %>%
kable_styling(bootstrap_options = c("striped", "hover", "condensed"))  %>%
# column_spec(1, width="0.5cm", background="white") %>%
kable_classic(html_font = "Arial") %>%
# row_spec(c(1:6), extra_css = "border-bottom: 1px solid") %>%
row_spec(seq(1,6,2), background = "#f5f5f5")
writeLines(paper_table_latex, paste0(outpath,"test.tex"))
paper_table_latex = kable(table_season, format='latex') %>%
kable_styling(bootstrap_options = c("striped", "hover", "condensed"))  %>%
kable_classic(html_font = "Arial") %>%
row_spec(seq(1,6,2), background = "#f5f5f5")
writeLines(paper_table_latex, paste0(outpath,"test.tex"))
paper_table = kable(table_season, caption=" ", table.attr = "style='width:60%;'") %>%
kable_styling(bootstrap_options = c("striped", "hover", "condensed"))  %>%
column_spec(1, width="0.5cm", background="white") %>%
kable_classic(html_font = "Arial") %>%
# row_spec(c(1:6), extra_css = "border-bottom: 1px solid") %>%
row_spec(seq(1,6,2), background = "#f5f5f5")
outpath = "/Users/anastasiabernat/Desktop/git_repositories/SBB-dispersal/avbernat/Dispersal/Winter_2020/stats/tables/"
save_kable(paper_table, file = paste0(outpath,"paper-table1-latex.png"), keep_tex = TRUE, zoom = 5)
Fall = read.csv("/Users/anastasiabernat/Desktop/git_repositories/SBB-dispersal/avbernat/Dispersal/Autumn_2019/stats/data/full_data-Fall2019.csv")
Fall = read.csv("/Users/anastasiabernat/Desktop/git_repositories/SBB-dispersal/avbernat/Dispersal/Autumn_2019/stats/data/full_data-Fall2019.csv")
mass = Fall %>% filter(mass != 0)
mass = Fall %>% filter(mass != 0)
#length(unique(mass$ID))
min30 = Fall %>% filter(set_number <= 30) # where is set002?
#length(unique(mass$ID))
min30 = Fall %>% filter(set_number <= 30) # where is set002?
min60 = Fall %>% filter(set_number > 30 & set_number <= 52)
min90 = Fall %>% filter(set_number > 52 & set_number <= 71)
min60 = Fall %>% filter(set_number > 30 & set_number <= 52)
min90 = Fall %>% filter(set_number > 52 & set_number <= 71)
unlimited = Fall %>% filter(set_number >= 72)
unlimited = Fall %>% filter(set_number >= 72)
T1 = data_all %>% filter(trial_type =="T1")
T1 = data_all %>% filter(trial_type =="T1")
T2 = data_all %>% filter(trial_type =="T2")
#length(unique(mass$ID))
min30 = Fall %>% filter(set_number <= 30) # where is set002?
min60 = Fall %>% filter(set_number > 30 & set_number <= 52)
min90 = Fall %>% filter(set_number > 52 & set_number <= 71)
unlimited = Fall %>% filter(set_number >= 72)
T1 = data_all %>% filter(trial_type =="T1")
T2 = data_all %>% filter(trial_type =="T2")
n_30 = length(unique(min30$ID))
n_60 = length(unique(min60$ID))
n_90 = length(unique(min90$ID))
n_unlimited = length(unique(unlimited$ID))
season = c("Fall", "Fall", "Fall", "Fall", "Winter", "Winter")
year = c("2019","2019","2019","2019","2020","2020")
dates = c("October 15 to October 23", "October 23 to October 29",
"October 30 to November 4", "November 5 to November 8",
"February 17 to February 28", "March 3 to March 10")
exp_setup = c("30 min", "60 min", "90 min", "unlimited", "unlimited", "unlimited")
exp_setup = c("30 min", "60 min", "90 min", "unlimited", "unlimited", "unlimited")
n_tested = c(n_30, n_60, n_90, n_unlimited, nrow(T1), nrow(T2))
wing_morph = c("short and long", "short and long","short and long","long","long","long")
wing_morph = c("short and long", "short and long","short and long","long","long","long")
table_season = cbind(season, year,dates, exp_setup, n_tested, wing_morph)
colnames(table_season) <- c("Season", "Year", "Dates", "Experimental Setup", "N Tested", "Wing Morph")
paper_table = kable(table_season) %>%
kable_styling(bootstrap_options = "striped", "hover", full_width = F)
paper_table
outpath = "/Users/anastasiabernat/Desktop/git_repositories/SBB-dispersal/avbernat/Dispersal/Winter_2020/stats/tables/"
save_kable(paper_table, paste0(outpath,"paper-table1.pdf"))
paper_table = kable(table_season, caption=" ", table.attr = "style='width:60%;'") %>%
kable_styling(bootstrap_options = c("striped", "hover", "condensed"))  %>%
column_spec(1, width="0.5cm", background="white") %>%
kable_classic(html_font = "Arial") %>%
# row_spec(c(1:6), extra_css = "border-bottom: 1px solid") %>%
row_spec(seq(1,6,2), background = "#f5f5f5")
outpath = "/Users/anastasiabernat/Desktop/git_repositories/SBB-dispersal/avbernat/Dispersal/Winter_2020/stats/tables/"
save_kable(paper_table, file = paste0(outpath,"paper-table1-latex.png"), keep_tex = TRUE, zoom = 5)
save_kable(paper_table, file = paste0(outpath,"paper-table1-latex.tex"))
save_kable(paper_table, file = paste0(outpath,"paper-table1-latex.tex"), keep_tex = TRUE)
writeLines(paper_table, paste0(outpath,"paper-table1-latex.tex"))
writeLines(paper_table, paste0(outpath,"paper-table1-latex.html"))
paper_table_latex = kable(table_season, format='latex') %>%
kable_styling(bootstrap_options = c("striped", "hover", "condensed"))  %>%
kable_classic(html_font = "Arial") %>%
row_spec(seq(1,6,2), background = "#f5f5f5")
writeLines(paper_table_latex, paste0(outpath,"paper-table1-latex.tex"))
paper_table_latex = kable(table_season, format='latex') %>%
kable_styling(bootstrap_options = c("striped", "hover", "condensed"))  %>%
kable_classic(html_font = "Arial") %>%
row_spec(seq(1,6,2), background = "#f5f5f5")
paper_table_latex
save_kable(paper_table_latex, file = paste0(outpath,"paper-table1-latex2.png"))
save_kable(paper_table_latex, file = paste0(outpath,"paper-table1-latex2.pdf"))
paper_table_latex = kable(table_season, format='latex', booktabs = T) %>%
kable_styling(bootstrap_options = c("striped", "hover", "condensed"))  %>%
kable_classic(html_font = "Arial") %>%
row_spec(seq(1,6,2), background = "#f5f5f5")
save_kable(paper_table_latex, file = paste0(outpath,"paper-table1-latex2.pdf"))
paper_table_latex = kable(table_season, format='latex', booktabs = T)  %>% kable_styling(latex_options = c("striped", "hold_position"))
save_kable(paper_table_latex, file = paste0(outpath,"paper-table1-latex2.pdf"))
paper_table_latex = kable(table_season, format='latex', booktabs = T)  %>% kable_styling(latex_options = c("striped", "scale_down"))
save_kable(paper_table_latex, file = paste0(outpath,"paper-table1-latex2.pdf"))
paper_table_latex = kable(table_season, booktabs = T)  %>% kable_styling(latex_options = c("striped", "scale_down"))
save_kable(paper_table_latex, file = paste0(outpath,"paper-table1-latex2.pdf"))
save_kable(paper_table_latex, file = paste0(outpath,"paper-table1-latex2.pdf"))
paper_table_latex = kable(table_season, format='latex', booktabs = T)  %>% kable_styling(latex_options = c("striped", "scale_down"))
save_kable(paper_table_latex, file = paste0(outpath,"paper-table1-latex2.pdf"))
writeLines(paper_table_latex, paste0(outpath,"paper-table1-latex.tex"))
?save_kable
paper_table_latex = kable(table_season, format='latex', booktabs = T)  %>% kable_styling(latex_options = c("striped", "scale_down")) %>%
row_spec(seq(1,6,2), background = "#f5f5f5")
save_kable(paper_table_latex, file = paste0(outpath,"paper-table1-latex2.pdf"))
writeLines(paper_table_latex, paste0(outpath,"paper-table1-latex.tex"))
paper_table_latex = kable(table_season, format='latex', booktabs = T)  %>% kable_styling(latex_options = c("striped", "scale_down")) %>%
row_spec(seq(1,6,2), background = "#f5f5f5") %>%
kable_classic(html_font = "Arial")
save_kable(paper_table_latex, file = paste0(outpath,"paper-table1-latex2.pdf"))
?row_spec
paper_table_latex = kable(table_season, format='latex', booktabs = T, linesep = "")  %>% kable_styling(latex_options = c("striped", "scale_down")) %>%
row_spec(seq(1,6,2), background = "#f5f5f5") %>%
kable_classic(html_font = "Arial")
save_kable(paper_table_latex, file = paste0(outpath,"paper-table1-latex2.pdf"))
paper_table_latex = kable(table_season, format='latex', booktabs = T, linesep = "\\addlinespace")  %>% kable_styling(latex_options = c("striped", "scale_down")) %>%
row_spec(seq(1,6,2), background = "#f5f5f5") %>%
kable_classic(html_font = "Arial")
save_kable(paper_table_latex, file = paste0(outpath,"paper-table1-latex2.pdf"))
writeLines(paper_table_latex, paste0(outpath,"paper-table1-latex.tex"))
paper_table_latex = kable(table_season, format='latex', booktabs = T, linesep = "\\addlinespace")  %>%
# kable(table_season, format='latex') %>%
kable_styling(latex_options = c("striped", "scale_down")) %>%
row_spec(seq(1,6,2), background = "#f5f5f5") %>%
kable_classic(html_font = "Arial") # Arial doesn't work
rm(list=ls())
dir = "~/Desktop/git_repositories/SBB-dispersal/avbernat/Dispersal/Winter_2020/stats/"
setwd(dir)
# tables
library(knitr)
library(kableExtra)
data <- read_flight_data("data/all_flight_data-Winter2020.csv")
data_all <- data[[1]]
source_path = "~/Desktop/git_repositories/SBB-dispersal/avbernat/Rsrc/"
script_names = c("center_flight_data.R", # Re-centers data
"clean_flight_data.R"
)
for (script in script_names) {
path = paste0(source_path, script)
source(path)
}
data <- read_flight_data("data/all_flight_data-Winter2020.csv")
data <- read_flight_data("data/all_flight_data-Winter2020.csv")
data_all <- data[[1]]
data_tested <- data[[2]]
d <- create_delta_data(data_tested)
source_path = "~/Desktop/git_repositories/SBB-dispersal/avbernat/Rsrc/"
script_names = c("center_flight_data.R", # Re-centers data
"clean_flight_data.R", # Loads and cleans data
"unique_flight_data.R"
)
for (script in script_names) {
path = paste0(source_path, script)
source(path)
}
data <- read_flight_data("data/all_flight_data-Winter2020.csv")
data_all <- data[[1]]
data_tested <- data[[2]]
d <- create_delta_data(data_tested)
