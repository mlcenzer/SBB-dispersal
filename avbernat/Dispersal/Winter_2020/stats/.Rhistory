source(path)
}
d = create_delta_data(data_tested, remove_bugs_tested_once=TRUE) # remove bugs tested only once
Event = c("flew in both trials", "flew in T2 only", " flew in neither trials", "flew in T1 only")
Encoding = c(2, 1,0,-1)
key = cbind(Event, Encoding)
kable(key) %>%
kable_styling(bootstrap_options = c("striped", "hover", "condensed"))  %>%
kable_classic(html_font = "Cambria") %>%
add_header_above(c("Delta Flight Response Key" = 2 ))
Event = c("gained % mass from T1 to T2", "no % mass change between trails", "lost % mass from T1 to T2")
Sign = c("+","0","-")
key = cbind(Event, Sign)
kable(key) %>%
kable_styling(bootstrap_options = c("striped", "hover", "condensed"))  %>%
kable_classic(html_font = "Cambria") %>%
add_header_above(c("Delta Percent Mass Key (%)" = 2 ))
Host = c("Golden Rain Tree (GRT)", "Balloon Vine (BV)")
Encoding = c(1,-1)
key = cbind(Host, Encoding)
kable(key)  %>%
kable_styling(bootstrap_options = c("striped", "hover", "condensed"))  %>%
kable_classic(html_font = "Cambria") %>%
add_header_above(c("Host Plant Key" = 2 ))
Sex = c("Female", "Male")
Encoding = c(1,-1)
key = cbind(Sex, Encoding)
kable(key)  %>%
kable_styling(bootstrap_options = c("striped", "hover", "condensed"))  %>%
kable_classic(html_font = "Cambria") %>%
add_header_above(c("Sex Key" = 2 ))
# remove any missing values for flight case or mass percent change between trials
df = d[with(d,!is.na(flight_case) & !is.na(mass_per)),]
# order the dataset by ascending mass percent change values
df = df[with(df, order(mass_per)),]
# relevel the flight case factors so as to set 0 as the first level.
df$flight_case = relevel(as.factor(df$flight_case), ref = "0")
null = multinom(flight_case ~ 1, data = df)
data = data.frame(R = df$flight_case,
A = df$mass_per,
B = df$sex_c,
C = df$host_c)
model_script = paste0(source_path,"generic multinomial models- multinom 1RF + 3 FF.R")
model_comparisonsAIC(model_script)
anova(m4, m7, test="Chisq") # Adding C (host plant) does not improve fit
anova(m4, m8, test="Chisq") # Adding A*B does not improve fit
M4 = multinom(flight_case ~ mass_per + sex_c, data = df)
model_table4 = calculate_P2(M4, "mass_per", "sex_c")
df$wing2body_c = df$wing2body - mean(df$wing2body) # re-center the w2b predictor
data = data.frame(R = df$flight_case,
A = df$mass_per,
B = df$sex_c,
C = df$wing2body_c)
model_script = paste0(source_path,"generic multinomial models- multinom 1RF + 3 FF.R")
model_comparisonsAIC(model_script)
anova(m7, m12, test="Chisq") # adding A*C does not improve fit
anova(m7, m13, test="Chisq") # Adding B*C does not improve fit
M5 = multinom(flight_case ~ mass_per + sex_c + wing2body_c, data = df)
model_table5 = calculate_P3(M5)
get_prediction_eq = function(tb, table_rowA, table_rowB, var_lab1, var_lab2, var_lab3,
log_lab, title_lab) {
I = (tb[table_rowA,1] - tb[table_rowB,1])
M = (tb[table_rowA,2] - tb[table_rowB,2])
S = (tb[table_rowA,3] - tb[table_rowB,3])
W = (tb[table_rowA,4] - tb[table_rowB,4])
EQ = paste0(log_lab, round(I, 2), " + ", round(M,2), var_lab1, " + ", round(S, 2),
var_lab2, " + ", round(W, 2), var_lab3, title_lab)
print(EQ)
return(EQ)
}
EQ1 = get_prediction_eq(model_table5, 1, 2, " Mass %", " Sex", " Wing-to-Body",
"log(pi_-1 / pi_1) = ","   Flew in T1, not T2")
EQ2 = get_prediction_eq(model_table5, 3, 1, " Mass %", " Sex", " Wing-to-Body",
"log(pi_2 / pi_-1) = ", "   Flew in both, not T1" )
EQ3 = get_prediction_eq(model_table5, 3, 2, " Mass %", " Sex", " Wing-to-Body",
"log(pi_2 / pi_1) = ", "   Flew in both, not T2" )
# define a run_multinom_model function based on the best fit model
run_multinom_model = function(d) {
m = multinom(flight_case ~ mass_per + sex_c + wing2body_c, trace=FALSE, data = d)
model_table = calculate_P3(m, print_table=FALSE)
return(model_table)
}
# determine which multinomial model equations are significant with a plot
par(mfrow=c(2,2))
mass_per_ML = get_significant_models(19) # % mass
mtext("A. Mass", side=3, adj=0, line=0.5, cex=1.3, font=1)
sex_ML = get_significant_models(20) # sex
mtext("B. Sex", side=3, adj=0, line=0.5, cex=1.3, font=1)
w2b_ML = get_significant_models(21) # wing2body
mtext("C. Wing2Body", side=3, adj=0, line=0.5, cex=1.3, font=1)
head(pp <- fitted(M4),3) # compute fitted values of the best fit model without wing-to-body ratio
df$index = 1:nrow(df)
females = df[df$sex=="F",]
males = df[df$sex=="M",]
Frows = females$index
Mrows = males$index
plot1 = function(df, pp) {
plot(df$mass_per[Frows], pp[Frows,1], ylim=c(0,1), xlim=c(-40,104), col="red",
type="l",
ylab="Flight Case Probability",
xlab="Percent Mass Change From T1 to T2 (%)", lty=1, cex.axis=1.2, cex.lab=1.3)
points(df$mass_per[Mrows], pp[Mrows,1], col="red", type="l", cex=0.45, lty=2)
points(df$mass_per[Frows], pp[Frows,2], col="blue", type="l")
points(df$mass_per[Mrows], pp[Mrows,2], col="blue", type="l", cex=0.45, lty=2)
points(df$mass_per[Frows], pp[Frows,3], col="darkgreen", cex=0.45, type="l", pch=16)
points(df$mass_per[Mrows], pp[Mrows,3], col="darkgreen", type="l", cex=0.45, lty=2)
points(df$mass_per[Frows], pp[Frows,4], col="darkred", type="l")
points(df$mass_per[Mrows], pp[Mrows,4], col="darkred", type="l", cex=0.45, lty=2)
mtext("A", side=3, adj=0.01, line=0.5, cex=1.5, font=2)
text(68,0.7, labels="Flew in T1 only", col="blue")
text(-27,0.9, labels="Did Not Fly", col="red")
text(13,0.37, labels="Flew Twice", col="darkred")
text(75, 0.05, labels="Flew in T2 only", col="darkgreen")
legend(83, 1.0,
legend = c("female","male"),
lty=1:2,
col="black",
cex=1.1)
}
pp4 <- fitted(M4)
df4 <- df
plot1(df4,pp4)
head(pp <- fitted(M5), 3) # compute fitted values of the best fit model with wing-to-body ratio
df$index = 1:nrow(df)
females = df[df$sex=="F",]
males = df[df$sex=="M",]
Frows = females$index
Mrows = males$index
plot2 = function(df, pp, PP, gradient=TRUE, circles=TRUE, stochasticity=TRUE, points=TRUE) {
c1 = 0.65
c2 = 1.2
df$w2b_col = 0
if (stochasticity) {
plot(df$mass_per[Frows], pp[Frows,1], ylim=c(0,1), xlim=c(-40,104), col="red",type="l",
ylab="Flight Case Probability", xlab="Percent Change in Mass From T1 to T2 (%)",
lty=1, cex.axis=1.2, cex.lab=1.3)
points(df$mass_per[Frows], pp[Frows,2], col="blue", type="l")
points(df$mass_per[Frows], pp[Frows,4], col="darkorange1", type="l") #darkred
}
if (points){
plot(df$mass_per[Frows], PP[Frows,1], ylim=c(0,1), xlim=c(-40,104), col="red",type="l",
ylab="Flight Case Probability", xlab="Percent Change in Mass From T1 to T2 (%)",
lty=1, cex.axis=1.2, cex.lab=1.3)
points(df$mass_per[Frows], PP[Frows,2], col="blue", type="l")
points(df$mass_per[Frows], PP[Frows,4], col="darkorange1", type="l") #darkred
}
mtext(expression(italic("Females")), side=3, adj=0.05, line=-2, cex=1.5, font=2)
mtext("B", side=3, adj=0.01, line=0.5, cex=1.5, font=2)
text(64,0.7, labels="Flew in T1 only", col="blue", cex=c2)
text(22,0.85, labels="Did Not Fly", col="red", cex=c2)
text(82,0.37, labels="Flew Twice", col="darkorange3", cex=c2) #maroon
if (gradient) {
rbPal <- colorRampPalette(c('black','red'))
df$w2b_col <- rbPal(10)[as.numeric(cut(df$wing2body,breaks = 10))]
points(df$mass_per[Frows], pp[Frows, 1], pch=20, col=df$w2b_col[Frows])
rbPal <- colorRampPalette(c('black','royalblue1'))
df$w2b_col <- rbPal(10)[as.numeric(cut(df$wing2body,breaks = 10))]
points(df$mass_per[Frows], pp[Frows, 2], pch=20, col=df$w2b_col[Frows])
rbPal <- colorRampPalette(c('black','orange')) # violetred1
df$w2b_col <- rbPal(10)[as.numeric(cut(df$wing2body,breaks = 10))]
points(df$mass_per[Frows], pp[Frows, 4], pch=20, col=df$w2b_col[Frows])
}
if (circles) {
# Mark points in the graph with high wing2body ratio vs. points with low wing2body ratio.
test <- df[with(df, order(wing2body)),] # ascending order
small = test %>%
filter(sex =="F", wing2body < 0.7184934)
large = test %>%
filter(sex == "F", wing2body > 0.7184934)
srows = small$index
lrows = large$index
points(df$mass_per[lrows], pp[lrows,1], col="red", type="p", cex=c1, pch=16)
points(df$mass_per[srows], pp[srows,1], col="red", type="p", cex=c1)
# those with smaller wing2body ratio were more likely to NOT fly
points(df$mass_per[lrows], pp[lrows,2], col="blue", type="p", cex=c1, pch=16)
points(df$mass_per[srows], pp[srows,2], col="blue", type="p", cex=c1)
points(df$mass_per[lrows], pp[lrows,4], col="darkred", type="p", cex=c1, pch=16)
points(df$mass_per[srows], pp[srows,4], col="darkred", type="p", cex=c1)
}
}
pp5 = pp
df5 = df
plot3 = function(df, pp, PP, gradient=TRUE, circles=TRUE, stochasticity=TRUE, points=TRUE) {
c1 = 0.65
c2 = 1.2
df$w2b_col = 0
if (stochasticity) {
plot(df$mass_per[Mrows], pp[Mrows,1], ylim=c(-0.00,0.8+0.05), xlim=c(-25,58), col="red",type="l",
ylab=" ", xlab="Percent Mass Change from T1 to T2 (%)",
lty=1, cex.axis=1.2, cex.lab=1.3)
points(df$mass_per[Mrows], pp[Mrows,2], col="blue", type="l", cex=0.45, lty=1)
points(df$mass_per[Mrows], pp[Mrows,3], col="darkgreen", type="l", cex=0.45, lty=1)
points(df$mass_per[Mrows], pp[Mrows,4], col="darkorange1", type="l", cex=0.45, lty=1) # darkred
}
if (points) {
plot(df$mass_per[Mrows], PP[Mrows,1], ylim=c(-0.00,0.8), xlim=c(-25,58), col="red",type="l",
ylab=" ", xlab="Percent Mass Change from T1 to T2 (%)",
lty=1, cex.axis=1.2, cex.lab=1.3)
points(df$mass_per[Mrows], PP[Mrows,2], col="blue", type="l", cex=0.45, lty=1)
points(df$mass_per[Mrows], PP[Mrows,3], col="darkgreen", type="l", cex=0.45, lty=1)
points(df$mass_per[Mrows], PP[Mrows,4], col="darkorange1", type="l", cex=0.45, lty=1) # darkred
}
mtext(expression(italic("Males")), side=3, adj=0.05, line=-2, cex=1.5, font=2)
mtext("C", side=3, adj=0.01, line=0.5, cex=1.5, font=2)
text(22,0.35, labels="Flew in T1 only", col="blue", cex=c2)
text(52,0.17, labels="Did Not Fly", col="red", cex=c2)
text(-16, 0, labels="Flew in T2 only", col="darkgreen", cex=c2)
text(-17,0.69, labels="Flew Twice", col="darkorange3", cex=c2) # 13,0.77, maroon, 13,0.77
if (circles) {
legend(39, .81+0.05,
pch=c(16,1),
title="Wing-to-body",
legend=c("> mean", "< mean"),
cex=1.1)
}
if (gradient) {
text(50,0.84, labels="Wing-to-body", cex=c2)
}
if (gradient) {
rbPal <- colorRampPalette(c('black','red'))
df$w2b_col <- rbPal(10)[as.numeric(cut(df$wing2body,breaks = 10))]
points(df$mass_per[Mrows], pp[Mrows, 1], pch=20, col=df$w2b_col[Mrows])
rbPal <- colorRampPalette(c('black','royalblue1'))
df$w2b_col <- rbPal(10)[as.numeric(cut(df$wing2body,breaks = 10))]
points(df$mass_per[Mrows], pp[Mrows, 2], pch=20, col=df$w2b_col[Mrows])
rbPal <- colorRampPalette(c('black','palegreen2'))
df$w2b_col <- rbPal(10)[as.numeric(cut(df$wing2body,breaks = 10))]
points(df$mass_per[Mrows], pp[Mrows, 3], pch=20, col=df$w2b_col[Mrows])
rbPal <- colorRampPalette(c('black','orange')) #violetred1
df$w2b_col <- rbPal(10)[as.numeric(cut(df$wing2body,breaks = 10))]
points(df$mass_per[Mrows], pp[Mrows, 4], pch=20, col=df$w2b_col[Mrows])
}
if (circles) {
# Mark points in the graph with high wing2body ratio vs. points with low wing2body ratio.
test <- df[with(df, order(wing2body)),] # ascending order
small = test %>%
filter(sex =="M", wing2body < 0.7184934)
large = test %>%
filter(sex == "M", wing2body > 0.7184934)
srows = small$index
lrows = large$index
points(df$mass_per[lrows], pp[lrows,1], col="red", type="p", cex=c1, pch=16)
points(df$mass_per[srows], pp[srows,1], col="red", type="p", cex=c1)
# those with smaller wing2body ratio were more likely to NOT fly
points(df$mass_per[lrows], pp[lrows,2], col="blue", type="p", cex=c1, pch=16)
points(df$mass_per[srows], pp[srows,2], col="blue", type="p", cex=c1)
points(df$mass_per[lrows], pp[lrows,3], col="darkgreen", type="p", cex=c1, pch=16)
points(df$mass_per[srows], pp[srows,3], col="darkgreen", type="p", cex=c1)
points(df$mass_per[lrows], pp[lrows,4], col="darkred", type="p", cex=c1, pch=16)
points(df$mass_per[srows], pp[srows,4], col="darkred", type="p", cex=c1)
}
}
# Function to plot color bar
color.bar <- function(lut, min, max=77, nticks=3, ticks=seq(min, max, len=nticks), title='') {
scale = (length(lut)-1)/(max-min)
final_ticks=seq(min/100, max/100, len=nticks)
#final_ticks = c("0.63", "0.66", "0.70", "0.74", "0.77")
final_ticks = c("0.63", "0.70", "0.77")
#dev.new(width=1.75, height=5)
plot(c(0,10), c(min,max), type='n', bty='n', xaxt='n', xlab='', yaxt='n', ylab='', main=title)
axis(2, ticks, las=1, labels=final_ticks)
for (i in 1:(length(lut)-1)) {
y = (i-1)/scale + min
rect(0,y,10,y+1/scale, col=lut[i], border=NA)
}
}
# generate small subset plots and scales in the top right hand corner
plot_histograms = function() {
x = 0.48
v <- c(x-0.13,x, 0.85, 0.90)
par( fig=v, new=TRUE, mar=c(0,0,0,0) )
hist(df$wing2body[Frows], col="white", main="", cex.axis=0.9, breaks=seq(0.62,0.77, by=0.01))
text(0.64,45, labels="w2b", cex=0.9)
x = 0.88
v <- c(x-0.13, x, 0.85, 0.90)
par( fig=v, new=TRUE, mar=c(0,0,0,0) )
hist(df$wing2body[Mrows], col="white", main="", cex.axis=0.9, breaks=seq(0.62,0.77, by=0.01))
text(0.66,40, labels="w2b", cex=0.9)
}
plot_color_scale = function() {
x = 0.98
v <- c(x-0.025, x, 0.75, 0.86)
par( fig=v, new=TRUE, mar=c(0,0,0,0) )
color.bar(colorRampPalette(c("black", "grey"))(1000), 63)
}
par(mfrow=c(1,2), tcl=-0.5) # length of tick marks set at default
par(mai=c(1,0.85,0.4,0)) # bottom, right, top, left
plot2(df5,pp5, pp4, gradient=TRUE, circles=FALSE, stochasticity=TRUE, points=FALSE)
par(mai=c(1,0.6,0.4,0.05))
plot3(df5,pp5, pp4, gradient=TRUE, circles=FALSE, stochasticity=TRUE, points=FALSE)
plot_histograms()
plot_color_scale()
# key = response in T2 - response in T1
Event = c("laid eggs in both trials", "laid eggs in T2 only", "laid eggs in neither trials", "laid eggs in T1 only")
Encoding = c(2, 1,0,-1)
key = cbind(Event, Encoding)
kable(key) %>%
kable_styling(bootstrap_options = c("striped", "hover", "condensed"))  %>%
kable_classic(html_font = "Cambria") %>%
add_header_above(c("Delta Egg Response Key" = 2 ))
# filter for females &
# remove any missing values for flight case, mass percent change, and egg case between trials
df = d[with(d,!is.na(flight_case) & !is.na(mass_per) & !is.na(egg_case) & sex=="F"),]
# order the dataset by ascending mass percent change values
df = df[with(df, order(mass_per)),]
# relevel the flight case factors so as to set 0 as the first level.
df$flight_case = relevel(as.factor(df$flight_case), ref = "0")
unique(df$flight_case) # no female bug only flew in T2, so can drop factor "1"
df$flight_case = droplevels(df$flight_case)
null <- multinom(flight_case ~ 1, data = df)
data <- data.frame(R = df$flight_case,
A = df$egg_case,
B = df$mass_per,
C = df$host_c)
model_script = paste0(source_path,"generic multinomial models- multinom 1RF + 3 FF.R")
model_comparisonsAIC(model_script)
anova(m4, m7, test="Chisq") # Adding C does not improve fit
anova(m7, m13, test="Chisq") # Adding mass_per*host does not improve fit
data <- data.frame(R = df$flight_case,
A = df$egg_case,
B = df$mass_per,
C = df$wing2body)
model_script = paste0(source_path,"generic multinomial models- multinom 1RF + 3 FF.R")
model_comparisonsAIC(model_script)
anova(m4, m7, test="Chisq") # adding wing2body does not improve fit
anova(m7, m13, test="Chisq") # Adding A*C does not improve fit
anova(m7, m12, test="Chisq") # Adding B*C does not improve fit
M6 = multinom(flight_case ~ mass_per + egg_case, data = df) # same top model
model_table6 = calculate_P2(M6, "mass_per", "egg_case")
get_prediction_eq = function(tb, table_rowA, table_rowB, var_lab1, var_lab2,
log_lab, title_lab) {
I = (tb[table_rowA,1] - tb[table_rowB,1])
M = (tb[table_rowA,2] - tb[table_rowB,2])
E = (tb[table_rowA,3] - tb[table_rowB,3])
EQ = paste0(log_lab, round(I, 2), " + ", round(M,2), var_lab1, " + ", round(E, 2),
var_lab2, title_lab)
print(EQ)
return(EQ)
}
EQ = get_prediction_eq(model_table6, 1, 2, " Mass %", " Egg Case",
"log(pi_-1 / pi_1) = ","   Flew in T1, not T2")
# define a run_multinom_model function based on the best fit model
run_multinom_model = function(d) {
m <- multinom(flight_case ~ mass_per + egg_case, trace=FALSE, data = d)
model_table = calculate_P2(m, "mass_per", "egg_case", print_table=FALSE)
return(model_table)
}
# determine which multinomial model equations are significant with a plot
par(mfrow=c(1,2))
mass_per_ML = get_significant_modelsf(15, effect_cat="mass_per") # mass_per
mtext("A. Mass", side=3, adj=0, line=0.5, cex=1.6, font=1)
egg_case_ML = get_significant_modelsf(16) # egg_case
mtext("B. Egg \nResponse", side=3, adj=0, line=0.3, cex=1.6, font=1)
data_fem = data_tested[data_tested$sex=="F",]
binary_counts <- table(data_fem$eggs_b, data_fem$trial_type)[,2:3]
par(mfrow=c(1,2))
barplot(binary_counts, ylab="Frequency",
xlab="Trial", col=c("#b57783","#820331"),
legend = c("no eggs", "yes eggs"), ylim=c(0,110), beside=TRUE)
head(pp <- fitted(M6),3)
df$index = 1:nrow(df)
eggT1 = df[df$egg_case == -1,]
egg0 = df[df$egg_case == 0,]
egg2 = df[df$egg_case == 2,]
eggT2 = df[df$egg_case == 1,]
eggT1_rows = eggT1$index
egg_0rows = egg0$index
egg_2rows = egg2$index
eggT2_rows = eggT2$index
plot4 = function(df, pp) {
# only laid eggs in T1
plot(df$mass_per[eggT1_rows], pp[eggT1_rows,1], ylim=c(0,1.05), xlim=c(-36,108), col="red", type="l", lty=1,main="Females Only", ylab="Flight Case Probability", xlab="Percent Change in Mass From T1 to T2 (%)")
points(df$mass_per[eggT1_rows], pp[eggT1_rows,2], col="blue", type="l", lty=1, cex=0.45)
points(df$mass_per[eggT1_rows], pp[eggT1_rows,3], col="black", type="l", lty=1, cex=0.45)
# no egg change
points(df$mass_per[egg_0rows], pp[egg_0rows,1], col="red", type="l", lty=2) # did not fly in either
points(df$mass_per[egg_0rows], pp[egg_0rows,2], col="blue", type="l", lty=2) # flew in T1 only
points(df$mass_per[egg_0rows], pp[egg_0rows,3], col="black", type="l", lty=2) # flew in both
# eggs twice
points(df$mass_per[egg_2rows], pp[egg_2rows,1], col="red", type="l", lty=4) # did not fly in either
points(df$mass_per[egg_2rows], pp[egg_2rows,2], col="blue", type="l", lty=4) # flew in T1 only
points(df$mass_per[egg_2rows], pp[egg_2rows,3], col="black", type="l", lty=4) # flew in both
# only laid eggs in T2
points(df$mass_per[eggT2_rows], pp[eggT2_rows,1], col="red", type="l", lty=3) # flew in neither
points(df$mass_per[eggT2_rows], pp[eggT2_rows,2], col="blue", type="l", lty=3) # flew in T1 only
points(df$mass_per[eggT2_rows], pp[eggT2_rows,3], col="black", type="l", lty=3) # flew in both
text(70,0.68, labels="Flew in T1 only", col="blue") # 0.059,0.54
text(-20,0.95, labels="Did Not Fly", col="red") # -0.036,0.95
text(-20,0.55, labels="Flew Twice", col="black") # -0.02,0.35
legend(76, 1.07,
legend = c("laid eggs in T1","no eggs laid", "eggs laid twice", "laid eggs in T2"),
lty=1:4,
col="black",
cex=0.8)
}
pp6 = fitted(M6)
df6 = df
plot4(df6,pp6)
library(cvms) # cross-validating regressions
script_names = c("clean_flight_data-Fall2.R", # 1 function: clean_flight_data.Fall()
"unique_flight_data-Fall.R", # 1 function: create_delta_data.Fall()
"prediction_accuracy.R", # 1 function: calculate_accuracy()
"confusion_matrix.R") # 1 function: get_confusion_matrix()
for (script in script_names) {
path = paste0(source_path, script)
source(path)
}
read.csv("/Users/anastasiabernat/Desktop/mother_laying_bydate.csv")
data = read.csv("/Users/anastasiabernat/Desktop/mother_laying_bydate.csv")
data = read.csv("/Users/anastasiabernat/Desktop/mother_laying_bydate2.csv")
data = read.csv("/Users/anastasiabernat/Desktop/mother_laying_bydate2.csv")
data
library(dplyr)
data
View(data)
data %>% group_by(MID)
test = data %>% group_by(MID)
test
data[, c("MID", "n_eggs")]
d = data[, c("MID", "n_eggs")]
test = d %>% group_by(MID)
test
test = d %>% group_by(MID, n_eggs)
test
group_by((d, MID), vars(n_eggs), funs(sum(.,na.rm=TRUE)))
summarise_at(group_by(d, MID), vars(n_eggs), funs(sum(.,na.rm=TRUE)))
test = summarise_at(group_by(d, MID), vars(n_eggs), funs(sum(.,na.rm=TRUE)))
test
test[1,]
test[-1,]
test["114",]
test[42,]
test[32,]
test[22,]
test[12,]
test[14,]
test[15,]
View(test)
test
mean(test$n_eggs)
data = read.csv("/Users/anastasiabernat/Desktop/mother_laying_bydate3.csv")
data = read.csv("/Users/anastasiabernat/Desktop/mother_laying_bydate.csv")
data
unique(data)
unique(data$collect_date)
unique(data$collect_date)[1:5]
data[data$collect_date == unique(data$collect_date)[1:5],]
dates = unique(data$collect_date)[1:5]
data[data$collect_date == dates,]
data[data$collect_date == dates[1],]
data[data$collect_date == dates[2],]
data[data$collect_date == dates[3],]
data[data$collect_date == dates[4],]
data[data$collect_date == dates[5],]
dates = unique(data$collect_date)[1:5]
data[data$collect_date == dates[1] |
data$collect_date == dates[2] |
data$collect_date == dates[3] |
data$collect_date == dates[4] |
data$collect_date == dates[5]
,]
test = data[data$collect_date == dates[1] |
data$collect_date == dates[2] |
data$collect_date == dates[3] |
data$collect_date == dates[4] |
data$collect_date == dates[5]
,]
test
data = read.csv("/Users/anastasiabernat/Desktop/mother_laying_bydate2.csv")
data = read.csv("/Users/anastasiabernat/Desktop/mother_laying_bydate.csv")
dates = unique(data$collect_date)[1:5]
twoweeks = data[data$collect_date == dates[1] |
data$collect_date == dates[2] |
data$collect_date == dates[3] |
data$collect_date == dates[4] |
data$collect_date == dates[5]
,]
d = twoweeks[, c("MID", "n_eggs")]
test = summarise_at(group_by(d, MID), vars(n_eggs), funs(sum(.,na.rm=TRUE)))
mean(test$n_eggs) # mean is about 27 eggs
install.packages("lubridate")
rm(list=ls())
setwd("~/Desktop/git_repositories/SBB-dispersal/avbernat/Dispersal/Winter_2020/stats/")
# For Modeling
library(lme4)
# For Data Summaries and Manipulation
library(dplyr)
library(mosaic)
library(lubridate)
# For Plotting
library(ggplotify)
library(gridExtra) # "grid" graphics
knitr::opts_chunk$set(echo = TRUE)
ggplot2::theme_set(ggplot2::theme_bw())
ggplot2::theme_update(panel.grid.major = ggplot2::element_line(colour = "grey75"))
source_path = "~/Desktop/git_repositories/SBB-dispersal/avbernat/Rsrc/"
script_names = c("center_flight_data.R", # Re-centers data
"clean_flight_data.R", # Loads and cleans data
"get_warnings.R",
"compare_models.R",
"regression_output.R", # Cleans regression outputs; prints in color or B&W
"AICprobabilities.R",
"get_Akaike_weights.R",
"plotting-lm.R",
"plotting-lm2.R",
"plotting-polyreg.R")
for (script in script_names) {
path = paste0(source_path, script)
source(path)
}
output_col = FALSE # Change to TRUE if working in Base R or RStudio; FALSE if generating an HTML
data <- read_flight_data("data/all_flight_data-Winter2020.csv")
